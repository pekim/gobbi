<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gdkpixbuf on gobbi</title>
    <link>/api/gdkpixbuf/</link>
    <description>Recent content in gdkpixbuf on gobbi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/api/gdkpixbuf/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>bitfields</title>
      <link>/api/gdkpixbuf/bitfields/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api/gdkpixbuf/bitfields/</guid>
      <description></description>
    </item>
    
    <item>
      <title>constants</title>
      <link>/api/gdkpixbuf/constants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api/gdkpixbuf/constants/</guid>
      <description>PIXBUF_FEATURES_H
GDK_PIXBUF_FEATURES_H
 PIXBUF_MAJOR
Major version of gdk-pixbuf library, that is the &amp;ldquo;0&amp;rdquo; in &amp;ldquo;0.8.2&amp;rdquo; for example.
GDK_PIXBUF_MAJOR
 PIXBUF_MICRO
Micro version of gdk-pixbuf library, that is the &amp;ldquo;2&amp;rdquo; in &amp;ldquo;0.8.2&amp;rdquo; for example.
GDK_PIXBUF_MICRO
 PIXBUF_MINOR
Minor version of gdk-pixbuf library, that is the &amp;ldquo;8&amp;rdquo; in &amp;ldquo;0.8.2&amp;rdquo; for example.
GDK_PIXBUF_MINOR
 PIXBUF_VERSION
Contains the full version of the gdk-pixbuf header as a string. This is the version being compiled against; contrast with #gdk_pixbuf_version.</description>
    </item>
    
    <item>
      <title>enums</title>
      <link>/api/gdkpixbuf/enums/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/api/gdkpixbuf/enums/</guid>
      <description>Colorspace
This enumeration defines the color spaces that are supported by the gdk-pixbuf library. Currently only RGB is supported.
GdkColorspace
  GDK_COLORSPACE_RGB 0 Indicates a red/green/blue additive color space.    InterpType
This enumeration describes the different interpolation modes that can be used with the scaling functions. @GDK_INTERP_NEAREST is the fastest scaling method, but has horrible quality when scaling down. @GDK_INTERP_BILINEAR is the best choice if you aren&amp;rsquo;t sure what to choose, it has a good speed/quality balance.</description>
    </item>
    
  </channel>
</rss>