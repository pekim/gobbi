[
{
	"uri": "https://pekim.github.io/gobbi/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": " gobbi gobject bindings\ngobbi is a set of generated Go bindings for gobject based libraries. There are bindings, with varying degrees of completeness, for gtk, gdk, gdkpixbuf, gio, gobject, and glib.\nThe intention is to provide the bindings required for writing gtk applications. So the focus is on supporting functions in the higher level libraries such as gtk, gdk, gdkpixbuf and gio. Much of the functionality provided by the lower level libraries, such as glib and gobject, is adequately supported in Go core packages.\n"
},
{
	"uri": "https://pekim.github.io/gobbi/getting-started/",
	"title": "Getting started",
	"tags": [],
	"description": "",
	"content": " pre-requisites  go 1.11 or later libraries  debian/ubuntu packages - libatk1.0-dev libcairo2-dev libglib2.0-dev libgtk-3-dev libpango1.0-dev note that dev libraries are required because pkg-config and headers are necessary  C compiler, and a linker  required because of the use of cgo for debian based distributions the build-essential package should suffice   running examples  git clone https://github.com/pekim/gobbi.git cd gobbi ./gobbi example simple_window  Be patient. The first go build or go run will take quite a while, perhaps a few minutes. Subsequent builds of applications will be a lot quicker as cached gobbi packages will be used by the Go commands.   Run ./gobbi examples for a list of the available examples.\nuse in a application Using gobbi in an application in no different to using most other libraries.\nTo add gobbi to a project that make use of go modules use go get.\ngo get github.com/pekim/gobbi Then import a package such as gtk.\nimport \u0026#34;github.com/pekim/gobbi/lib/gtk\u0026#34; build tags It will often be necessary to build gobbi applications with build tags.\n"
},
{
	"uri": "https://pekim.github.io/gobbi/application-lifecycle/",
	"title": "Application lifecycle",
	"tags": [],
	"description": "",
	"content": " main thread The main function, and therefore the main loop, should run on the main thread.\nfunc init() { // Ensure that the ui\u0026#39;s main thread is  // locked to the main thread.  runtime.LockOSThread() } initialisation Call gtk.Init (or gtk.InitChack) before calling any other gtk functions. Typically the program\u0026rsquo;s command-line arguments will be passed to gtk.Init.\ngtk.Init(os.Args) window creation Most applications will create a window when initialising.\nwindow := gtk.WindowNew(gtk.GTK_WINDOW_TOPLEVEL) termination If an application has only one window, then it might terminate when the window is closed.\nwindow.Widget().ConnectDestroy(func() { gtk.MainQuit() }) This may be written more succinctly, like this.\nwindow.Widget().ConnectDestroy(gtk.MainQuit) main loop To run the main loop, call gtk.Main. The function will not return from the main loop until gtk.MainQuit is called.\ngtk.Main() minimal application Putting all of the above together yields a minimal application. A window is created, and the application will exit when the window is closed.\npackage main import ( \u0026#34;github.com/pekim/gobbi/lib/gtk\u0026#34; \u0026#34;os\u0026#34; \u0026#34;runtime\u0026#34; ) func init() { runtime.LockOSThread() } func main() { gtk.Init(os.Args) window := gtk.WindowNew(gtk.GTK_WINDOW_TOPLEVEL) window.Widget().ConnectDestroy(gtk.MainQuit) window.Widget().ShowAll() gtk.Main() } gtk.Application A preferred approach to gtk application and window management is to use gtk.Application. The gtk_application example illustrates this.\n"
},
{
	"uri": "https://pekim.github.io/gobbi/build-tags/",
	"title": "Build tags",
	"tags": [],
	"description": "",
	"content": " gobbi uses Go build tags to allow targetting of specific library versions. This means that when using Go build tools (such as go build and go run) to build a gobbi application, use of the -tags flag will usually be necessary.\nSee How to use conditional compilation with the go build tool for more background about build tags.\nno tags If a gobbi application is built with no tags specified, the only apis available will be those present in all version of the various gnome libraries.\ntags targetting versions To use an api that is only available from a specific version onwards, use a tag constructed from the library name and the version.\nFor example gtk_builder_new_from_file is only available from gtk 3.10 onwards. So to use it, a tag specifying 3.10 (or a later version) is required.\ngo build -tags gtk_3.10 my_app.go  typical tags If targetting Ubuntu 16.04 (Xenial Xerus) or later, the following tags would be a good starting point.\ngo build -tags \u0026quot; \\ glib_2.48 \\ gdk_3.4 \\ gdkpixbuf_2.32 \\ gio_2.32 \\ gtk_3.18\u0026quot; \\ my_app.go  editors \u0026amp; IDEs Editors and IDE can provide better completion and error feedback if they are aware of the build tags that an application is to be built with.\nvs code The relevant setting is Go: Build Tags.\ngoland In the Settings... dialog, the relevant setting can be found under - Go - Vendoring \u0026amp; Build Tags - Custom tags\n"
},
{
	"uri": "https://pekim.github.io/gobbi/goroutines/",
	"title": "Goroutines",
	"tags": [],
	"description": "",
	"content": "All calls to gtk functions should be performed on the main thread. To perform such a call from a goroutine, use glib.IdleAdd to schedule invocation of a callback function on the main thread.\nglib.IdleAdd(func() bool { someLabel.SetText(\u0026#34;some text\u0026#34;) return glib.SOURCE_REMOVE }) Return glib.SOURCE_REMOVE to ensure the function is not called again next time the main loop is idle. Alternatively return glib.SOURCE_CONTINUE to have the function called again.\n"
},
{
	"uri": "https://pekim.github.io/gobbi/gvalue/",
	"title": "gobject.Value",
	"tags": [],
	"description": "",
	"content": "The gobject library\u0026rsquo;s GValue type is represented by gobject.Value.\nSee the list example for an example of its use.\n"
},
{
	"uri": "https://pekim.github.io/gobbi/signal-handling/",
	"title": "Signal handling",
	"tags": [],
	"description": "",
	"content": " connecting To connect an object to a signal that it emits, call one of the object\u0026rsquo;s Connect... methods.\nThe connect methods all accept a handler argument that is a function with a specific signature. Some handlers have no parameters, others have one or more parameters that provide event-specific information.\nbutton := gtk.ButtonNewWithLabel(\u0026#34;a button\u0026#34;) button.Widget().SetEvents(int32(gdk.GDK_POINTER_MOTION_MASK)) button.Widget().ConnectMotionNotifyEvent( func(event *gdk.EventMotion) bool { fmt.Println(event.Y, event.Y) return false }) Remember that it may be necessary to upcast to access the desired connect method.\ndisconnecting All of the Connect... methods return a handler id. The id may be used later to disconnect the handler.\nconnectId := button.ConnectClicked(func() { ... }) ... button.DisconnectClicked(connectId)"
},
{
	"uri": "https://pekim.github.io/gobbi/summary-base/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " Summary  Introduction Getting started Application lifecycle\n Build tags (library versions)\n Casting\n Goroutines\n gobject.Value\n Signal handling API  "
},
{
	"uri": "https://pekim.github.io/gobbi/_footer/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/_header/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "gobbi\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/",
	"title": "API",
	"tags": [],
	"description": "",
	"content": " Most of the apis provided by gobbi are relatively direct mappings of the Gnome C library APIs.\npackages There is one go package for each Gnome library.\n atk cairo gdk gdkpixbuf gio glib gobject gtk pango  out params Out parameters are mapped as return values in Go functions. Inout parameters are not yet supported, but when they are the will be exposed as both parameters and return values in Go functions.\ninout params Inout parameters are not yet supported.\nfunctions returning GError Functions that have a GError out parameter, may return a Go error. The error (if not nil) will be a glib.Error, which has fields containing details of the error.\nvariadic functions Variadic api functions are not supported.\narray functions In many cases the library provides an equivalent array based function that can be used instead. The names of the array-based functions often end in a \u0026lsquo;v\u0026rsquo;.\nThe C arrays are represented as Go slices.\nIn the case of such functions that accept two slice, be certain that they are both of the same length. The behaviour when they are not is undefined.\nsingle item functions In other cases, instead of a variadic function that would operate on multiple values at once, there will be a supported function that operates on a single item at a time.\ncairo \u0026amp; pango These libraries currently have very little support, as the introspection date available for them is inadequate. Support may be added later, with manually generated bindings.\n"
},
{
	"uri": "https://pekim.github.io/gobbi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/atk/",
	"title": "atk",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/atk/bitfields/",
	"title": "bitfields",
	"tags": [],
	"description": "",
	"content": "HyperlinkStateFlags\nDescribes the type of link\n  ATK_HYPERLINK_IS_INLINE 1 Link is inline   C type: AtkHyperlinkStateFlags\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/cairo/bitfields/",
	"title": "bitfields",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/gdk/bitfields/",
	"title": "bitfields",
	"tags": [],
	"description": "",
	"content": "AnchorHints\nPositioning hints for aligning a window relative to a rectangle.\nThese hints determine how the window should be positioned in the case that the window would fall off-screen if placed in its ideal position.\nFor example, %GDK_ANCHOR_FLIP_X will replace %GDK_GRAVITY_NORTH_WEST with %GDK_GRAVITY_NORTH_EAST and vice versa if the window extends beyond the left or right edges of the monitor.\nIf %GDK_ANCHOR_SLIDE_X is set, the window can be shifted horizontally to fit on-screen. If %GDK_ANCHOR_RESIZE_X is set, the window can be shrunken horizontally to fit.\nIn general, when multiple flags are set, flipping should take precedence over sliding, which should take precedence over resizing.\n  GDK_ANCHOR_FLIP_X 1 allow flipping anchors horizontally   GDK_ANCHOR_FLIP_Y 2 allow flipping anchors vertically   GDK_ANCHOR_SLIDE_X 4 allow sliding window horizontally   GDK_ANCHOR_SLIDE_Y 8 allow sliding window vertically   GDK_ANCHOR_RESIZE_X 16 allow resizing window horizontally   GDK_ANCHOR_RESIZE_Y 32 allow resizing window vertically   GDK_ANCHOR_FLIP 3 allow flipping anchors on both axes   GDK_ANCHOR_SLIDE 12 allow sliding window on both axes   GDK_ANCHOR_RESIZE 48 allow resizing window on both axes   since 3.22\nC type: GdkAnchorHints\n AxisFlags\nFlags describing the current capabilities of a device/tool.\n  GDK_AXIS_FLAG_X 2 X axis is present   GDK_AXIS_FLAG_Y 4 Y axis is present   GDK_AXIS_FLAG_PRESSURE 8 Pressure axis is present   GDK_AXIS_FLAG_XTILT 16 X tilt axis is present   GDK_AXIS_FLAG_YTILT 32 Y tilt axis is present   GDK_AXIS_FLAG_WHEEL 64 Wheel axis is present   GDK_AXIS_FLAG_DISTANCE 128 Distance axis is present   GDK_AXIS_FLAG_ROTATION 256 Z-axis rotation is present   GDK_AXIS_FLAG_SLIDER 512 Slider axis is present   since 3.22\nC type: GdkAxisFlags\n DragAction\nUsed in #GdkDragContext to indicate what the destination should do with the dropped data.\n  GDK_ACTION_DEFAULT 1 Means nothing, and should not be used.   GDK_ACTION_COPY 2 Copy the data.   GDK_ACTION_MOVE 4 Move the data, i.e. first copy it, then delete it from the source using the DELETE target of the X selection protocol.   GDK_ACTION_LINK 8 Add a link to the data. Note that this is only useful if source and destination agree on what it means.   GDK_ACTION_PRIVATE 16 Special action which tells the source that the destination will do something that the source doesn’t understand.   GDK_ACTION_ASK 32 Ask the user what to do with the data.   C type: GdkDragAction\n EventMask\nA set of bit-flags to indicate which events a window is to receive. Most of these masks map onto one or more of the #GdkEventType event types above.\nSee the [input handling overview][chap-input-handling] for details of [event masks][event-masks] and [event propagation][event-propagation].\n%GDK_POINTER_MOTION_HINT_MASK is deprecated. It is a special mask to reduce the number of %GDK_MOTION_NOTIFY events received. When using %GDK_POINTER_MOTION_HINT_MASK, fewer %GDK_MOTION_NOTIFY events will be sent, some of which are marked as a hint (the is_hint member is %TRUE). To receive more motion events after a motion hint event, the application needs to asks for more, by calling gdk_event_request_motions().\nSince GTK 3.8, motion events are already compressed by default, independent of this mechanism. This compression can be disabled with gdk_window_set_event_compression(). See the documentation of that function for details.\nIf %GDK_TOUCH_MASK is enabled, the window will receive touch events from touch-enabled devices. Those will come as sequences of #GdkEventTouch with type %GDK_TOUCH_UPDATE, enclosed by two events with type %GDK_TOUCH_BEGIN and %GDK_TOUCH_END (or %GDK_TOUCH_CANCEL). gdk_event_get_event_sequence() returns the event sequence for these events, so different sequences may be distinguished.\n  GDK_EXPOSURE_MASK 2 receive expose events   GDK_POINTER_MOTION_MASK 4 receive all pointer motion events   GDK_POINTER_MOTION_HINT_MASK 8 deprecated. see the explanation above   GDK_BUTTON_MOTION_MASK 16 receive pointer motion events while any button is pressed   GDK_BUTTON1_MOTION_MASK 32 receive pointer motion events while 1 button is pressed   GDK_BUTTON2_MOTION_MASK 64 receive pointer motion events while 2 button is pressed   GDK_BUTTON3_MOTION_MASK 128 receive pointer motion events while 3 button is pressed   GDK_BUTTON_PRESS_MASK 256 receive button press events   GDK_BUTTON_RELEASE_MASK 512 receive button release events   GDK_KEY_PRESS_MASK 1024 receive key press events   GDK_KEY_RELEASE_MASK 2048 receive key release events   GDK_ENTER_NOTIFY_MASK 4096 receive window enter events   GDK_LEAVE_NOTIFY_MASK 8192 receive window leave events   GDK_FOCUS_CHANGE_MASK 16384 receive focus change events   GDK_STRUCTURE_MASK 32768 receive events about window configuration change   GDK_PROPERTY_CHANGE_MASK 65536 receive property change events   GDK_VISIBILITY_NOTIFY_MASK 131072 receive visibility change events   GDK_PROXIMITY_IN_MASK 262144 receive proximity in events   GDK_PROXIMITY_OUT_MASK 524288 receive proximity out events   GDK_SUBSTRUCTURE_MASK 1048576 receive events about window configuration changes of child windows   GDK_SCROLL_MASK 2097152 receive scroll events   GDK_TOUCH_MASK 4194304 receive touch events. Since 3.4   GDK_SMOOTH_SCROLL_MASK 8388608 receive smooth scrolling events. Since 3.4   GDK_TOUCHPAD_GESTURE_MASK 16777216 receive touchpad gesture events. Since 3.18   GDK_TABLET_PAD_MASK 33554432 receive tablet pad events. Since 3.22   GDK_ALL_EVENTS_MASK 67108862 the combination of all the above event masks.   C type: GdkEventMask\n FrameClockPhase\n#GdkFrameClockPhase is used to represent the different paint clock phases that can be requested. The elements of the enumeration correspond to the signals of #GdkFrameClock.\n  GDK_FRAME_CLOCK_PHASE_NONE 0 no phase   GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS 1 corresponds to GdkFrameClock::flush-events. Should not be handled by applications.   GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT 2 corresponds to GdkFrameClock::before-paint. Should not be handled by applications.   GDK_FRAME_CLOCK_PHASE_UPDATE 4 corresponds to GdkFrameClock::update.   GDK_FRAME_CLOCK_PHASE_LAYOUT 8 corresponds to GdkFrameClock::layout.   GDK_FRAME_CLOCK_PHASE_PAINT 16 corresponds to GdkFrameClock::paint.   GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS 32 corresponds to GdkFrameClock::resume-events. Should not be handled by applications.   GDK_FRAME_CLOCK_PHASE_AFTER_PAINT 64 corresponds to GdkFrameClock::after-paint. Should not be handled by applications.   since 3.8\nC type: GdkFrameClockPhase\n ModifierType\nA set of bit-flags to indicate the state of modifier keys and mouse buttons in various event types. Typical modifier keys are Shift, Control, Meta, Super, Hyper, Alt, Compose, Apple, CapsLock or ShiftLock.\nLike the X Window System, GDK supports 8 modifier keys and 5 mouse buttons.\nSince 2.10, GDK recognizes which of the Meta, Super or Hyper keys are mapped to Mod2 - Mod5, and indicates this by setting %GDK_SUPER_MASK, %GDK_HYPER_MASK or %GDK_META_MASK in the state field of key events.\nNote that GDK may add internal values to events which include reserved values such as %GDK_MODIFIER_RESERVED_13_MASK. Your code should preserve and ignore them. You can use %GDK_MODIFIER_MASK to remove all reserved values.\nAlso note that the GDK X backend interprets button press events for button 4-7 as scroll events, so %GDK_BUTTON4_MASK and %GDK_BUTTON5_MASK will never be set.\n  GDK_SHIFT_MASK 1 the Shift key.   GDK_LOCK_MASK 2 a Lock key (depending on the modifier mapping of the X server this may either be CapsLock or ShiftLock).   GDK_CONTROL_MASK 4 the Control key.   GDK_MOD1_MASK 8 the fourth modifier key (it depends on the modifier mapping of the X server which key is interpreted as this modifier, but normally it is the Alt key).   GDK_MOD2_MASK 16 the fifth modifier key (it depends on the modifier mapping of the X server which key is interpreted as this modifier).   GDK_MOD3_MASK 32 the sixth modifier key (it depends on the modifier mapping of the X server which key is interpreted as this modifier).   GDK_MOD4_MASK 64 the seventh modifier key (it depends on the modifier mapping of the X server which key is interpreted as this modifier).   GDK_MOD5_MASK 128 the eighth modifier key (it depends on the modifier mapping of the X server which key is interpreted as this modifier).   GDK_BUTTON1_MASK 256 the first mouse button.   GDK_BUTTON2_MASK 512 the second mouse button.   GDK_BUTTON3_MASK 1024 the third mouse button.   GDK_BUTTON4_MASK 2048 the fourth mouse button.   GDK_BUTTON5_MASK 4096 the fifth mouse button.   GDK_MODIFIER_RESERVED_13_MASK 8192 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_14_MASK 16384 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_15_MASK 32768 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_16_MASK 65536 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_17_MASK 131072 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_18_MASK 262144 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_19_MASK 524288 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_20_MASK 1048576 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_21_MASK 2097152 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_22_MASK 4194304 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_23_MASK 8388608 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_24_MASK 16777216 A reserved bit flag; do not use in your own code   GDK_MODIFIER_RESERVED_25_MASK 33554432 A reserved bit flag; do not use in your own code   GDK_SUPER_MASK 67108864 the Super modifier. Since 2.10   GDK_HYPER_MASK 134217728 the Hyper modifier. Since 2.10   GDK_META_MASK 268435456 the Meta modifier. Since 2.10   GDK_MODIFIER_RESERVED_29_MASK 536870912 A reserved bit flag; do not use in your own code   GDK_RELEASE_MASK 1073741824 not used in GDK itself. GTK+ uses it to differentiate between (keyval, modifiers) pairs from key press and release events.   GDK_MODIFIER_MASK 1543512063 a mask covering all modifier types.   C type: guint\n SeatCapabilities\nFlags describing the seat capabilities.\n  GDK_SEAT_CAPABILITY_NONE 0 No input capabilities   GDK_SEAT_CAPABILITY_POINTER 1 The seat has a pointer (e.g. mouse)   GDK_SEAT_CAPABILITY_TOUCH 2 The seat has touchscreen(s) attached   GDK_SEAT_CAPABILITY_TABLET_STYLUS 4 The seat has drawing tablet(s) attached   GDK_SEAT_CAPABILITY_KEYBOARD 8 The seat has keyboard(s) attached   GDK_SEAT_CAPABILITY_ALL_POINTING 7 The union of all pointing capabilities   GDK_SEAT_CAPABILITY_ALL 15 The union of all capabilities   since 3.20\nC type: GdkSeatCapabilities\n WMDecoration\nThese are hints originally defined by the Motif toolkit. The window manager can use them when determining how to decorate the window. The hint must be set before mapping the window.\n  GDK_DECOR_ALL 1 all decorations should be applied.   GDK_DECOR_BORDER 2 a frame should be drawn around the window.   GDK_DECOR_RESIZEH 4 the frame should have resize handles.   GDK_DECOR_TITLE 8 a titlebar should be placed above the window.   GDK_DECOR_MENU 16 a button for opening a menu should be included.   GDK_DECOR_MINIMIZE 32 a minimize button should be included.   GDK_DECOR_MAXIMIZE 64 a maximize button should be included.   C type: GdkWMDecoration\n WMFunction\nThese are hints originally defined by the Motif toolkit. The window manager can use them when determining the functions to offer for the window. The hint must be set before mapping the window.\n  GDK_FUNC_ALL 1 all functions should be offered.   GDK_FUNC_RESIZE 2 the window should be resizable.   GDK_FUNC_MOVE 4 the window should be movable.   GDK_FUNC_MINIMIZE 8 the window should be minimizable.   GDK_FUNC_MAXIMIZE 16 the window should be maximizable.   GDK_FUNC_CLOSE 32 the window should be closable.   C type: GdkWMFunction\n WindowAttributesType\nUsed to indicate which fields in the #GdkWindowAttr struct should be honored. For example, if you filled in the “cursor” and “x” fields of #GdkWindowAttr, pass “@GDK_WA_X | @GDK_WA_CURSOR” to gdk_window_new(). Fields in #GdkWindowAttr not covered by a bit in this enum are required; for example, the @width/@height, @wclass, and @window_type fields are required, they have no corresponding flag in #GdkWindowAttributesType.\n  GDK_WA_TITLE 2 Honor the title field   GDK_WA_X 4 Honor the X coordinate field   GDK_WA_Y 8 Honor the Y coordinate field   GDK_WA_CURSOR 16 Honor the cursor field   GDK_WA_VISUAL 32 Honor the visual field   GDK_WA_WMCLASS 64 Honor the wmclass_class and wmclass_name fields   GDK_WA_NOREDIR 128 Honor the override_redirect field   GDK_WA_TYPE_HINT 256 Honor the type_hint field   C type: GdkWindowAttributesType\n WindowHints\nUsed to indicate which fields of a #GdkGeometry struct should be paid attention to. Also, the presence/absence of @GDK_HINT_POS, @GDK_HINT_USER_POS, and @GDK_HINT_USER_SIZE is significant, though they don\u0026rsquo;t directly refer to #GdkGeometry fields. @GDK_HINT_USER_POS will be set automatically by #GtkWindow if you call gtk_window_move(). @GDK_HINT_USER_POS and @GDK_HINT_USER_SIZE should be set if the user specified a size/position using a \u0026ndash;geometry command-line argument; gtk_window_parse_geometry() automatically sets these flags.\n  GDK_HINT_POS 1 indicates that the program has positioned the window   GDK_HINT_MIN_SIZE 2 min size fields are set   GDK_HINT_MAX_SIZE 4 max size fields are set   GDK_HINT_BASE_SIZE 8 base size fields are set   GDK_HINT_ASPECT 16 aspect ratio fields are set   GDK_HINT_RESIZE_INC 32 resize increment fields are set   GDK_HINT_WIN_GRAVITY 64 window gravity field is set   GDK_HINT_USER_POS 128 indicates that the window’s position was explicitly set by the user   GDK_HINT_USER_SIZE 256 indicates that the window’s size was explicitly set by the user   C type: GdkWindowHints\n WindowState\nSpecifies the state of a toplevel window.\n  GDK_WINDOW_STATE_WITHDRAWN 1 the window is not shown.   GDK_WINDOW_STATE_ICONIFIED 2 the window is minimized.   GDK_WINDOW_STATE_MAXIMIZED 4 the window is maximized.   GDK_WINDOW_STATE_STICKY 8 the window is sticky.   GDK_WINDOW_STATE_FULLSCREEN 16 the window is maximized without decorations.   GDK_WINDOW_STATE_ABOVE 32 the window is kept above other windows.   GDK_WINDOW_STATE_BELOW 64 the window is kept below other windows.   GDK_WINDOW_STATE_FOCUSED 128 the window is presented as focused (with active decorations).   GDK_WINDOW_STATE_TILED 256 the window is in a tiled state, Since 3.10. Since 3.22.23, this is deprecated in favor of per-edge information.   GDK_WINDOW_STATE_TOP_TILED 512 whether the top edge is tiled, Since 3.22.23   GDK_WINDOW_STATE_TOP_RESIZABLE 1024 whether the top edge is resizable, Since 3.22.23   GDK_WINDOW_STATE_RIGHT_TILED 2048 whether the right edge is tiled, Since 3.22.23   GDK_WINDOW_STATE_RIGHT_RESIZABLE 4096 whether the right edge is resizable, Since 3.22.23   GDK_WINDOW_STATE_BOTTOM_TILED 8192 whether the bottom edge is tiled, Since 3.22.23   GDK_WINDOW_STATE_BOTTOM_RESIZABLE 16384 whether the bottom edge is resizable, Since 3.22.23   GDK_WINDOW_STATE_LEFT_TILED 32768 whether the left edge is tiled, Since 3.22.23   GDK_WINDOW_STATE_LEFT_RESIZABLE 65536 whether the left edge is resizable, Since 3.22.23   C type: GdkWindowState\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gdkpixbuf/bitfields/",
	"title": "bitfields",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/gio/bitfields/",
	"title": "bitfields",
	"tags": [],
	"description": "",
	"content": "AppInfoCreateFlags\nFlags used when creating a #GAppInfo.\n  APP_INFO_CREATE_NONE 0 No flags.   APP_INFO_CREATE_NEEDS_TERMINAL 1 Application opens in a terminal window.   APP_INFO_CREATE_SUPPORTS_URIS 2 Application supports URI arguments.   APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION 4 Application supports startup notification. Since 2.26   C type: GAppInfoCreateFlags\n ApplicationFlags\nFlags used to define the behaviour of a #GApplication.\n  APPLICATION_FLAGS_NONE 0 Default   APPLICATION_IS_SERVICE 1 Run as a service. In this mode, registration fails if the service is already running, and the application will initially wait up to 10 seconds for an initial activation message to arrive.   APPLICATION_IS_LAUNCHER 2 Don\u0026rsquo;t try to become the primary instance.   APPLICATION_HANDLES_OPEN 4 This application handles opening files (in the primary instance). Note that this flag only affects the default implementation of local_command_line(), and has no effect if %G_APPLICATION_HANDLES_COMMAND_LINE is given. See g_application_run() for details.   APPLICATION_HANDLES_COMMAND_LINE 8 This application handles command line arguments (in the primary instance). Note that this flag only affect the default implementation of local_command_line(). See g_application_run() for details.   APPLICATION_SEND_ENVIRONMENT 16 Send the environment of the launching process to the primary instance. Set this flag if your application is expected to behave differently depending on certain environment variables. For instance, an editor might be expected to use the GIT_COMMITTER_NAME environment variable when editing a git commit message. The environment is available to the #GApplication::command-line signal handler, via g_application_command_line_getenv().   APPLICATION_NON_UNIQUE 32 Make no attempts to do any of the typical single-instance application negotiation, even if the application ID is given. The application neither attempts to become the owner of the application ID nor does it check if an existing owner already exists. Everything occurs in the local process. Since: 2.30.   APPLICATION_CAN_OVERRIDE_APP_ID 64 Allow users to override the application ID from the command line with --gapplication-app-id. Since: 2.48   since 2.28\nC type: GApplicationFlags\n AskPasswordFlags\n#GAskPasswordFlags are used to request specific information from the user, or to notify the user of their choices in an authentication situation.\n  ASK_PASSWORD_NEED_PASSWORD 1 operation requires a password.   ASK_PASSWORD_NEED_USERNAME 2 operation requires a username.   ASK_PASSWORD_NEED_DOMAIN 4 operation requires a domain.   ASK_PASSWORD_SAVING_SUPPORTED 8 operation supports saving settings.   ASK_PASSWORD_ANONYMOUS_SUPPORTED 16 operation supports anonymous users.   C type: GAskPasswordFlags\n BusNameOwnerFlags\nFlags used in g_bus_own_name().\n  BUS_NAME_OWNER_FLAGS_NONE 0 No flags set.   BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT 1 Allow another message bus connection to claim the name.   BUS_NAME_OWNER_FLAGS_REPLACE 2 If another message bus connection owns the name and have specified #G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT, then take the name from the other connection.   BUS_NAME_OWNER_FLAGS_DO_NOT_QUEUE 4 If another message bus connection owns the name, immediately return an error from g_bus_own_name() rather than entering the waiting queue for that name. (Since 2.54)   since 2.26\nC type: GBusNameOwnerFlags\n BusNameWatcherFlags\nFlags used in g_bus_watch_name().\n  BUS_NAME_WATCHER_FLAGS_NONE 0 No flags set.   BUS_NAME_WATCHER_FLAGS_AUTO_START 1 If no-one owns the name when beginning to watch the name, ask the bus to launch an owner for the name.   since 2.26\nC type: GBusNameWatcherFlags\n ConverterFlags\nFlags used when calling a g_converter_convert().\n  CONVERTER_NO_FLAGS 0 No flags.   CONVERTER_INPUT_AT_END 1 At end of input data   CONVERTER_FLUSH 2 Flush data   since 2.24\nC type: GConverterFlags\n DBusCallFlags\nFlags used in g_dbus_connection_call() and similar APIs.\n  DBUS_CALL_FLAGS_NONE 0 No flags set.   DBUS_CALL_FLAGS_NO_AUTO_START 1 The bus must not launch an owner for the destination name in response to this method invocation.   DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION 2 the caller is prepared to wait for interactive authorization. Since 2.46.   since 2.26\nC type: GDBusCallFlags\n DBusCapabilityFlags\nCapabilities negotiated with the remote peer.\n  DBUS_CAPABILITY_FLAGS_NONE 0 No flags set.   DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING 1 The connection supports exchanging UNIX file descriptors with the remote peer.   since 2.26\nC type: GDBusCapabilityFlags\n DBusConnectionFlags\nFlags used when creating a new #GDBusConnection.\n  DBUS_CONNECTION_FLAGS_NONE 0 No flags set.   DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT 1 Perform authentication against server.   DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER 2 Perform authentication against client.   DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS 4 When authenticating as a server, allow the anonymous authentication method.   DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION 8 Pass this flag if connecting to a peer that is a message bus. This means that the Hello() method will be invoked as part of the connection setup.   DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING 16 If set, processing of D-Bus messages is delayed until g_dbus_connection_start_message_processing() is called.   since 2.26\nC type: GDBusConnectionFlags\n DBusInterfaceSkeletonFlags\nFlags describing the behavior of a #GDBusInterfaceSkeleton instance.\n  DBUS_INTERFACE_SKELETON_FLAGS_NONE 0 No flags set.   DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD 1 Each method invocation is handled in a thread dedicated to the invocation. This means that the method implementation can use blocking IO without blocking any other part of the process. It also means that the method implementation must use locking to access data structures used by other threads.   since 2.30\nC type: GDBusInterfaceSkeletonFlags\n DBusMessageFlags\nMessage flags used in #GDBusMessage.\n  DBUS_MESSAGE_FLAGS_NONE 0 No flags set.   DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED 1 A reply is not expected.   DBUS_MESSAGE_FLAGS_NO_AUTO_START 2 The bus must not launch an owner for the destination name in response to this message.   DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION 4 If set on a method call, this flag means that the caller is prepared to wait for interactive authorization. Since 2.46.   since 2.26\nC type: GDBusMessageFlags\n DBusObjectManagerClientFlags\nFlags used when constructing a #GDBusObjectManagerClient.\n  DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE 0 No flags set.   DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START 1 If not set and the manager is for a well-known name, then request the bus to launch an owner for the name if no-one owns the name. This flag can only be used in managers for well-known names.   since 2.30\nC type: GDBusObjectManagerClientFlags\n DBusPropertyInfoFlags\nFlags describing the access control of a D-Bus property.\n  DBUS_PROPERTY_INFO_FLAGS_NONE 0 No flags set.   DBUS_PROPERTY_INFO_FLAGS_READABLE 1 Property is readable.   DBUS_PROPERTY_INFO_FLAGS_WRITABLE 2 Property is writable.   since 2.26\nC type: GDBusPropertyInfoFlags\n DBusProxyFlags\nFlags used when constructing an instance of a #GDBusProxy derived class.\n  DBUS_PROXY_FLAGS_NONE 0 No flags set.   DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES 1 Don\u0026rsquo;t load properties.   DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS 2 Don\u0026rsquo;t connect to signals on the remote object.   DBUS_PROXY_FLAGS_DO_NOT_AUTO_START 4 If the proxy is for a well-known name, do not ask the bus to launch an owner during proxy initialization or a method call. This flag is only meaningful in proxies for well-known names.   DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES 8 If set, the property value for any invalidated property will be (asynchronously) retrieved upon receiving the PropertiesChanged D-Bus signal and the property will not cause emission of the #GDBusProxy::g-properties-changed signal. When the value is received the #GDBusProxy::g-properties-changed signal is emitted for the property along with the retrieved value. Since 2.32.   DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION 16 If the proxy is for a well-known name, do not ask the bus to launch an owner during proxy initialization, but allow it to be autostarted by a method call. This flag is only meaningful in proxies for well-known names, and only if %G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START is not also specified.   since 2.26\nC type: GDBusProxyFlags\n DBusSendMessageFlags\nFlags used when sending #GDBusMessages on a #GDBusConnection.\n  DBUS_SEND_MESSAGE_FLAGS_NONE 0 No flags set.   DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL 1 Do not automatically assign a serial number from the #GDBusConnection object when sending a message.   since 2.26\nC type: GDBusSendMessageFlags\n DBusServerFlags\nFlags used when creating a #GDBusServer.\n  DBUS_SERVER_FLAGS_NONE 0 No flags set.   DBUS_SERVER_FLAGS_RUN_IN_THREAD 1 All #GDBusServer::new-connection signals will run in separated dedicated threads (see signal for details).   DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS 2 Allow the anonymous authentication method.   since 2.26\nC type: GDBusServerFlags\n DBusSignalFlags\nFlags used when subscribing to signals via g_dbus_connection_signal_subscribe().\n  DBUS_SIGNAL_FLAGS_NONE 0 No flags set.   DBUS_SIGNAL_FLAGS_NO_MATCH_RULE 1 Don\u0026rsquo;t actually send the AddMatch D-Bus call for this signal subscription. This gives you more control over which match rules you add (but you must add them manually).   DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE 2 Match first arguments that contain a bus or interface name with the given namespace.   DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH 4 Match first arguments that contain an object path that is either equivalent to the given path, or one of the paths is a subpath of the other.   since 2.26\nC type: GDBusSignalFlags\n DBusSubtreeFlags\nFlags passed to g_dbus_connection_register_subtree().\n  DBUS_SUBTREE_FLAGS_NONE 0 No flags set.   DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES 1 Method calls to objects not in the enumerated range will still be dispatched. This is useful if you want to dynamically spawn objects in the subtree.   since 2.26\nC type: GDBusSubtreeFlags\n DriveStartFlags\nFlags used when starting a drive.\n  DRIVE_START_NONE 0 No flags set.   since 2.22\nC type: GDriveStartFlags\n FileAttributeInfoFlags\nFlags specifying the behaviour of an attribute.\n  FILE_ATTRIBUTE_INFO_NONE 0 no flags set.   FILE_ATTRIBUTE_INFO_COPY_WITH_FILE 1 copy the attribute values when the file is copied.   FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED 2 copy the attribute values when the file is moved.   C type: GFileAttributeInfoFlags\n FileCopyFlags\nFlags used when copying or moving files.\n  FILE_COPY_NONE 0 No flags set.   FILE_COPY_OVERWRITE 1 Overwrite any existing files   FILE_COPY_BACKUP 2 Make a backup of any existing files.   FILE_COPY_NOFOLLOW_SYMLINKS 4 Don\u0026rsquo;t follow symlinks.   FILE_COPY_ALL_METADATA 8 Copy all file metadata instead of just default set used for copy (see #GFileInfo).   FILE_COPY_NO_FALLBACK_FOR_MOVE 16 Don\u0026rsquo;t use copy and delete fallback if native move not supported.   FILE_COPY_TARGET_DEFAULT_PERMS 32 Leaves target file with default perms, instead of setting the source file perms.   C type: GFileCopyFlags\n FileCreateFlags\nFlags used when an operation may create a file.\n  FILE_CREATE_NONE 0 No flags set.   FILE_CREATE_PRIVATE 1 Create a file that can only be accessed by the current user.   FILE_CREATE_REPLACE_DESTINATION 2 Replace the destination as if it didn\u0026rsquo;t exist before. Don\u0026rsquo;t try to keep any old permissions, replace instead of following links. This is generally useful if you\u0026rsquo;re doing a \u0026ldquo;copy over\u0026rdquo; rather than a \u0026ldquo;save new version of\u0026rdquo; replace operation. You can think of it as \u0026ldquo;unlink destination\u0026rdquo; before writing to it, although the implementation may not be exactly like that. Since 2.20   C type: GFileCreateFlags\n FileMeasureFlags\nFlags that can be used with g_file_measure_disk_usage().\n  FILE_MEASURE_NONE 0 No flags set.   FILE_MEASURE_REPORT_ANY_ERROR 2 Report any error encountered while traversing the directory tree. Normally errors are only reported for the toplevel file.   FILE_MEASURE_APPARENT_SIZE 4 Tally usage based on apparent file sizes. Normally, the block-size is used, if available, as this is a more accurate representation of disk space used. Compare with du --apparent-size.   FILE_MEASURE_NO_XDEV 8 Do not cross mount point boundaries. Compare with du -x.   since 2.38\nC type: GFileMeasureFlags\n FileMonitorFlags\nFlags used to set what a #GFileMonitor will watch for.\n  FILE_MONITOR_NONE 0 No flags set.   FILE_MONITOR_WATCH_MOUNTS 1 Watch for mount events.   FILE_MONITOR_SEND_MOVED 2 Pair DELETED and CREATED events caused by file renames (moves) and send a single G_FILE_MONITOR_EVENT_MOVED event instead (NB: not supported on all backends; the default behaviour -without specifying this flag- is to send single DELETED and CREATED events). Deprecated since 2.46: use %G_FILE_MONITOR_WATCH_MOVES instead.   FILE_MONITOR_WATCH_HARD_LINKS 4 Watch for changes to the file made via another hard link. Since 2.36.   FILE_MONITOR_WATCH_MOVES 8 Watch for rename operations on a monitored directory. This causes %G_FILE_MONITOR_EVENT_RENAMED, %G_FILE_MONITOR_EVENT_MOVED_IN and %G_FILE_MONITOR_EVENT_MOVED_OUT events to be emitted when possible. Since: 2.46.   C type: GFileMonitorFlags\n FileQueryInfoFlags\nFlags used when querying a #GFileInfo.\n  FILE_QUERY_INFO_NONE 0 No flags set.   FILE_QUERY_INFO_NOFOLLOW_SYMLINKS 1 Don\u0026rsquo;t follow symlinks.   C type: GFileQueryInfoFlags\n IOStreamSpliceFlags\nGIOStreamSpliceFlags determine how streams should be spliced.\n  IO_STREAM_SPLICE_NONE 0 Do not close either stream.   IO_STREAM_SPLICE_CLOSE_STREAM1 1 Close the first stream after the splice.   IO_STREAM_SPLICE_CLOSE_STREAM2 2 Close the second stream after the splice.   IO_STREAM_SPLICE_WAIT_FOR_BOTH 4 Wait for both splice operations to finish before calling the callback.   since 2.28\nC type: GIOStreamSpliceFlags\n MountMountFlags\nFlags used when mounting a mount.\n  MOUNT_MOUNT_NONE 0 No flags set.   C type: GMountMountFlags\n MountUnmountFlags\nFlags used when an unmounting a mount.\n  MOUNT_UNMOUNT_NONE 0 No flags set.   MOUNT_UNMOUNT_FORCE 1 Unmount even if there are outstanding file operations on the mount.   C type: GMountUnmountFlags\n OutputStreamSpliceFlags\nGOutputStreamSpliceFlags determine how streams should be spliced.\n  OUTPUT_STREAM_SPLICE_NONE 0 Do not close either stream.   OUTPUT_STREAM_SPLICE_CLOSE_SOURCE 1 Close the source stream after the splice.   OUTPUT_STREAM_SPLICE_CLOSE_TARGET 2 Close the target stream after the splice.   C type: GOutputStreamSpliceFlags\n ResourceFlags\nGResourceFlags give information about a particular file inside a resource bundle.\n  RESOURCE_FLAGS_NONE 0 No flags set.   RESOURCE_FLAGS_COMPRESSED 1 The file is compressed.   since 2.32\nC type: GResourceFlags\n ResourceLookupFlags\nGResourceLookupFlags determine how resource path lookups are handled.\n  RESOURCE_LOOKUP_FLAGS_NONE 0 No flags set.   since 2.32\nC type: GResourceLookupFlags\n SettingsBindFlags\nFlags used when creating a binding. These flags determine in which direction the binding works. The default is to synchronize in both directions.\n  SETTINGS_BIND_DEFAULT 0 Equivalent to G_SETTINGS_BIND_GET|G_SETTINGS_BIND_SET   SETTINGS_BIND_GET 1 Update the #GObject property when the setting changes. It is an error to use this flag if the property is not writable.   SETTINGS_BIND_SET 2 Update the setting when the #GObject property changes. It is an error to use this flag if the property is not readable.   SETTINGS_BIND_NO_SENSITIVITY 4 Do not try to bind a \u0026ldquo;sensitivity\u0026rdquo; property to the writability of the setting   SETTINGS_BIND_GET_NO_CHANGES 8 When set in addition to #G_SETTINGS_BIND_GET, set the #GObject property value initially from the setting, but do not listen for changes of the setting   SETTINGS_BIND_INVERT_BOOLEAN 16 When passed to g_settings_bind(), uses a pair of mapping functions that invert the boolean value when mapping between the setting and the property. The setting and property must both be booleans. You cannot pass this flag to g_settings_bind_with_mapping().   C type: GSettingsBindFlags\n SocketMsgFlags\nFlags used in g_socket_receive_message() and g_socket_send_message(). The flags listed in the enum are some commonly available flags, but the values used for them are the same as on the platform, and any other flags are passed in/out as is. So to use a platform specific flag, just include the right system header and pass in the flag.\n  SOCKET_MSG_NONE 0 No flags.   SOCKET_MSG_OOB 1 Request to send/receive out of band data.   SOCKET_MSG_PEEK 2 Read data from the socket without removing it from the queue.   SOCKET_MSG_DONTROUTE 4 Don\u0026rsquo;t use a gateway to send out the packet, only send to hosts on directly connected networks.   since 2.22\nC type: GSocketMsgFlags\n SubprocessFlags\nFlags to define the behaviour of a #GSubprocess.\nNote that the default for stdin is to redirect from /dev/null. For stdout and stderr the default are for them to inherit the corresponding descriptor from the calling process.\nNote that it is a programmer error to mix \u0026lsquo;incompatible\u0026rsquo; flags. For example, you may not request both %G_SUBPROCESS_FLAGS_STDOUT_PIPE and %G_SUBPROCESS_FLAGS_STDOUT_SILENCE.\n  SUBPROCESS_FLAGS_NONE 0 No flags.   SUBPROCESS_FLAGS_STDIN_PIPE 1 create a pipe for the stdin of the spawned process that can be accessed with g_subprocess_get_stdin_pipe().   SUBPROCESS_FLAGS_STDIN_INHERIT 2 stdin is inherited from the calling process.   SUBPROCESS_FLAGS_STDOUT_PIPE 4 create a pipe for the stdout of the spawned process that can be accessed with g_subprocess_get_stdout_pipe().   SUBPROCESS_FLAGS_STDOUT_SILENCE 8 silence the stdout of the spawned process (ie: redirect to /dev/null).   SUBPROCESS_FLAGS_STDERR_PIPE 16 create a pipe for the stderr of the spawned process that can be accessed with g_subprocess_get_stderr_pipe().   SUBPROCESS_FLAGS_STDERR_SILENCE 32 silence the stderr of the spawned process (ie: redirect to /dev/null).   SUBPROCESS_FLAGS_STDERR_MERGE 64 merge the stderr of the spawned process with whatever the stdout happens to be. This is a good way of directing both streams to a common log file, for example.   SUBPROCESS_FLAGS_INHERIT_FDS 128 spawned processes will inherit the file descriptors of their parent, unless those descriptors have been explicitly marked as close-on-exec. This flag has no effect over the \u0026ldquo;standard\u0026rdquo; file descriptors (stdin, stdout, stderr).   since 2.40\nC type: GSubprocessFlags\n TestDBusFlags\nFlags to define future #GTestDBus behaviour.\n  TEST_DBUS_NONE 0 No flags.   since 2.34\nC type: GTestDBusFlags\n TlsCertificateFlags\nA set of flags describing TLS certification validation. This can be used to set which validation steps to perform (eg, with g_tls_client_connection_set_validation_flags()), or to describe why a particular certificate was rejected (eg, in #GTlsConnection::accept-certificate).\n  TLS_CERTIFICATE_UNKNOWN_CA 1 The signing certificate authority is not known.   TLS_CERTIFICATE_BAD_IDENTITY 2 The certificate does not match the expected identity of the site that it was retrieved from.   TLS_CERTIFICATE_NOT_ACTIVATED 4 The certificate\u0026rsquo;s activation time is still in the future   TLS_CERTIFICATE_EXPIRED 8 The certificate has expired   TLS_CERTIFICATE_REVOKED 16 The certificate has been revoked according to the #GTlsConnection\u0026rsquo;s certificate revocation list.   TLS_CERTIFICATE_INSECURE 32 The certificate\u0026rsquo;s algorithm is considered insecure.   TLS_CERTIFICATE_GENERIC_ERROR 64 Some other error occurred validating the certificate   TLS_CERTIFICATE_VALIDATE_ALL 127 the combination of all of the above flags   since 2.28\nC type: GTlsCertificateFlags\n TlsDatabaseVerifyFlags\nFlags for g_tls_database_verify_chain().\n  TLS_DATABASE_VERIFY_NONE 0 No verification flags   since 2.30\nC type: GTlsDatabaseVerifyFlags\n TlsPasswordFlags\nVarious flags for the password.\n  TLS_PASSWORD_NONE 0 No flags   TLS_PASSWORD_RETRY 2 The password was wrong, and the user should retry.   TLS_PASSWORD_MANY_TRIES 4 Hint to the user that the password has been wrong many times, and the user may not have many chances left.   TLS_PASSWORD_FINAL_TRY 8 Hint to the user that this is the last try to get this password right.   since 2.30\nC type: GTlsPasswordFlags\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/glib/bitfields/",
	"title": "bitfields",
	"tags": [],
	"description": "",
	"content": "AsciiType\n  ASCII_ALNUM 1   ASCII_ALPHA 2   ASCII_CNTRL 4   ASCII_DIGIT 8   ASCII_GRAPH 16   ASCII_LOWER 32   ASCII_PRINT 64   ASCII_PUNCT 128   ASCII_SPACE 256   ASCII_UPPER 512   ASCII_XDIGIT 1024   C type: GAsciiType\n FileTest\nA test to perform on a file using g_file_test().\n  FILE_TEST_IS_REGULAR 1 %TRUE if the file is a regular file (not a directory). Note that this test will also return %TRUE if the tested file is a symlink to a regular file.   FILE_TEST_IS_SYMLINK 2 %TRUE if the file is a symlink.   FILE_TEST_IS_DIR 4 %TRUE if the file is a directory.   FILE_TEST_IS_EXECUTABLE 8 %TRUE if the file is executable.   FILE_TEST_EXISTS 16 %TRUE if the file exists. It may or may not be a regular file.   C type: GFileTest\n FormatSizeFlags\nFlags to modify the format of the string returned by g_format_size_full().\n  FORMAT_SIZE_DEFAULT 0 behave the same as g_format_size()   FORMAT_SIZE_LONG_FORMAT 1 include the exact number of bytes as part of the returned string. For example, \u0026ldquo;45.6 kB (45,612 bytes)\u0026rdquo;.   FORMAT_SIZE_IEC_UNITS 2 use IEC (base 1024) units with \u0026ldquo;KiB\u0026rdquo;-style suffixes. IEC units should only be used for reporting things with a strong \u0026ldquo;power of 2\u0026rdquo; basis, like RAM sizes or RAID stripe sizes. Network and storage sizes should be reported in the normal SI units.   FORMAT_SIZE_BITS 4 set the size as a quantity in bits, rather than bytes, and return units in bits. For example, ‘Mb’ rather than ‘MB’.   C type: GFormatSizeFlags\n HookFlagMask\nFlags used internally in the #GHook implementation.\n  HOOK_FLAG_ACTIVE 1 set if the hook has not been destroyed   HOOK_FLAG_IN_CALL 2 set if the hook is currently being run   HOOK_FLAG_MASK 15 A mask covering all bits reserved for hook flags; see %G_HOOK_FLAG_USER_SHIFT   C type: GHookFlagMask\n IOCondition\nA bitwise combination representing a condition to watch for on an event source.\n  IO_IN 1 There is data to read.   IO_OUT 4 Data can be written (without blocking).   IO_PRI 2 There is urgent data to read.   IO_ERR 8 Error condition.   IO_HUP 16 Hung up (the connection has been broken, usually for pipes and sockets).   IO_NVAL 32 Invalid request. The file descriptor is not open.   C type: GIOCondition\n IOFlags\nSpecifies properties of a #GIOChannel. Some of the flags can only be read with g_io_channel_get_flags(), but not changed with g_io_channel_set_flags().\n  IO_FLAG_APPEND 1 turns on append mode, corresponds to %O_APPEND (see the documentation of the UNIX open() syscall)   IO_FLAG_NONBLOCK 2 turns on nonblocking mode, corresponds to %O_NONBLOCK/%O_NDELAY (see the documentation of the UNIX open() syscall)   IO_FLAG_IS_READABLE 4 indicates that the io channel is readable. This flag cannot be changed.   IO_FLAG_IS_WRITABLE 8 indicates that the io channel is writable. This flag cannot be changed.   IO_FLAG_IS_WRITEABLE 8 a misspelled version of @G_IO_FLAG_IS_WRITABLE that existed before the spelling was fixed in GLib 2.30. It is kept here for compatibility reasons. Deprecated since 2.30   IO_FLAG_IS_SEEKABLE 16 indicates that the io channel is seekable, i.e. that g_io_channel_seek_position() can be used on it. This flag cannot be changed.   IO_FLAG_MASK 31 the mask that specifies all the valid flags.   IO_FLAG_GET_MASK 31 the mask of the flags that are returned from g_io_channel_get_flags()   IO_FLAG_SET_MASK 3 the mask of the flags that the user can modify with g_io_channel_set_flags()   C type: GIOFlags\n KeyFileFlags\nFlags which influence the parsing.\n  KEY_FILE_NONE 0 No flags, default behaviour   KEY_FILE_KEEP_COMMENTS 1 Use this flag if you plan to write the (possibly modified) contents of the key file back to a file; otherwise all comments will be lost when the key file is written back.   KEY_FILE_KEEP_TRANSLATIONS 2 Use this flag if you plan to write the (possibly modified) contents of the key file back to a file; otherwise only the translations for the current language will be written back.   C type: GKeyFileFlags\n LogLevelFlags\nFlags specifying the level of log messages.\nIt is possible to change how GLib treats messages of the various levels using g_log_set_handler() and g_log_set_fatal_mask().\n  LOG_FLAG_RECURSION 1 internal flag   LOG_FLAG_FATAL 2 internal flag   LOG_LEVEL_ERROR 4 log level for errors, see g_error(). This level is also used for messages produced by g_assert().   LOG_LEVEL_CRITICAL 8 log level for critical warning messages, see g_critical(). This level is also used for messages produced by g_return_if_fail() and g_return_val_if_fail().   LOG_LEVEL_WARNING 16 log level for warnings, see g_warning()   LOG_LEVEL_MESSAGE 32 log level for messages, see g_message()   LOG_LEVEL_INFO 64 log level for informational messages, see g_info()   LOG_LEVEL_DEBUG 128 log level for debug messages, see g_debug()   LOG_LEVEL_MASK -4 a mask including all log levels   C type: GLogLevelFlags\n MarkupCollectType\nA mixed enumerated type and flags field. You must specify one type (string, strdup, boolean, tristate). Additionally, you may optionally bitwise OR the type with the flag %G_MARKUP_COLLECT_OPTIONAL.\nIt is likely that this enum will be extended in the future to support other types.\n  MARKUP_COLLECT_INVALID 0 used to terminate the list of attributes to collect   MARKUP_COLLECT_STRING 1 collect the string pointer directly from the attribute_values[] array. Expects a parameter of type (const char **). If %G_MARKUP_COLLECT_OPTIONAL is specified and the attribute isn\u0026rsquo;t present then the pointer will be set to %NULL   MARKUP_COLLECT_STRDUP 2 as with %G_MARKUP_COLLECT_STRING, but expects a parameter of type (char **) and g_strdup()s the returned pointer. The pointer must be freed with g_free()   MARKUP_COLLECT_BOOLEAN 3 expects a parameter of type (gboolean *) and parses the attribute value as a boolean. Sets %FALSE if the attribute isn\u0026rsquo;t present. Valid boolean values consist of (case-insensitive) \u0026ldquo;false\u0026rdquo;, \u0026ldquo;f\u0026rdquo;, \u0026ldquo;no\u0026rdquo;, \u0026ldquo;n\u0026rdquo;, \u0026ldquo;0\u0026rdquo; and \u0026ldquo;true\u0026rdquo;, \u0026ldquo;t\u0026rdquo;, \u0026ldquo;yes\u0026rdquo;, \u0026ldquo;y\u0026rdquo;, \u0026ldquo;1\u0026rdquo;   MARKUP_COLLECT_TRISTATE 4 as with %G_MARKUP_COLLECT_BOOLEAN, but in the case of a missing attribute a value is set that compares equal to neither %FALSE nor %TRUE G_MARKUP_COLLECT_OPTIONAL is implied   MARKUP_COLLECT_OPTIONAL 65536 can be bitwise ORed with the other fields. If present, allows the attribute not to appear. A default value is set depending on what value type is used   C type: GMarkupCollectType\n MarkupParseFlags\nFlags that affect the behaviour of the parser.\n  MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG 1 flag you should not use   MARKUP_TREAT_CDATA_AS_TEXT 2 When this flag is set, CDATA marked sections are not passed literally to the @passthrough function of the parser. Instead, the content of the section (without the \u0026lt;![CDATA[ and ]]\u0026gt;) is passed to the @text function. This flag was added in GLib 2.12   MARKUP_PREFIX_ERROR_POSITION 4 Normally errors caught by GMarkup itself have line/column information prefixed to them to let the caller know the location of the error. When this flag is set the location information is also prefixed to errors generated by the #GMarkupParser implementation functions   MARKUP_IGNORE_QUALIFIED 8 Ignore (don\u0026rsquo;t report) qualified attributes and tags, along with their contents. A qualified attribute or tag is one that contains \u0026lsquo;:\u0026rsquo; in its name (ie: is in another namespace). Since: 2.40.   C type: GMarkupParseFlags\n OptionFlags\nFlags which modify individual options.\n  OPTION_FLAG_NONE 0 No flags. Since: 2.42.   OPTION_FLAG_HIDDEN 1 The option doesn\u0026rsquo;t appear in --help output.   OPTION_FLAG_IN_MAIN 2 The option appears in the main section of the --help output, even if it is defined in a group.   OPTION_FLAG_REVERSE 4 For options of the %G_OPTION_ARG_NONE kind, this flag indicates that the sense of the option is reversed.   OPTION_FLAG_NO_ARG 8 For options of the %G_OPTION_ARG_CALLBACK kind, this flag indicates that the callback does not take any argument (like a %G_OPTION_ARG_NONE option). Since 2.8   OPTION_FLAG_FILENAME 16 For options of the %G_OPTION_ARG_CALLBACK kind, this flag indicates that the argument should be passed to the callback in the GLib filename encoding rather than UTF-8. Since 2.8   OPTION_FLAG_OPTIONAL_ARG 32 For options of the %G_OPTION_ARG_CALLBACK kind, this flag indicates that the argument supply is optional. If no argument is given then data of %GOptionParseFunc will be set to NULL. Since 2.8   OPTION_FLAG_NOALIAS 64 This flag turns off the automatic conflict resolution which prefixes long option names with groupname- if there is a conflict. This option should only be used in situations where aliasing is necessary to model some legacy commandline interface. It is not safe to use this option, unless all option groups are under your direct control. Since 2.8.   C type: GOptionFlags\n RegexCompileFlags\nFlags specifying compile-time options.\n  REGEX_CASELESS 1 Letters in the pattern match both upper- and lowercase letters. This option can be changed within a pattern by a \u0026ldquo;(?i)\u0026rdquo; option setting.   REGEX_MULTILINE 2 By default, GRegex treats the strings as consisting of a single line of characters (even if it actually contains newlines). The \u0026ldquo;start of line\u0026rdquo; metacharacter (\u0026ldquo;^\u0026rdquo;) matches only at the start of the string, while the \u0026ldquo;end of line\u0026rdquo; metacharacter (\u0026ldquo;$\u0026rdquo;) matches only at the end of the string, or before a terminating newline (unless #G_REGEX_DOLLAR_ENDONLY is set). When #G_REGEX_MULTILINE is set, the \u0026ldquo;start of line\u0026rdquo; and \u0026ldquo;end of line\u0026rdquo; constructs match immediately following or immediately before any newline in the string, respectively, as well as at the very start and end. This can be changed within a pattern by a \u0026ldquo;(?m)\u0026rdquo; option setting.   REGEX_DOTALL 4 A dot metacharacter (\u0026ldquo;.\u0026rdquo;) in the pattern matches all characters, including newlines. Without it, newlines are excluded. This option can be changed within a pattern by a (\u0026ldquo;?s\u0026rdquo;) option setting.   REGEX_EXTENDED 8 Whitespace data characters in the pattern are totally ignored except when escaped or inside a character class. Whitespace does not include the VT character (code 11). In addition, characters between an unescaped \u0026ldquo;#\u0026rdquo; outside a character class and the next newline character, inclusive, are also ignored. This can be changed within a pattern by a \u0026ldquo;(?x)\u0026rdquo; option setting.   REGEX_ANCHORED 16 The pattern is forced to be \u0026ldquo;anchored\u0026rdquo;, that is, it is constrained to match only at the first matching point in the string that is being searched. This effect can also be achieved by appropriate constructs in the pattern itself such as the \u0026ldquo;^\u0026rdquo; metacharacter.   REGEX_DOLLAR_ENDONLY 32 A dollar metacharacter (\u0026ldquo;$\u0026rdquo;) in the pattern matches only at the end of the string. Without this option, a dollar also matches immediately before the final character if it is a newline (but not before any other newlines). This option is ignored if #G_REGEX_MULTILINE is set.   REGEX_UNGREEDY 512 Inverts the \u0026ldquo;greediness\u0026rdquo; of the quantifiers so that they are not greedy by default, but become greedy if followed by \u0026ldquo;?\u0026rdquo;. It can also be set by a \u0026ldquo;(?U)\u0026rdquo; option setting within the pattern.   REGEX_RAW 2048 Usually strings must be valid UTF-8 strings, using this flag they are considered as a raw sequence of bytes.   REGEX_NO_AUTO_CAPTURE 4096 Disables the use of numbered capturing parentheses in the pattern. Any opening parenthesis that is not followed by \u0026ldquo;?\u0026rdquo; behaves as if it were followed by \u0026ldquo;?:\u0026rdquo; but named parentheses can still be used for capturing (and they acquire numbers in the usual way).   REGEX_OPTIMIZE 8192 Optimize the regular expression. If the pattern will be used many times, then it may be worth the effort to optimize it to improve the speed of matches.   REGEX_FIRSTLINE 262144 Limits an unanchored pattern to match before (or at) the first newline. Since: 2.34   REGEX_DUPNAMES 524288 Names used to identify capturing subpatterns need not be unique. This can be helpful for certain types of pattern when it is known that only one instance of the named subpattern can ever be matched.   REGEX_NEWLINE_CR 1048576 Usually any newline character or character sequence is recognized. If this option is set, the only recognized newline character is \u0026lsquo;\\r\u0026rsquo;.   REGEX_NEWLINE_LF 2097152 Usually any newline character or character sequence is recognized. If this option is set, the only recognized newline character is \u0026lsquo;\\n\u0026rsquo;.   REGEX_NEWLINE_CRLF 3145728 Usually any newline character or character sequence is recognized. If this option is set, the only recognized newline character sequence is \u0026lsquo;\\r\\n\u0026rsquo;.   REGEX_NEWLINE_ANYCRLF 5242880 Usually any newline character or character sequence is recognized. If this option is set, the only recognized newline character sequences are \u0026lsquo;\\r\u0026rsquo;, \u0026lsquo;\\n\u0026rsquo;, and \u0026lsquo;\\r\\n\u0026rsquo;. Since: 2.34   REGEX_BSR_ANYCRLF 8388608 Usually any newline character or character sequence is recognised. If this option is set, then \u0026ldquo;\\R\u0026rdquo; only recognizes the newline characters \u0026lsquo;\\r\u0026rsquo;, \u0026lsquo;\\n\u0026rsquo; and \u0026lsquo;\\r\\n\u0026rsquo;. Since: 2.34   REGEX_JAVASCRIPT_COMPAT 33554432 Changes behaviour so that it is compatible with JavaScript rather than PCRE. Since: 2.34   since 2.14\nC type: GRegexCompileFlags\n RegexMatchFlags\nFlags specifying match-time options.\n  REGEX_MATCH_ANCHORED 16 The pattern is forced to be \u0026ldquo;anchored\u0026rdquo;, that is, it is constrained to match only at the first matching point in the string that is being searched. This effect can also be achieved by appropriate constructs in the pattern itself such as the \u0026ldquo;^\u0026rdquo; metacharacter.   REGEX_MATCH_NOTBOL 128 Specifies that first character of the string is not the beginning of a line, so the circumflex metacharacter should not match before it. Setting this without #G_REGEX_MULTILINE (at compile time) causes circumflex never to match. This option affects only the behaviour of the circumflex metacharacter, it does not affect \u0026ldquo;\\A\u0026rdquo;.   REGEX_MATCH_NOTEOL 256 Specifies that the end of the subject string is not the end of a line, so the dollar metacharacter should not match it nor (except in multiline mode) a newline immediately before it. Setting this without #G_REGEX_MULTILINE (at compile time) causes dollar never to match. This option affects only the behaviour of the dollar metacharacter, it does not affect \u0026ldquo;\\Z\u0026rdquo; or \u0026ldquo;\\z\u0026rdquo;.   REGEX_MATCH_NOTEMPTY 1024 An empty string is not considered to be a valid match if this option is set. If there are alternatives in the pattern, they are tried. If all the alternatives match the empty string, the entire match fails. For example, if the pattern \u0026ldquo;a?b?\u0026rdquo; is applied to a string not beginning with \u0026ldquo;a\u0026rdquo; or \u0026ldquo;b\u0026rdquo;, it matches the empty string at the start of the string. With this flag set, this match is not valid, so GRegex searches further into the string for occurrences of \u0026ldquo;a\u0026rdquo; or \u0026ldquo;b\u0026rdquo;.   REGEX_MATCH_PARTIAL 32768 Turns on the partial matching feature, for more documentation on partial matching see g_match_info_is_partial_match().   REGEX_MATCH_NEWLINE_CR 1048576 Overrides the newline definition set when creating a new #GRegex, setting the \u0026lsquo;\\r\u0026rsquo; character as line terminator.   REGEX_MATCH_NEWLINE_LF 2097152 Overrides the newline definition set when creating a new #GRegex, setting the \u0026lsquo;\\n\u0026rsquo; character as line terminator.   REGEX_MATCH_NEWLINE_CRLF 3145728 Overrides the newline definition set when creating a new #GRegex, setting the \u0026lsquo;\\r\\n\u0026rsquo; characters sequence as line terminator.   REGEX_MATCH_NEWLINE_ANY 4194304 Overrides the newline definition set when creating a new #GRegex, any Unicode newline sequence is recognised as a newline. These are \u0026lsquo;\\r\u0026rsquo;, \u0026lsquo;\\n\u0026rsquo; and \u0026lsquo;\\rn\u0026rsquo;, and the single characters U+000B LINE TABULATION, U+000C FORM FEED (FF), U+0085 NEXT LINE (NEL), U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR.   REGEX_MATCH_NEWLINE_ANYCRLF 5242880 Overrides the newline definition set when creating a new #GRegex; any \u0026lsquo;\\r\u0026rsquo;, \u0026lsquo;\\n\u0026rsquo;, or \u0026lsquo;\\r\\n\u0026rsquo; character sequence is recognized as a newline. Since: 2.34   REGEX_MATCH_BSR_ANYCRLF 8388608 Overrides the newline definition for \u0026ldquo;\\R\u0026rdquo; set when creating a new #GRegex; only \u0026lsquo;\\r\u0026rsquo;, \u0026lsquo;\\n\u0026rsquo;, or \u0026lsquo;\\r\\n\u0026rsquo; character sequences are recognized as a newline by \u0026ldquo;\\R\u0026rdquo;. Since: 2.34   REGEX_MATCH_BSR_ANY 16777216 Overrides the newline definition for \u0026ldquo;\\R\u0026rdquo; set when creating a new #GRegex; any Unicode newline character or character sequence are recognized as a newline by \u0026ldquo;\\R\u0026rdquo;. These are \u0026lsquo;\\r\u0026rsquo;, \u0026lsquo;\\n\u0026rsquo; and \u0026lsquo;\\rn\u0026rsquo;, and the single characters U+000B LINE TABULATION, U+000C FORM FEED (FF), U+0085 NEXT LINE (NEL), U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR. Since: 2.34   REGEX_MATCH_PARTIAL_SOFT 32768 An alias for #G_REGEX_MATCH_PARTIAL. Since: 2.34   REGEX_MATCH_PARTIAL_HARD 134217728 Turns on the partial matching feature. In contrast to to #G_REGEX_MATCH_PARTIAL_SOFT, this stops matching as soon as a partial match is found, without continuing to search for a possible complete match. See g_match_info_is_partial_match() for more information. Since: 2.34   REGEX_MATCH_NOTEMPTY_ATSTART 268435456 Like #G_REGEX_MATCH_NOTEMPTY, but only applied to the start of the matched string. For anchored patterns this can only happen for pattern containing \u0026ldquo;\\K\u0026rdquo;. Since: 2.34   since 2.14\nC type: GRegexMatchFlags\n SpawnFlags\nFlags passed to g_spawn_sync(), g_spawn_async() and g_spawn_async_with_pipes().\n  SPAWN_DEFAULT 0 no flags, default behaviour   SPAWN_LEAVE_DESCRIPTORS_OPEN 1 the parent\u0026rsquo;s open file descriptors will be inherited by the child; otherwise all descriptors except stdin, stdout and stderr will be closed before calling exec() in the child.   SPAWN_DO_NOT_REAP_CHILD 2 the child will not be automatically reaped; you must use g_child_watch_add() yourself (or call waitpid() or handle SIGCHLD yourself), or the child will become a zombie.   SPAWN_SEARCH_PATH 4 argv[0] need not be an absolute path, it will be looked for in the user\u0026rsquo;s PATH.   SPAWN_STDOUT_TO_DEV_NULL 8 the child\u0026rsquo;s standard output will be discarded, instead of going to the same location as the parent\u0026rsquo;s standard output.   SPAWN_STDERR_TO_DEV_NULL 16 the child\u0026rsquo;s standard error will be discarded.   SPAWN_CHILD_INHERITS_STDIN 32 the child will inherit the parent\u0026rsquo;s standard input (by default, the child\u0026rsquo;s standard input is attached to /dev/null).   SPAWN_FILE_AND_ARGV_ZERO 64 the first element of argv is the file to execute, while the remaining elements are the actual argument vector to pass to the file. Normally g_spawn_async_with_pipes() uses argv[0] as the file to execute, and passes all of argv to the child.   SPAWN_SEARCH_PATH_FROM_ENVP 128 if argv[0] is not an abolute path, it will be looked for in the PATH from the passed child environment. Since: 2.34   SPAWN_CLOEXEC_PIPES 256 create all pipes with the O_CLOEXEC flag set. Since: 2.40   C type: GSpawnFlags\n TestSubprocessFlags\nFlags to pass to g_test_trap_subprocess() to control input and output.\nNote that in contrast with g_test_trap_fork(), the default is to not show stdout and stderr.\n  TEST_SUBPROCESS_INHERIT_STDIN 1 If this flag is given, the child process will inherit the parent\u0026rsquo;s stdin. Otherwise, the child\u0026rsquo;s stdin is redirected to /dev/null.   TEST_SUBPROCESS_INHERIT_STDOUT 2 If this flag is given, the child process will inherit the parent\u0026rsquo;s stdout. Otherwise, the child\u0026rsquo;s stdout will not be visible, but it will be captured to allow later tests with g_test_trap_assert_stdout().   TEST_SUBPROCESS_INHERIT_STDERR 4 If this flag is given, the child process will inherit the parent\u0026rsquo;s stderr. Otherwise, the child\u0026rsquo;s stderr will not be visible, but it will be captured to allow later tests with g_test_trap_assert_stderr().   C type: GTestSubprocessFlags\n TestTrapFlags\nTest traps are guards around forked tests. These flags determine what traps to set.\n  TEST_TRAP_SILENCE_STDOUT 128 Redirect stdout of the test child to /dev/null so it cannot be observed on the console during test runs. The actual output is still captured though to allow later tests with g_test_trap_assert_stdout().   TEST_TRAP_SILENCE_STDERR 256 Redirect stderr of the test child to /dev/null so it cannot be observed on the console during test runs. The actual output is still captured though to allow later tests with g_test_trap_assert_stderr().   TEST_TRAP_INHERIT_STDIN 512 If this flag is given, stdin of the child process is shared with stdin of its parent process. It is redirected to /dev/null otherwise.   C type: GTestTrapFlags\n TraverseFlags\nSpecifies which nodes are visited during several of the tree functions, including g_node_traverse() and g_node_find().\n  TRAVERSE_LEAVES 1 only leaf nodes should be visited. This name has been introduced in 2.6, for older version use %G_TRAVERSE_LEAFS.   TRAVERSE_NON_LEAVES 2 only non-leaf nodes should be visited. This name has been introduced in 2.6, for older version use %G_TRAVERSE_NON_LEAFS.   TRAVERSE_ALL 3 all nodes should be visited.   TRAVERSE_MASK 3 a mask of all traverse flags.   TRAVERSE_LEAFS 1 identical to %G_TRAVERSE_LEAVES.   TRAVERSE_NON_LEAFS 2 identical to %G_TRAVERSE_NON_LEAVES.   C type: GTraverseFlags\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gobject/bitfields/",
	"title": "bitfields",
	"tags": [],
	"description": "",
	"content": "BindingFlags\nFlags to be passed to g_object_bind_property() or g_object_bind_property_full().\nThis enumeration can be extended at later date.\n  BINDING_DEFAULT 0 The default binding; if the source property changes, the target property is updated with its value.   BINDING_BIDIRECTIONAL 1 Bidirectional binding; if either the property of the source or the property of the target changes, the other is updated.   BINDING_SYNC_CREATE 2 Synchronize the values of the source and target properties when creating the binding; the direction of the synchronization is always from the source to the target.   BINDING_INVERT_BOOLEAN 4 If the two properties being bound are booleans, setting one to %TRUE will result in the other being set to %FALSE and vice versa. This flag will only work for boolean properties, and cannot be used when passing custom transformation functions to g_object_bind_property_full().   since 2.26\nC type: GBindingFlags\n ConnectFlags\nThe connection flags are used to specify the behaviour of a signal\u0026rsquo;s connection.\n  CONNECT_AFTER 1 whether the handler should be called before or after the default handler of the signal.   CONNECT_SWAPPED 2 whether the instance and data should be swapped when calling the handler; see g_signal_connect_swapped() for an example.   C type: GConnectFlags\n ParamFlags\nThrough the #GParamFlags flag values, certain aspects of parameters can be configured. See also #G_PARAM_STATIC_STRINGS.\n  PARAM_READABLE 1 the parameter is readable   PARAM_WRITABLE 2 the parameter is writable   PARAM_READWRITE 3 alias for %G_PARAM_READABLE | %G_PARAM_WRITABLE   PARAM_CONSTRUCT 4 the parameter will be set upon object construction   PARAM_CONSTRUCT_ONLY 8 the parameter can only be set upon object construction   PARAM_LAX_VALIDATION 16 upon parameter conversion (see g_param_value_convert()) strict validation is not required   PARAM_STATIC_NAME 32 the string used as name when constructing the parameter is guaranteed to remain valid and unmodified for the lifetime of the parameter. Since 2.8   PARAM_PRIVATE 32 internal   PARAM_STATIC_NICK 64 the string used as nick when constructing the parameter is guaranteed to remain valid and unmmodified for the lifetime of the parameter. Since 2.8   PARAM_STATIC_BLURB 128 the string used as blurb when constructing the parameter is guaranteed to remain valid and unmodified for the lifetime of the parameter. Since 2.8   PARAM_EXPLICIT_NOTIFY 1073741824 calls to g_object_set_property() for this property will not automatically result in a \u0026ldquo;notify\u0026rdquo; signal being emitted: the implementation must call g_object_notify() themselves in case the property actually changes. Since: 2.42.   PARAM_DEPRECATED 2147483648 the parameter is deprecated and will be removed in a future version. A warning will be generated if it is used while running with G_ENABLE_DIAGNOSTIC=1. Since 2.26   C type: GParamFlags\n SignalFlags\nThe signal flags are used to specify a signal\u0026rsquo;s behaviour, the overall signal description outlines how especially the RUN flags control the stages of a signal emission.\n  SIGNAL_RUN_FIRST 1 Invoke the object method handler in the first emission stage.   SIGNAL_RUN_LAST 2 Invoke the object method handler in the third emission stage.   SIGNAL_RUN_CLEANUP 4 Invoke the object method handler in the last emission stage.   SIGNAL_NO_RECURSE 8 Signals being emitted for an object while currently being in emission for this very object will not be emitted recursively, but instead cause the first emission to be restarted.   SIGNAL_DETAILED 16 This signal supports \u0026ldquo;::detail\u0026rdquo; appendices to the signal name upon handler connections and emissions.   SIGNAL_ACTION 32 Action signals are signals that may freely be emitted on alive objects from user code via g_signal_emit() and friends, without the need of being embedded into extra code that performs pre or post emission adjustments on the object. They can also be thought of as object methods which can be called generically by third-party code.   SIGNAL_NO_HOOKS 64 No emissions hooks are supported for this signal.   SIGNAL_MUST_COLLECT 128 Varargs signal emission will always collect the arguments, even if there are no signal handlers connected. Since 2.30.   SIGNAL_DEPRECATED 256 The signal is deprecated and will be removed in a future version. A warning will be generated if it is connected while running with G_ENABLE_DIAGNOSTIC=1. Since 2.32.   C type: GSignalFlags\n SignalMatchType\nThe match types specify what g_signal_handlers_block_matched(), g_signal_handlers_unblock_matched() and g_signal_handlers_disconnect_matched() match signals by.\n  SIGNAL_MATCH_ID 1 The signal id must be equal.   SIGNAL_MATCH_DETAIL 2 The signal detail be equal.   SIGNAL_MATCH_CLOSURE 4 The closure must be the same.   SIGNAL_MATCH_FUNC 8 The C closure callback must be the same.   SIGNAL_MATCH_DATA 16 The closure data must be the same.   SIGNAL_MATCH_UNBLOCKED 32 Only unblocked signals may matched.   C type: GSignalMatchType\n TypeDebugFlags\nThese flags used to be passed to g_type_init_with_debug_flags() which is now deprecated.\nIf you need to enable debugging features, use the GOBJECT_DEBUG environment variable.\n  TYPE_DEBUG_NONE 0 Print no messages   TYPE_DEBUG_OBJECTS 1 Print messages about object bookkeeping   TYPE_DEBUG_SIGNALS 2 Print messages about signal emissions   TYPE_DEBUG_INSTANCE_COUNT 4 Keep a count of instances of each type   TYPE_DEBUG_MASK 7 Mask covering all debug flags   C type: GTypeDebugFlags\n TypeFlags\nBit masks used to check or determine characteristics of a type.\n  TYPE_FLAG_ABSTRACT 16 Indicates an abstract type. No instances can be created for an abstract type   TYPE_FLAG_VALUE_ABSTRACT 32 Indicates an abstract value type, i.e. a type that introduces a value table, but can\u0026rsquo;t be used for g_value_init()   C type: GTypeFlags\n TypeFundamentalFlags\nBit masks used to check or determine specific characteristics of a fundamental type.\n  TYPE_FLAG_CLASSED 1 Indicates a classed type   TYPE_FLAG_INSTANTIATABLE 2 Indicates an instantiable type (implies classed)   TYPE_FLAG_DERIVABLE 4 Indicates a flat derivable type   TYPE_FLAG_DEEP_DERIVABLE 8 Indicates a deep derivable type (implies derivable)   C type: GTypeFundamentalFlags\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gtk/bitfields/",
	"title": "bitfields",
	"tags": [],
	"description": "",
	"content": "AccelFlags\nAccelerator flags used with gtk_accel_group_connect().\n  GTK_ACCEL_VISIBLE 1 Accelerator is visible   GTK_ACCEL_LOCKED 2 Accelerator not removable   GTK_ACCEL_MASK 7 Mask   C type: GtkAccelFlags\n ApplicationInhibitFlags\nTypes of user actions that may be blocked by gtk_application_inhibit().\n  GTK_APPLICATION_INHIBIT_LOGOUT 1 Inhibit ending the user session by logging out or by shutting down the computer   GTK_APPLICATION_INHIBIT_SWITCH 2 Inhibit user switching   GTK_APPLICATION_INHIBIT_SUSPEND 4 Inhibit suspending the session or computer   GTK_APPLICATION_INHIBIT_IDLE 8 Inhibit the session being marked as idle (and possibly locked)   since 3.4\nC type: GtkApplicationInhibitFlags\n AttachOptions\nDenotes the expansion properties that a widget will have when it (or its parent) is resized.\n  GTK_EXPAND 1 the widget should expand to take up any extra space in its container that has been allocated.   GTK_SHRINK 2 the widget should shrink as and when possible.   GTK_FILL 4 the widget should fill the space allocated to it.   C type: GtkAttachOptions\n CalendarDisplayOptions\nThese options can be used to influence the display and behaviour of a #GtkCalendar.\n  GTK_CALENDAR_SHOW_HEADING 1 Specifies that the month and year should be displayed.   GTK_CALENDAR_SHOW_DAY_NAMES 2 Specifies that three letter day descriptions should be present.   GTK_CALENDAR_NO_MONTH_CHANGE 4 Prevents the user from switching months with the calendar.   GTK_CALENDAR_SHOW_WEEK_NUMBERS 8 Displays each week numbers of the current year, down the left side of the calendar.   GTK_CALENDAR_SHOW_DETAILS 32 Just show an indicator, not the full details text when details are provided. See gtk_calendar_set_detail_func().   C type: GtkCalendarDisplayOptions\n CellRendererState\nTells how a cell is to be rendered.\n  GTK_CELL_RENDERER_SELECTED 1 The cell is currently selected, and probably has a selection colored background to render to.   GTK_CELL_RENDERER_PRELIT 2 The mouse is hovering over the cell.   GTK_CELL_RENDERER_INSENSITIVE 4 The cell is drawn in an insensitive manner   GTK_CELL_RENDERER_SORTED 8 The cell is in a sorted row   GTK_CELL_RENDERER_FOCUSED 16 The cell is in the focus row.   GTK_CELL_RENDERER_EXPANDABLE 32 The cell is in a row that can be expanded. Since 3.4   GTK_CELL_RENDERER_EXPANDED 64 The cell is in a row that is expanded. Since 3.4   C type: GtkCellRendererState\n DebugFlag\n  GTK_DEBUG_MISC 1   GTK_DEBUG_PLUGSOCKET 2   GTK_DEBUG_TEXT 4   GTK_DEBUG_TREE 8   GTK_DEBUG_UPDATES 16   GTK_DEBUG_KEYBINDINGS 32   GTK_DEBUG_MULTIHEAD 64   GTK_DEBUG_MODULES 128   GTK_DEBUG_GEOMETRY 256   GTK_DEBUG_ICONTHEME 512   GTK_DEBUG_PRINTING 1024   GTK_DEBUG_BUILDER 2048   GTK_DEBUG_SIZE_REQUEST 4096   GTK_DEBUG_NO_CSS_CACHE 8192   GTK_DEBUG_BASELINES 16384   GTK_DEBUG_PIXEL_CACHE 32768   GTK_DEBUG_NO_PIXEL_CACHE 65536   GTK_DEBUG_INTERACTIVE 131072   GTK_DEBUG_TOUCHSCREEN 262144   GTK_DEBUG_ACTIONS 524288   GTK_DEBUG_RESIZE 1048576   GTK_DEBUG_LAYOUT 2097152   C type: GtkDebugFlag\n DestDefaults\nThe #GtkDestDefaults enumeration specifies the various types of action that will be taken on behalf of the user for a drag destination site.\n  GTK_DEST_DEFAULT_MOTION 1 If set for a widget, GTK+, during a drag over this widget will check if the drag matches this widget’s list of possible targets and actions. GTK+ will then call gdk_drag_status() as appropriate.   GTK_DEST_DEFAULT_HIGHLIGHT 2 If set for a widget, GTK+ will draw a highlight on this widget as long as a drag is over this widget and the widget drag format and action are acceptable.   GTK_DEST_DEFAULT_DROP 4 If set for a widget, when a drop occurs, GTK+ will will check if the drag matches this widget’s list of possible targets and actions. If so, GTK+ will call gtk_drag_get_data() on behalf of the widget. Whether or not the drop is successful, GTK+ will call gtk_drag_finish(). If the action was a move, then if the drag was successful, then %TRUE will be passed for the @delete parameter to gtk_drag_finish().   GTK_DEST_DEFAULT_ALL 7 If set, specifies that all default actions should be taken.   C type: GtkDestDefaults\n DialogFlags\nFlags used to influence dialog construction.\n  GTK_DIALOG_MODAL 1 Make the constructed dialog modal, see gtk_window_set_modal()   GTK_DIALOG_DESTROY_WITH_PARENT 2 Destroy the dialog when its parent is destroyed, see gtk_window_set_destroy_with_parent()   GTK_DIALOG_USE_HEADER_BAR 4 Create dialog with actions in header bar instead of action area. Since 3.12.   C type: GtkDialogFlags\n FileFilterFlags\nThese flags indicate what parts of a #GtkFileFilterInfo struct are filled or need to be filled.\n  GTK_FILE_FILTER_FILENAME 1 the filename of the file being tested   GTK_FILE_FILTER_URI 2 the URI for the file being tested   GTK_FILE_FILTER_DISPLAY_NAME 4 the string that will be used to display the file in the file chooser   GTK_FILE_FILTER_MIME_TYPE 8 the mime type of the file   C type: GtkFileFilterFlags\n IconLookupFlags\nUsed to specify options for gtk_icon_theme_lookup_icon()\n  GTK_ICON_LOOKUP_NO_SVG 1 Never get SVG icons, even if gdk-pixbuf supports them. Cannot be used together with %GTK_ICON_LOOKUP_FORCE_SVG.   GTK_ICON_LOOKUP_FORCE_SVG 2 Get SVG icons, even if gdk-pixbuf doesn’t support them. Cannot be used together with %GTK_ICON_LOOKUP_NO_SVG.   GTK_ICON_LOOKUP_USE_BUILTIN 4 When passed to gtk_icon_theme_lookup_icon() includes builtin icons as well as files. For a builtin icon, gtk_icon_info_get_filename() is %NULL and you need to call gtk_icon_info_get_builtin_pixbuf().   GTK_ICON_LOOKUP_GENERIC_FALLBACK 8 Try to shorten icon name at \u0026lsquo;-\u0026rsquo; characters before looking at inherited themes. This flag is only supported in functions that take a single icon name. For more general fallback, see gtk_icon_theme_choose_icon(). Since 2.12.   GTK_ICON_LOOKUP_FORCE_SIZE 16 Always get the icon scaled to the requested size. Since 2.14.   GTK_ICON_LOOKUP_FORCE_REGULAR 32 Try to always load regular icons, even when symbolic icon names are given. Since 3.14.   GTK_ICON_LOOKUP_FORCE_SYMBOLIC 64 Try to always load symbolic icons, even when regular icon names are given. Since 3.14.   GTK_ICON_LOOKUP_DIR_LTR 128 Try to load a variant of the icon for left-to-right text direction. Since 3.14.   GTK_ICON_LOOKUP_DIR_RTL 256 Try to load a variant of the icon for right-to-left text direction. Since 3.14.   C type: GtkIconLookupFlags\n InputHints\nDescribes hints that might be taken into account by input methods or applications. Note that input methods may already tailor their behaviour according to the #GtkInputPurpose of the entry.\nSome common sense is expected when using these flags - mixing @GTK_INPUT_HINT_LOWERCASE with any of the uppercase hints makes no sense.\nThis enumeration may be extended in the future; input methods should ignore unknown values.\n  GTK_INPUT_HINT_NONE 0 No special behaviour suggested   GTK_INPUT_HINT_SPELLCHECK 1 Suggest checking for typos   GTK_INPUT_HINT_NO_SPELLCHECK 2 Suggest not checking for typos   GTK_INPUT_HINT_WORD_COMPLETION 4 Suggest word completion   GTK_INPUT_HINT_LOWERCASE 8 Suggest to convert all text to lowercase   GTK_INPUT_HINT_UPPERCASE_CHARS 16 Suggest to capitalize all text   GTK_INPUT_HINT_UPPERCASE_WORDS 32 Suggest to capitalize the first character of each word   GTK_INPUT_HINT_UPPERCASE_SENTENCES 64 Suggest to capitalize the first word of each sentence   GTK_INPUT_HINT_INHIBIT_OSK 128 Suggest to not show an onscreen keyboard (e.g for a calculator that already has all the keys).   GTK_INPUT_HINT_VERTICAL_WRITING 256 The text is vertical. Since 3.18   GTK_INPUT_HINT_EMOJI 512 Suggest offering Emoji support. Since 3.22.20   GTK_INPUT_HINT_NO_EMOJI 1024 Suggest not offering Emoji support. Since 3.22.20   since 3.6\nC type: GtkInputHints\n JunctionSides\nDescribes how a rendered element connects to adjacent elements.\n  GTK_JUNCTION_NONE 0 No junctions.   GTK_JUNCTION_CORNER_TOPLEFT 1 Element connects on the top-left corner.   GTK_JUNCTION_CORNER_TOPRIGHT 2 Element connects on the top-right corner.   GTK_JUNCTION_CORNER_BOTTOMLEFT 4 Element connects on the bottom-left corner.   GTK_JUNCTION_CORNER_BOTTOMRIGHT 8 Element connects on the bottom-right corner.   GTK_JUNCTION_TOP 3 Element connects on the top side.   GTK_JUNCTION_BOTTOM 12 Element connects on the bottom side.   GTK_JUNCTION_LEFT 5 Element connects on the left side.   GTK_JUNCTION_RIGHT 10 Element connects on the right side.   C type: GtkJunctionSides\n PlacesOpenFlags\nThese flags serve two purposes. First, the application can call gtk_places_sidebar_set_open_flags() using these flags as a bitmask. This tells the sidebar that the application is able to open folders selected from the sidebar in various ways, for example, in new tabs or in new windows in addition to the normal mode.\nSecond, when one of these values gets passed back to the application in the #GtkPlacesSidebar::open-location signal, it means that the application should open the selected location in the normal way, in a new tab, or in a new window. The sidebar takes care of determining the desired way to open the location, based on the modifier keys that the user is pressing at the time the selection is made.\nIf the application never calls gtk_places_sidebar_set_open_flags(), then the sidebar will only use #GTK_PLACES_OPEN_NORMAL in the #GtkPlacesSidebar::open-location signal. This is the default mode of operation.\n  GTK_PLACES_OPEN_NORMAL 1 This is the default mode that #GtkPlacesSidebar uses if no other flags are specified. It indicates that the calling application should open the selected location in the normal way, for example, in the folder view beside the sidebar.   GTK_PLACES_OPEN_NEW_TAB 2 When passed to gtk_places_sidebar_set_open_flags(), this indicates that the application can open folders selected from the sidebar in new tabs. This value will be passed to the #GtkPlacesSidebar::open-location signal when the user selects that a location be opened in a new tab instead of in the standard fashion.   GTK_PLACES_OPEN_NEW_WINDOW 4 Similar to @GTK_PLACES_OPEN_NEW_TAB, but indicates that the application can open folders in new windows.   C type: GtkPlacesOpenFlags\n RcFlags\nDeprecated\n  GTK_RC_FG 1 Deprecated   GTK_RC_BG 2 Deprecated   GTK_RC_TEXT 4 Deprecated   GTK_RC_BASE 8 Deprecated   C type: GtkRcFlags\n RecentFilterFlags\nThese flags indicate what parts of a #GtkRecentFilterInfo struct are filled or need to be filled.\n  GTK_RECENT_FILTER_URI 1 the URI of the file being tested   GTK_RECENT_FILTER_DISPLAY_NAME 2 the string that will be used to display the file in the recent chooser   GTK_RECENT_FILTER_MIME_TYPE 4 the mime type of the file   GTK_RECENT_FILTER_APPLICATION 8 the list of applications that have registered the file   GTK_RECENT_FILTER_GROUP 16 the groups to which the file belongs to   GTK_RECENT_FILTER_AGE 32 the number of days elapsed since the file has been registered   C type: GtkRecentFilterFlags\n RegionFlags\nDescribes a region within a widget.\n  GTK_REGION_EVEN 1 Region has an even number within a set.   GTK_REGION_ODD 2 Region has an odd number within a set.   GTK_REGION_FIRST 4 Region is the first one within a set.   GTK_REGION_LAST 8 Region is the last one within a set.   GTK_REGION_ONLY 16 Region is the only one within a set.   GTK_REGION_SORTED 32 Region is part of a sorted area.   C type: GtkRegionFlags\n StateFlags\nDescribes a widget state. Widget states are used to match the widget against CSS pseudo-classes. Note that GTK extends the regular CSS classes and sometimes uses different names.\n  GTK_STATE_FLAG_NORMAL 0 State during normal operation.   GTK_STATE_FLAG_ACTIVE 1 Widget is active.   GTK_STATE_FLAG_PRELIGHT 2 Widget has a mouse pointer over it.   GTK_STATE_FLAG_SELECTED 4 Widget is selected.   GTK_STATE_FLAG_INSENSITIVE 8 Widget is insensitive.   GTK_STATE_FLAG_INCONSISTENT 16 Widget is inconsistent.   GTK_STATE_FLAG_FOCUSED 32 Widget has the keyboard focus.   GTK_STATE_FLAG_BACKDROP 64 Widget is in a background toplevel window.   GTK_STATE_FLAG_DIR_LTR 128 Widget is in left-to-right text direction. Since 3.8   GTK_STATE_FLAG_DIR_RTL 256 Widget is in right-to-left text direction. Since 3.8   GTK_STATE_FLAG_LINK 512 Widget is a link. Since 3.12   GTK_STATE_FLAG_VISITED 1024 The location the widget points to has already been visited. Since 3.12   GTK_STATE_FLAG_CHECKED 2048 Widget is checked. Since 3.14   GTK_STATE_FLAG_DROP_ACTIVE 4096 Widget is highlighted as a drop target for DND. Since 3.20   C type: GtkStateFlags\n StyleContextPrintFlags\nFlags that modify the behavior of gtk_style_context_to_string(). New values may be added to this enumeration.\n  GTK_STYLE_CONTEXT_PRINT_NONE 0   GTK_STYLE_CONTEXT_PRINT_RECURSE 1 Print the entire tree of CSS nodes starting at the style context\u0026rsquo;s node   GTK_STYLE_CONTEXT_PRINT_SHOW_STYLE 2 Show the values of the CSS properties for each node   since 3.20\nC type: GtkStyleContextPrintFlags\n TargetFlags\nThe #GtkTargetFlags enumeration is used to specify constraints on a #GtkTargetEntry.\n  GTK_TARGET_SAME_APP 1 If this is set, the target will only be selected for drags within a single application.   GTK_TARGET_SAME_WIDGET 2 If this is set, the target will only be selected for drags within a single widget.   GTK_TARGET_OTHER_APP 4 If this is set, the target will not be selected for drags within a single application.   GTK_TARGET_OTHER_WIDGET 8 If this is set, the target will not be selected for drags withing a single widget.   C type: GtkTargetFlags\n TextSearchFlags\nFlags affecting how a search is done.\nIf neither #GTK_TEXT_SEARCH_VISIBLE_ONLY nor #GTK_TEXT_SEARCH_TEXT_ONLY are enabled, the match must be exact; the special 0xFFFC character will match embedded pixbufs or child widgets.\n  GTK_TEXT_SEARCH_VISIBLE_ONLY 1 Search only visible data. A search match may have invisible text interspersed.   GTK_TEXT_SEARCH_TEXT_ONLY 2 Search only text. A match may have pixbufs or child widgets mixed inside the matched range.   GTK_TEXT_SEARCH_CASE_INSENSITIVE 4 The text will be matched regardless of what case it is in.   C type: GtkTextSearchFlags\n ToolPaletteDragTargets\nFlags used to specify the supported drag targets.\n  GTK_TOOL_PALETTE_DRAG_ITEMS 1 Support drag of items.   GTK_TOOL_PALETTE_DRAG_GROUPS 2 Support drag of groups.   C type: GtkToolPaletteDragTargets\n TreeModelFlags\nThese flags indicate various properties of a #GtkTreeModel.\nThey are returned by gtk_tree_model_get_flags(), and must be static for the lifetime of the object. A more complete description of #GTK_TREE_MODEL_ITERS_PERSIST can be found in the overview of this section.\n  GTK_TREE_MODEL_ITERS_PERSIST 1 iterators survive all signals emitted by the tree   GTK_TREE_MODEL_LIST_ONLY 2 the model is a list only, and never has children   C type: GtkTreeModelFlags\n UIManagerItemType\nThese enumeration values are used by gtk_ui_manager_add_ui() to determine what UI element to create.\n  GTK_UI_MANAGER_AUTO 0 Pick the type of the UI element according to context.   GTK_UI_MANAGER_MENUBAR 1 Create a menubar.   GTK_UI_MANAGER_MENU 2 Create a menu.   GTK_UI_MANAGER_TOOLBAR 4 Create a toolbar.   GTK_UI_MANAGER_PLACEHOLDER 8 Insert a placeholder.   GTK_UI_MANAGER_POPUP 16 Create a popup menu.   GTK_UI_MANAGER_MENUITEM 32 Create a menuitem.   GTK_UI_MANAGER_TOOLITEM 64 Create a toolitem.   GTK_UI_MANAGER_SEPARATOR 128 Create a separator.   GTK_UI_MANAGER_ACCELERATOR 256 Install an accelerator.   GTK_UI_MANAGER_POPUP_WITH_ACCELS 512 Same as %GTK_UI_MANAGER_POPUP, but the actions’ accelerators are shown.   C type: GtkUIManagerItemType\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/pango/bitfields/",
	"title": "bitfields",
	"tags": [],
	"description": "",
	"content": "FontMask\nThe bits in a #PangoFontMask correspond to fields in a #PangoFontDescription that have been set.\n  PANGO_FONT_MASK_FAMILY 1 the font family is specified.   PANGO_FONT_MASK_STYLE 2 the font style is specified.   PANGO_FONT_MASK_VARIANT 4 the font variant is specified.   PANGO_FONT_MASK_WEIGHT 8 the font weight is specified.   PANGO_FONT_MASK_STRETCH 16 the font stretch is specified.   PANGO_FONT_MASK_SIZE 32 the font size is specified.   PANGO_FONT_MASK_GRAVITY 64 the font gravity is specified (Since: 1.16.)   C type: PangoFontMask\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/cairo/",
	"title": "cairo",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/atk/constants/",
	"title": "constants",
	"tags": [],
	"description": "",
	"content": "BINARY_AGE\nLike atk_get_binary_age(), but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: ATK_BINARY_AGE\nsince 2.7.4\n INTERFACE_AGE\nLike atk_get_interface_age(), but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: ATK_INTERFACE_AGE\nsince 2.7.4\n MAJOR_VERSION\nLike atk_get_major_version(), but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: ATK_MAJOR_VERSION\nsince 2.7.4\n MICRO_VERSION\nLike atk_get_micro_version(), but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: ATK_MICRO_VERSION\nsince 2.7.4\n MINOR_VERSION\nLike atk_get_minor_version(), but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: ATK_MINOR_VERSION\nsince 2.7.4\n VERSION_MIN_REQUIRED\nA macro that should be defined by the user prior to including the atk/atk.h header. The definition should be one of the predefined ATK version macros: %ATK_VERSION_2_12, %ATK_VERSION_2_14,\u0026hellip;\nThis macro defines the earliest version of ATK that the package is required to be able to compile against.\nIf the compiler is configured to warn about the use of deprecated functions, then using functions that were deprecated in version %ATK_VERSION_MIN_REQUIRED or earlier will cause warnings (but using functions deprecated in later releases will not).\nC type: ATK_VERSION_MIN_REQUIRED\nsince 2.14\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/cairo/constants/",
	"title": "constants",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/gdk/constants/",
	"title": "constants",
	"tags": [],
	"description": "",
	"content": "BUTTON_MIDDLE\nThe middle button.\nC type: GDK_BUTTON_MIDDLE\nsince 3.4\n BUTTON_PRIMARY\nThe primary button. This is typically the left mouse button, or the right button in a left-handed setup.\nC type: GDK_BUTTON_PRIMARY\nsince 3.4\n BUTTON_SECONDARY\nThe secondary button. This is typically the right mouse button, or the left button in a left-handed setup.\nC type: GDK_BUTTON_SECONDARY\nsince 3.4\n CURRENT_TIME\nRepresents the current time, and can be used anywhere a time is expected.\nC type: GDK_CURRENT_TIME\n EVENT_PROPAGATE\nUse this macro as the return value for continuing the propagation of an event handler.\nC type: GDK_EVENT_PROPAGATE\nsince 3.4\n EVENT_STOP\nUse this macro as the return value for stopping the propagation of an event handler.\nC type: GDK_EVENT_STOP\nsince 3.4\n KEY_0\nC type: GDK_KEY_0\n KEY_1\nC type: GDK_KEY_1\n KEY_2\nC type: GDK_KEY_2\n KEY_3\nC type: GDK_KEY_3\n KEY_3270_AltCursor\nC type: GDK_KEY_3270_AltCursor\n KEY_3270_Attn\nC type: GDK_KEY_3270_Attn\n KEY_3270_BackTab\nC type: GDK_KEY_3270_BackTab\n KEY_3270_ChangeScreen\nC type: GDK_KEY_3270_ChangeScreen\n KEY_3270_Copy\nC type: GDK_KEY_3270_Copy\n KEY_3270_CursorBlink\nC type: GDK_KEY_3270_CursorBlink\n KEY_3270_CursorSelect\nC type: GDK_KEY_3270_CursorSelect\n KEY_3270_DeleteWord\nC type: GDK_KEY_3270_DeleteWord\n KEY_3270_Duplicate\nC type: GDK_KEY_3270_Duplicate\n KEY_3270_Enter\nC type: GDK_KEY_3270_Enter\n KEY_3270_EraseEOF\nC type: GDK_KEY_3270_EraseEOF\n KEY_3270_EraseInput\nC type: GDK_KEY_3270_EraseInput\n KEY_3270_ExSelect\nC type: GDK_KEY_3270_ExSelect\n KEY_3270_FieldMark\nC type: GDK_KEY_3270_FieldMark\n KEY_3270_Ident\nC type: GDK_KEY_3270_Ident\n KEY_3270_Jump\nC type: GDK_KEY_3270_Jump\n KEY_3270_KeyClick\nC type: GDK_KEY_3270_KeyClick\n KEY_3270_Left2\nC type: GDK_KEY_3270_Left2\n KEY_3270_PA1\nC type: GDK_KEY_3270_PA1\n KEY_3270_PA2\nC type: GDK_KEY_3270_PA2\n KEY_3270_PA3\nC type: GDK_KEY_3270_PA3\n KEY_3270_Play\nC type: GDK_KEY_3270_Play\n KEY_3270_PrintScreen\nC type: GDK_KEY_3270_PrintScreen\n KEY_3270_Quit\nC type: GDK_KEY_3270_Quit\n KEY_3270_Record\nC type: GDK_KEY_3270_Record\n KEY_3270_Reset\nC type: GDK_KEY_3270_Reset\n KEY_3270_Right2\nC type: GDK_KEY_3270_Right2\n KEY_3270_Rule\nC type: GDK_KEY_3270_Rule\n KEY_3270_Setup\nC type: GDK_KEY_3270_Setup\n KEY_3270_Test\nC type: GDK_KEY_3270_Test\n KEY_4\nC type: GDK_KEY_4\n KEY_5\nC type: GDK_KEY_5\n KEY_6\nC type: GDK_KEY_6\n KEY_7\nC type: GDK_KEY_7\n KEY_8\nC type: GDK_KEY_8\n KEY_9\nC type: GDK_KEY_9\n KEY_A\nC type: GDK_KEY_A\n KEY_AE\nC type: GDK_KEY_AE\n KEY_Aacute\nC type: GDK_KEY_Aacute\n KEY_Abelowdot\nC type: GDK_KEY_Abelowdot\n KEY_Abreve\nC type: GDK_KEY_Abreve\n KEY_Abreveacute\nC type: GDK_KEY_Abreveacute\n KEY_Abrevebelowdot\nC type: GDK_KEY_Abrevebelowdot\n KEY_Abrevegrave\nC type: GDK_KEY_Abrevegrave\n KEY_Abrevehook\nC type: GDK_KEY_Abrevehook\n KEY_Abrevetilde\nC type: GDK_KEY_Abrevetilde\n KEY_AccessX_Enable\nC type: GDK_KEY_AccessX_Enable\n KEY_AccessX_Feedback_Enable\nC type: GDK_KEY_AccessX_Feedback_Enable\n KEY_Acircumflex\nC type: GDK_KEY_Acircumflex\n KEY_Acircumflexacute\nC type: GDK_KEY_Acircumflexacute\n KEY_Acircumflexbelowdot\nC type: GDK_KEY_Acircumflexbelowdot\n KEY_Acircumflexgrave\nC type: GDK_KEY_Acircumflexgrave\n KEY_Acircumflexhook\nC type: GDK_KEY_Acircumflexhook\n KEY_Acircumflextilde\nC type: GDK_KEY_Acircumflextilde\n KEY_AddFavorite\nC type: GDK_KEY_AddFavorite\n KEY_Adiaeresis\nC type: GDK_KEY_Adiaeresis\n KEY_Agrave\nC type: GDK_KEY_Agrave\n KEY_Ahook\nC type: GDK_KEY_Ahook\n KEY_Alt_L\nC type: GDK_KEY_Alt_L\n KEY_Alt_R\nC type: GDK_KEY_Alt_R\n KEY_Amacron\nC type: GDK_KEY_Amacron\n KEY_Aogonek\nC type: GDK_KEY_Aogonek\n KEY_ApplicationLeft\nC type: GDK_KEY_ApplicationLeft\n KEY_ApplicationRight\nC type: GDK_KEY_ApplicationRight\n KEY_Arabic_0\nC type: GDK_KEY_Arabic_0\n KEY_Arabic_1\nC type: GDK_KEY_Arabic_1\n KEY_Arabic_2\nC type: GDK_KEY_Arabic_2\n KEY_Arabic_3\nC type: GDK_KEY_Arabic_3\n KEY_Arabic_4\nC type: GDK_KEY_Arabic_4\n KEY_Arabic_5\nC type: GDK_KEY_Arabic_5\n KEY_Arabic_6\nC type: GDK_KEY_Arabic_6\n KEY_Arabic_7\nC type: GDK_KEY_Arabic_7\n KEY_Arabic_8\nC type: GDK_KEY_Arabic_8\n KEY_Arabic_9\nC type: GDK_KEY_Arabic_9\n KEY_Arabic_ain\nC type: GDK_KEY_Arabic_ain\n KEY_Arabic_alef\nC type: GDK_KEY_Arabic_alef\n KEY_Arabic_alefmaksura\nC type: GDK_KEY_Arabic_alefmaksura\n KEY_Arabic_beh\nC type: GDK_KEY_Arabic_beh\n KEY_Arabic_comma\nC type: GDK_KEY_Arabic_comma\n KEY_Arabic_dad\nC type: GDK_KEY_Arabic_dad\n KEY_Arabic_dal\nC type: GDK_KEY_Arabic_dal\n KEY_Arabic_damma\nC type: GDK_KEY_Arabic_damma\n KEY_Arabic_dammatan\nC type: GDK_KEY_Arabic_dammatan\n KEY_Arabic_ddal\nC type: GDK_KEY_Arabic_ddal\n KEY_Arabic_farsi_yeh\nC type: GDK_KEY_Arabic_farsi_yeh\n KEY_Arabic_fatha\nC type: GDK_KEY_Arabic_fatha\n KEY_Arabic_fathatan\nC type: GDK_KEY_Arabic_fathatan\n KEY_Arabic_feh\nC type: GDK_KEY_Arabic_feh\n KEY_Arabic_fullstop\nC type: GDK_KEY_Arabic_fullstop\n KEY_Arabic_gaf\nC type: GDK_KEY_Arabic_gaf\n KEY_Arabic_ghain\nC type: GDK_KEY_Arabic_ghain\n KEY_Arabic_ha\nC type: GDK_KEY_Arabic_ha\n KEY_Arabic_hah\nC type: GDK_KEY_Arabic_hah\n KEY_Arabic_hamza\nC type: GDK_KEY_Arabic_hamza\n KEY_Arabic_hamza_above\nC type: GDK_KEY_Arabic_hamza_above\n KEY_Arabic_hamza_below\nC type: GDK_KEY_Arabic_hamza_below\n KEY_Arabic_hamzaonalef\nC type: GDK_KEY_Arabic_hamzaonalef\n KEY_Arabic_hamzaonwaw\nC type: GDK_KEY_Arabic_hamzaonwaw\n KEY_Arabic_hamzaonyeh\nC type: GDK_KEY_Arabic_hamzaonyeh\n KEY_Arabic_hamzaunderalef\nC type: GDK_KEY_Arabic_hamzaunderalef\n KEY_Arabic_heh\nC type: GDK_KEY_Arabic_heh\n KEY_Arabic_heh_doachashmee\nC type: GDK_KEY_Arabic_heh_doachashmee\n KEY_Arabic_heh_goal\nC type: GDK_KEY_Arabic_heh_goal\n KEY_Arabic_jeem\nC type: GDK_KEY_Arabic_jeem\n KEY_Arabic_jeh\nC type: GDK_KEY_Arabic_jeh\n KEY_Arabic_kaf\nC type: GDK_KEY_Arabic_kaf\n KEY_Arabic_kasra\nC type: GDK_KEY_Arabic_kasra\n KEY_Arabic_kasratan\nC type: GDK_KEY_Arabic_kasratan\n KEY_Arabic_keheh\nC type: GDK_KEY_Arabic_keheh\n KEY_Arabic_khah\nC type: GDK_KEY_Arabic_khah\n KEY_Arabic_lam\nC type: GDK_KEY_Arabic_lam\n KEY_Arabic_madda_above\nC type: GDK_KEY_Arabic_madda_above\n KEY_Arabic_maddaonalef\nC type: GDK_KEY_Arabic_maddaonalef\n KEY_Arabic_meem\nC type: GDK_KEY_Arabic_meem\n KEY_Arabic_noon\nC type: GDK_KEY_Arabic_noon\n KEY_Arabic_noon_ghunna\nC type: GDK_KEY_Arabic_noon_ghunna\n KEY_Arabic_peh\nC type: GDK_KEY_Arabic_peh\n KEY_Arabic_percent\nC type: GDK_KEY_Arabic_percent\n KEY_Arabic_qaf\nC type: GDK_KEY_Arabic_qaf\n KEY_Arabic_question_mark\nC type: GDK_KEY_Arabic_question_mark\n KEY_Arabic_ra\nC type: GDK_KEY_Arabic_ra\n KEY_Arabic_rreh\nC type: GDK_KEY_Arabic_rreh\n KEY_Arabic_sad\nC type: GDK_KEY_Arabic_sad\n KEY_Arabic_seen\nC type: GDK_KEY_Arabic_seen\n KEY_Arabic_semicolon\nC type: GDK_KEY_Arabic_semicolon\n KEY_Arabic_shadda\nC type: GDK_KEY_Arabic_shadda\n KEY_Arabic_sheen\nC type: GDK_KEY_Arabic_sheen\n KEY_Arabic_sukun\nC type: GDK_KEY_Arabic_sukun\n KEY_Arabic_superscript_alef\nC type: GDK_KEY_Arabic_superscript_alef\n KEY_Arabic_switch\nC type: GDK_KEY_Arabic_switch\n KEY_Arabic_tah\nC type: GDK_KEY_Arabic_tah\n KEY_Arabic_tatweel\nC type: GDK_KEY_Arabic_tatweel\n KEY_Arabic_tcheh\nC type: GDK_KEY_Arabic_tcheh\n KEY_Arabic_teh\nC type: GDK_KEY_Arabic_teh\n KEY_Arabic_tehmarbuta\nC type: GDK_KEY_Arabic_tehmarbuta\n KEY_Arabic_thal\nC type: GDK_KEY_Arabic_thal\n KEY_Arabic_theh\nC type: GDK_KEY_Arabic_theh\n KEY_Arabic_tteh\nC type: GDK_KEY_Arabic_tteh\n KEY_Arabic_veh\nC type: GDK_KEY_Arabic_veh\n KEY_Arabic_waw\nC type: GDK_KEY_Arabic_waw\n KEY_Arabic_yeh\nC type: GDK_KEY_Arabic_yeh\n KEY_Arabic_yeh_baree\nC type: GDK_KEY_Arabic_yeh_baree\n KEY_Arabic_zah\nC type: GDK_KEY_Arabic_zah\n KEY_Arabic_zain\nC type: GDK_KEY_Arabic_zain\n KEY_Aring\nC type: GDK_KEY_Aring\n KEY_Armenian_AT\nC type: GDK_KEY_Armenian_AT\n KEY_Armenian_AYB\nC type: GDK_KEY_Armenian_AYB\n KEY_Armenian_BEN\nC type: GDK_KEY_Armenian_BEN\n KEY_Armenian_CHA\nC type: GDK_KEY_Armenian_CHA\n KEY_Armenian_DA\nC type: GDK_KEY_Armenian_DA\n KEY_Armenian_DZA\nC type: GDK_KEY_Armenian_DZA\n KEY_Armenian_E\nC type: GDK_KEY_Armenian_E\n KEY_Armenian_FE\nC type: GDK_KEY_Armenian_FE\n KEY_Armenian_GHAT\nC type: GDK_KEY_Armenian_GHAT\n KEY_Armenian_GIM\nC type: GDK_KEY_Armenian_GIM\n KEY_Armenian_HI\nC type: GDK_KEY_Armenian_HI\n KEY_Armenian_HO\nC type: GDK_KEY_Armenian_HO\n KEY_Armenian_INI\nC type: GDK_KEY_Armenian_INI\n KEY_Armenian_JE\nC type: GDK_KEY_Armenian_JE\n KEY_Armenian_KE\nC type: GDK_KEY_Armenian_KE\n KEY_Armenian_KEN\nC type: GDK_KEY_Armenian_KEN\n KEY_Armenian_KHE\nC type: GDK_KEY_Armenian_KHE\n KEY_Armenian_LYUN\nC type: GDK_KEY_Armenian_LYUN\n KEY_Armenian_MEN\nC type: GDK_KEY_Armenian_MEN\n KEY_Armenian_NU\nC type: GDK_KEY_Armenian_NU\n KEY_Armenian_O\nC type: GDK_KEY_Armenian_O\n KEY_Armenian_PE\nC type: GDK_KEY_Armenian_PE\n KEY_Armenian_PYUR\nC type: GDK_KEY_Armenian_PYUR\n KEY_Armenian_RA\nC type: GDK_KEY_Armenian_RA\n KEY_Armenian_RE\nC type: GDK_KEY_Armenian_RE\n KEY_Armenian_SE\nC type: GDK_KEY_Armenian_SE\n KEY_Armenian_SHA\nC type: GDK_KEY_Armenian_SHA\n KEY_Armenian_TCHE\nC type: GDK_KEY_Armenian_TCHE\n KEY_Armenian_TO\nC type: GDK_KEY_Armenian_TO\n KEY_Armenian_TSA\nC type: GDK_KEY_Armenian_TSA\n KEY_Armenian_TSO\nC type: GDK_KEY_Armenian_TSO\n KEY_Armenian_TYUN\nC type: GDK_KEY_Armenian_TYUN\n KEY_Armenian_VEV\nC type: GDK_KEY_Armenian_VEV\n KEY_Armenian_VO\nC type: GDK_KEY_Armenian_VO\n KEY_Armenian_VYUN\nC type: GDK_KEY_Armenian_VYUN\n KEY_Armenian_YECH\nC type: GDK_KEY_Armenian_YECH\n KEY_Armenian_ZA\nC type: GDK_KEY_Armenian_ZA\n KEY_Armenian_ZHE\nC type: GDK_KEY_Armenian_ZHE\n KEY_Armenian_accent\nC type: GDK_KEY_Armenian_accent\n KEY_Armenian_amanak\nC type: GDK_KEY_Armenian_amanak\n KEY_Armenian_apostrophe\nC type: GDK_KEY_Armenian_apostrophe\n KEY_Armenian_at\nC type: GDK_KEY_Armenian_at\n KEY_Armenian_ayb\nC type: GDK_KEY_Armenian_ayb\n KEY_Armenian_ben\nC type: GDK_KEY_Armenian_ben\n KEY_Armenian_but\nC type: GDK_KEY_Armenian_but\n KEY_Armenian_cha\nC type: GDK_KEY_Armenian_cha\n KEY_Armenian_da\nC type: GDK_KEY_Armenian_da\n KEY_Armenian_dza\nC type: GDK_KEY_Armenian_dza\n KEY_Armenian_e\nC type: GDK_KEY_Armenian_e\n KEY_Armenian_exclam\nC type: GDK_KEY_Armenian_exclam\n KEY_Armenian_fe\nC type: GDK_KEY_Armenian_fe\n KEY_Armenian_full_stop\nC type: GDK_KEY_Armenian_full_stop\n KEY_Armenian_ghat\nC type: GDK_KEY_Armenian_ghat\n KEY_Armenian_gim\nC type: GDK_KEY_Armenian_gim\n KEY_Armenian_hi\nC type: GDK_KEY_Armenian_hi\n KEY_Armenian_ho\nC type: GDK_KEY_Armenian_ho\n KEY_Armenian_hyphen\nC type: GDK_KEY_Armenian_hyphen\n KEY_Armenian_ini\nC type: GDK_KEY_Armenian_ini\n KEY_Armenian_je\nC type: GDK_KEY_Armenian_je\n KEY_Armenian_ke\nC type: GDK_KEY_Armenian_ke\n KEY_Armenian_ken\nC type: GDK_KEY_Armenian_ken\n KEY_Armenian_khe\nC type: GDK_KEY_Armenian_khe\n KEY_Armenian_ligature_ew\nC type: GDK_KEY_Armenian_ligature_ew\n KEY_Armenian_lyun\nC type: GDK_KEY_Armenian_lyun\n KEY_Armenian_men\nC type: GDK_KEY_Armenian_men\n KEY_Armenian_nu\nC type: GDK_KEY_Armenian_nu\n KEY_Armenian_o\nC type: GDK_KEY_Armenian_o\n KEY_Armenian_paruyk\nC type: GDK_KEY_Armenian_paruyk\n KEY_Armenian_pe\nC type: GDK_KEY_Armenian_pe\n KEY_Armenian_pyur\nC type: GDK_KEY_Armenian_pyur\n KEY_Armenian_question\nC type: GDK_KEY_Armenian_question\n KEY_Armenian_ra\nC type: GDK_KEY_Armenian_ra\n KEY_Armenian_re\nC type: GDK_KEY_Armenian_re\n KEY_Armenian_se\nC type: GDK_KEY_Armenian_se\n KEY_Armenian_separation_mark\nC type: GDK_KEY_Armenian_separation_mark\n KEY_Armenian_sha\nC type: GDK_KEY_Armenian_sha\n KEY_Armenian_shesht\nC type: GDK_KEY_Armenian_shesht\n KEY_Armenian_tche\nC type: GDK_KEY_Armenian_tche\n KEY_Armenian_to\nC type: GDK_KEY_Armenian_to\n KEY_Armenian_tsa\nC type: GDK_KEY_Armenian_tsa\n KEY_Armenian_tso\nC type: GDK_KEY_Armenian_tso\n KEY_Armenian_tyun\nC type: GDK_KEY_Armenian_tyun\n KEY_Armenian_verjaket\nC type: GDK_KEY_Armenian_verjaket\n KEY_Armenian_vev\nC type: GDK_KEY_Armenian_vev\n KEY_Armenian_vo\nC type: GDK_KEY_Armenian_vo\n KEY_Armenian_vyun\nC type: GDK_KEY_Armenian_vyun\n KEY_Armenian_yech\nC type: GDK_KEY_Armenian_yech\n KEY_Armenian_yentamna\nC type: GDK_KEY_Armenian_yentamna\n KEY_Armenian_za\nC type: GDK_KEY_Armenian_za\n KEY_Armenian_zhe\nC type: GDK_KEY_Armenian_zhe\n KEY_Atilde\nC type: GDK_KEY_Atilde\n KEY_AudibleBell_Enable\nC type: GDK_KEY_AudibleBell_Enable\n KEY_AudioCycleTrack\nC type: GDK_KEY_AudioCycleTrack\n KEY_AudioForward\nC type: GDK_KEY_AudioForward\n KEY_AudioLowerVolume\nC type: GDK_KEY_AudioLowerVolume\n KEY_AudioMedia\nC type: GDK_KEY_AudioMedia\n KEY_AudioMicMute\nC type: GDK_KEY_AudioMicMute\n KEY_AudioMute\nC type: GDK_KEY_AudioMute\n KEY_AudioNext\nC type: GDK_KEY_AudioNext\n KEY_AudioPause\nC type: GDK_KEY_AudioPause\n KEY_AudioPlay\nC type: GDK_KEY_AudioPlay\n KEY_AudioPrev\nC type: GDK_KEY_AudioPrev\n KEY_AudioRaiseVolume\nC type: GDK_KEY_AudioRaiseVolume\n KEY_AudioRandomPlay\nC type: GDK_KEY_AudioRandomPlay\n KEY_AudioRecord\nC type: GDK_KEY_AudioRecord\n KEY_AudioRepeat\nC type: GDK_KEY_AudioRepeat\n KEY_AudioRewind\nC type: GDK_KEY_AudioRewind\n KEY_AudioStop\nC type: GDK_KEY_AudioStop\n KEY_Away\nC type: GDK_KEY_Away\n KEY_B\nC type: GDK_KEY_B\n KEY_Babovedot\nC type: GDK_KEY_Babovedot\n KEY_Back\nC type: GDK_KEY_Back\n KEY_BackForward\nC type: GDK_KEY_BackForward\n KEY_BackSpace\nC type: GDK_KEY_BackSpace\n KEY_Battery\nC type: GDK_KEY_Battery\n KEY_Begin\nC type: GDK_KEY_Begin\n KEY_Blue\nC type: GDK_KEY_Blue\n KEY_Bluetooth\nC type: GDK_KEY_Bluetooth\n KEY_Book\nC type: GDK_KEY_Book\n KEY_BounceKeys_Enable\nC type: GDK_KEY_BounceKeys_Enable\n KEY_Break\nC type: GDK_KEY_Break\n KEY_BrightnessAdjust\nC type: GDK_KEY_BrightnessAdjust\n KEY_Byelorussian_SHORTU\nC type: GDK_KEY_Byelorussian_SHORTU\n KEY_Byelorussian_shortu\nC type: GDK_KEY_Byelorussian_shortu\n KEY_C\nC type: GDK_KEY_C\n KEY_CD\nC type: GDK_KEY_CD\n KEY_CH\nC type: GDK_KEY_CH\n KEY_C_H\nC type: GDK_KEY_C_H\n KEY_C_h\nC type: GDK_KEY_C_h\n KEY_Cabovedot\nC type: GDK_KEY_Cabovedot\n KEY_Cacute\nC type: GDK_KEY_Cacute\n KEY_Calculator\nC type: GDK_KEY_Calculator\n KEY_Calendar\nC type: GDK_KEY_Calendar\n KEY_Cancel\nC type: GDK_KEY_Cancel\n KEY_Caps_Lock\nC type: GDK_KEY_Caps_Lock\n KEY_Ccaron\nC type: GDK_KEY_Ccaron\n KEY_Ccedilla\nC type: GDK_KEY_Ccedilla\n KEY_Ccircumflex\nC type: GDK_KEY_Ccircumflex\n KEY_Ch\nC type: GDK_KEY_Ch\n KEY_Clear\nC type: GDK_KEY_Clear\n KEY_ClearGrab\nC type: GDK_KEY_ClearGrab\n KEY_Close\nC type: GDK_KEY_Close\n KEY_Codeinput\nC type: GDK_KEY_Codeinput\n KEY_ColonSign\nC type: GDK_KEY_ColonSign\n KEY_Community\nC type: GDK_KEY_Community\n KEY_ContrastAdjust\nC type: GDK_KEY_ContrastAdjust\n KEY_Control_L\nC type: GDK_KEY_Control_L\n KEY_Control_R\nC type: GDK_KEY_Control_R\n KEY_Copy\nC type: GDK_KEY_Copy\n KEY_CruzeiroSign\nC type: GDK_KEY_CruzeiroSign\n KEY_Cut\nC type: GDK_KEY_Cut\n KEY_CycleAngle\nC type: GDK_KEY_CycleAngle\n KEY_Cyrillic_A\nC type: GDK_KEY_Cyrillic_A\n KEY_Cyrillic_BE\nC type: GDK_KEY_Cyrillic_BE\n KEY_Cyrillic_CHE\nC type: GDK_KEY_Cyrillic_CHE\n KEY_Cyrillic_CHE_descender\nC type: GDK_KEY_Cyrillic_CHE_descender\n KEY_Cyrillic_CHE_vertstroke\nC type: GDK_KEY_Cyrillic_CHE_vertstroke\n KEY_Cyrillic_DE\nC type: GDK_KEY_Cyrillic_DE\n KEY_Cyrillic_DZHE\nC type: GDK_KEY_Cyrillic_DZHE\n KEY_Cyrillic_E\nC type: GDK_KEY_Cyrillic_E\n KEY_Cyrillic_EF\nC type: GDK_KEY_Cyrillic_EF\n KEY_Cyrillic_EL\nC type: GDK_KEY_Cyrillic_EL\n KEY_Cyrillic_EM\nC type: GDK_KEY_Cyrillic_EM\n KEY_Cyrillic_EN\nC type: GDK_KEY_Cyrillic_EN\n KEY_Cyrillic_EN_descender\nC type: GDK_KEY_Cyrillic_EN_descender\n KEY_Cyrillic_ER\nC type: GDK_KEY_Cyrillic_ER\n KEY_Cyrillic_ES\nC type: GDK_KEY_Cyrillic_ES\n KEY_Cyrillic_GHE\nC type: GDK_KEY_Cyrillic_GHE\n KEY_Cyrillic_GHE_bar\nC type: GDK_KEY_Cyrillic_GHE_bar\n KEY_Cyrillic_HA\nC type: GDK_KEY_Cyrillic_HA\n KEY_Cyrillic_HARDSIGN\nC type: GDK_KEY_Cyrillic_HARDSIGN\n KEY_Cyrillic_HA_descender\nC type: GDK_KEY_Cyrillic_HA_descender\n KEY_Cyrillic_I\nC type: GDK_KEY_Cyrillic_I\n KEY_Cyrillic_IE\nC type: GDK_KEY_Cyrillic_IE\n KEY_Cyrillic_IO\nC type: GDK_KEY_Cyrillic_IO\n KEY_Cyrillic_I_macron\nC type: GDK_KEY_Cyrillic_I_macron\n KEY_Cyrillic_JE\nC type: GDK_KEY_Cyrillic_JE\n KEY_Cyrillic_KA\nC type: GDK_KEY_Cyrillic_KA\n KEY_Cyrillic_KA_descender\nC type: GDK_KEY_Cyrillic_KA_descender\n KEY_Cyrillic_KA_vertstroke\nC type: GDK_KEY_Cyrillic_KA_vertstroke\n KEY_Cyrillic_LJE\nC type: GDK_KEY_Cyrillic_LJE\n KEY_Cyrillic_NJE\nC type: GDK_KEY_Cyrillic_NJE\n KEY_Cyrillic_O\nC type: GDK_KEY_Cyrillic_O\n KEY_Cyrillic_O_bar\nC type: GDK_KEY_Cyrillic_O_bar\n KEY_Cyrillic_PE\nC type: GDK_KEY_Cyrillic_PE\n KEY_Cyrillic_SCHWA\nC type: GDK_KEY_Cyrillic_SCHWA\n KEY_Cyrillic_SHA\nC type: GDK_KEY_Cyrillic_SHA\n KEY_Cyrillic_SHCHA\nC type: GDK_KEY_Cyrillic_SHCHA\n KEY_Cyrillic_SHHA\nC type: GDK_KEY_Cyrillic_SHHA\n KEY_Cyrillic_SHORTI\nC type: GDK_KEY_Cyrillic_SHORTI\n KEY_Cyrillic_SOFTSIGN\nC type: GDK_KEY_Cyrillic_SOFTSIGN\n KEY_Cyrillic_TE\nC type: GDK_KEY_Cyrillic_TE\n KEY_Cyrillic_TSE\nC type: GDK_KEY_Cyrillic_TSE\n KEY_Cyrillic_U\nC type: GDK_KEY_Cyrillic_U\n KEY_Cyrillic_U_macron\nC type: GDK_KEY_Cyrillic_U_macron\n KEY_Cyrillic_U_straight\nC type: GDK_KEY_Cyrillic_U_straight\n KEY_Cyrillic_U_straight_bar\nC type: GDK_KEY_Cyrillic_U_straight_bar\n KEY_Cyrillic_VE\nC type: GDK_KEY_Cyrillic_VE\n KEY_Cyrillic_YA\nC type: GDK_KEY_Cyrillic_YA\n KEY_Cyrillic_YERU\nC type: GDK_KEY_Cyrillic_YERU\n KEY_Cyrillic_YU\nC type: GDK_KEY_Cyrillic_YU\n KEY_Cyrillic_ZE\nC type: GDK_KEY_Cyrillic_ZE\n KEY_Cyrillic_ZHE\nC type: GDK_KEY_Cyrillic_ZHE\n KEY_Cyrillic_ZHE_descender\nC type: GDK_KEY_Cyrillic_ZHE_descender\n KEY_Cyrillic_a\nC type: GDK_KEY_Cyrillic_a\n KEY_Cyrillic_be\nC type: GDK_KEY_Cyrillic_be\n KEY_Cyrillic_che\nC type: GDK_KEY_Cyrillic_che\n KEY_Cyrillic_che_descender\nC type: GDK_KEY_Cyrillic_che_descender\n KEY_Cyrillic_che_vertstroke\nC type: GDK_KEY_Cyrillic_che_vertstroke\n KEY_Cyrillic_de\nC type: GDK_KEY_Cyrillic_de\n KEY_Cyrillic_dzhe\nC type: GDK_KEY_Cyrillic_dzhe\n KEY_Cyrillic_e\nC type: GDK_KEY_Cyrillic_e\n KEY_Cyrillic_ef\nC type: GDK_KEY_Cyrillic_ef\n KEY_Cyrillic_el\nC type: GDK_KEY_Cyrillic_el\n KEY_Cyrillic_em\nC type: GDK_KEY_Cyrillic_em\n KEY_Cyrillic_en\nC type: GDK_KEY_Cyrillic_en\n KEY_Cyrillic_en_descender\nC type: GDK_KEY_Cyrillic_en_descender\n KEY_Cyrillic_er\nC type: GDK_KEY_Cyrillic_er\n KEY_Cyrillic_es\nC type: GDK_KEY_Cyrillic_es\n KEY_Cyrillic_ghe\nC type: GDK_KEY_Cyrillic_ghe\n KEY_Cyrillic_ghe_bar\nC type: GDK_KEY_Cyrillic_ghe_bar\n KEY_Cyrillic_ha\nC type: GDK_KEY_Cyrillic_ha\n KEY_Cyrillic_ha_descender\nC type: GDK_KEY_Cyrillic_ha_descender\n KEY_Cyrillic_hardsign\nC type: GDK_KEY_Cyrillic_hardsign\n KEY_Cyrillic_i\nC type: GDK_KEY_Cyrillic_i\n KEY_Cyrillic_i_macron\nC type: GDK_KEY_Cyrillic_i_macron\n KEY_Cyrillic_ie\nC type: GDK_KEY_Cyrillic_ie\n KEY_Cyrillic_io\nC type: GDK_KEY_Cyrillic_io\n KEY_Cyrillic_je\nC type: GDK_KEY_Cyrillic_je\n KEY_Cyrillic_ka\nC type: GDK_KEY_Cyrillic_ka\n KEY_Cyrillic_ka_descender\nC type: GDK_KEY_Cyrillic_ka_descender\n KEY_Cyrillic_ka_vertstroke\nC type: GDK_KEY_Cyrillic_ka_vertstroke\n KEY_Cyrillic_lje\nC type: GDK_KEY_Cyrillic_lje\n KEY_Cyrillic_nje\nC type: GDK_KEY_Cyrillic_nje\n KEY_Cyrillic_o\nC type: GDK_KEY_Cyrillic_o\n KEY_Cyrillic_o_bar\nC type: GDK_KEY_Cyrillic_o_bar\n KEY_Cyrillic_pe\nC type: GDK_KEY_Cyrillic_pe\n KEY_Cyrillic_schwa\nC type: GDK_KEY_Cyrillic_schwa\n KEY_Cyrillic_sha\nC type: GDK_KEY_Cyrillic_sha\n KEY_Cyrillic_shcha\nC type: GDK_KEY_Cyrillic_shcha\n KEY_Cyrillic_shha\nC type: GDK_KEY_Cyrillic_shha\n KEY_Cyrillic_shorti\nC type: GDK_KEY_Cyrillic_shorti\n KEY_Cyrillic_softsign\nC type: GDK_KEY_Cyrillic_softsign\n KEY_Cyrillic_te\nC type: GDK_KEY_Cyrillic_te\n KEY_Cyrillic_tse\nC type: GDK_KEY_Cyrillic_tse\n KEY_Cyrillic_u\nC type: GDK_KEY_Cyrillic_u\n KEY_Cyrillic_u_macron\nC type: GDK_KEY_Cyrillic_u_macron\n KEY_Cyrillic_u_straight\nC type: GDK_KEY_Cyrillic_u_straight\n KEY_Cyrillic_u_straight_bar\nC type: GDK_KEY_Cyrillic_u_straight_bar\n KEY_Cyrillic_ve\nC type: GDK_KEY_Cyrillic_ve\n KEY_Cyrillic_ya\nC type: GDK_KEY_Cyrillic_ya\n KEY_Cyrillic_yeru\nC type: GDK_KEY_Cyrillic_yeru\n KEY_Cyrillic_yu\nC type: GDK_KEY_Cyrillic_yu\n KEY_Cyrillic_ze\nC type: GDK_KEY_Cyrillic_ze\n KEY_Cyrillic_zhe\nC type: GDK_KEY_Cyrillic_zhe\n KEY_Cyrillic_zhe_descender\nC type: GDK_KEY_Cyrillic_zhe_descender\n KEY_D\nC type: GDK_KEY_D\n KEY_DOS\nC type: GDK_KEY_DOS\n KEY_Dabovedot\nC type: GDK_KEY_Dabovedot\n KEY_Dcaron\nC type: GDK_KEY_Dcaron\n KEY_Delete\nC type: GDK_KEY_Delete\n KEY_Display\nC type: GDK_KEY_Display\n KEY_Documents\nC type: GDK_KEY_Documents\n KEY_DongSign\nC type: GDK_KEY_DongSign\n KEY_Down\nC type: GDK_KEY_Down\n KEY_Dstroke\nC type: GDK_KEY_Dstroke\n KEY_E\nC type: GDK_KEY_E\n KEY_ENG\nC type: GDK_KEY_ENG\n KEY_ETH\nC type: GDK_KEY_ETH\n KEY_EZH\nC type: GDK_KEY_EZH\n KEY_Eabovedot\nC type: GDK_KEY_Eabovedot\n KEY_Eacute\nC type: GDK_KEY_Eacute\n KEY_Ebelowdot\nC type: GDK_KEY_Ebelowdot\n KEY_Ecaron\nC type: GDK_KEY_Ecaron\n KEY_Ecircumflex\nC type: GDK_KEY_Ecircumflex\n KEY_Ecircumflexacute\nC type: GDK_KEY_Ecircumflexacute\n KEY_Ecircumflexbelowdot\nC type: GDK_KEY_Ecircumflexbelowdot\n KEY_Ecircumflexgrave\nC type: GDK_KEY_Ecircumflexgrave\n KEY_Ecircumflexhook\nC type: GDK_KEY_Ecircumflexhook\n KEY_Ecircumflextilde\nC type: GDK_KEY_Ecircumflextilde\n KEY_EcuSign\nC type: GDK_KEY_EcuSign\n KEY_Ediaeresis\nC type: GDK_KEY_Ediaeresis\n KEY_Egrave\nC type: GDK_KEY_Egrave\n KEY_Ehook\nC type: GDK_KEY_Ehook\n KEY_Eisu_Shift\nC type: GDK_KEY_Eisu_Shift\n KEY_Eisu_toggle\nC type: GDK_KEY_Eisu_toggle\n KEY_Eject\nC type: GDK_KEY_Eject\n KEY_Emacron\nC type: GDK_KEY_Emacron\n KEY_End\nC type: GDK_KEY_End\n KEY_Eogonek\nC type: GDK_KEY_Eogonek\n KEY_Escape\nC type: GDK_KEY_Escape\n KEY_Eth\nC type: GDK_KEY_Eth\n KEY_Etilde\nC type: GDK_KEY_Etilde\n KEY_EuroSign\nC type: GDK_KEY_EuroSign\n KEY_Excel\nC type: GDK_KEY_Excel\n KEY_Execute\nC type: GDK_KEY_Execute\n KEY_Explorer\nC type: GDK_KEY_Explorer\n KEY_F\nC type: GDK_KEY_F\n KEY_F1\nC type: GDK_KEY_F1\n KEY_F10\nC type: GDK_KEY_F10\n KEY_F11\nC type: GDK_KEY_F11\n KEY_F12\nC type: GDK_KEY_F12\n KEY_F13\nC type: GDK_KEY_F13\n KEY_F14\nC type: GDK_KEY_F14\n KEY_F15\nC type: GDK_KEY_F15\n KEY_F16\nC type: GDK_KEY_F16\n KEY_F17\nC type: GDK_KEY_F17\n KEY_F18\nC type: GDK_KEY_F18\n KEY_F19\nC type: GDK_KEY_F19\n KEY_F2\nC type: GDK_KEY_F2\n KEY_F20\nC type: GDK_KEY_F20\n KEY_F21\nC type: GDK_KEY_F21\n KEY_F22\nC type: GDK_KEY_F22\n KEY_F23\nC type: GDK_KEY_F23\n KEY_F24\nC type: GDK_KEY_F24\n KEY_F25\nC type: GDK_KEY_F25\n KEY_F26\nC type: GDK_KEY_F26\n KEY_F27\nC type: GDK_KEY_F27\n KEY_F28\nC type: GDK_KEY_F28\n KEY_F29\nC type: GDK_KEY_F29\n KEY_F3\nC type: GDK_KEY_F3\n KEY_F30\nC type: GDK_KEY_F30\n KEY_F31\nC type: GDK_KEY_F31\n KEY_F32\nC type: GDK_KEY_F32\n KEY_F33\nC type: GDK_KEY_F33\n KEY_F34\nC type: GDK_KEY_F34\n KEY_F35\nC type: GDK_KEY_F35\n KEY_F4\nC type: GDK_KEY_F4\n KEY_F5\nC type: GDK_KEY_F5\n KEY_F6\nC type: GDK_KEY_F6\n KEY_F7\nC type: GDK_KEY_F7\n KEY_F8\nC type: GDK_KEY_F8\n KEY_F9\nC type: GDK_KEY_F9\n KEY_FFrancSign\nC type: GDK_KEY_FFrancSign\n KEY_Fabovedot\nC type: GDK_KEY_Fabovedot\n KEY_Farsi_0\nC type: GDK_KEY_Farsi_0\n KEY_Farsi_1\nC type: GDK_KEY_Farsi_1\n KEY_Farsi_2\nC type: GDK_KEY_Farsi_2\n KEY_Farsi_3\nC type: GDK_KEY_Farsi_3\n KEY_Farsi_4\nC type: GDK_KEY_Farsi_4\n KEY_Farsi_5\nC type: GDK_KEY_Farsi_5\n KEY_Farsi_6\nC type: GDK_KEY_Farsi_6\n KEY_Farsi_7\nC type: GDK_KEY_Farsi_7\n KEY_Farsi_8\nC type: GDK_KEY_Farsi_8\n KEY_Farsi_9\nC type: GDK_KEY_Farsi_9\n KEY_Farsi_yeh\nC type: GDK_KEY_Farsi_yeh\n KEY_Favorites\nC type: GDK_KEY_Favorites\n KEY_Finance\nC type: GDK_KEY_Finance\n KEY_Find\nC type: GDK_KEY_Find\n KEY_First_Virtual_Screen\nC type: GDK_KEY_First_Virtual_Screen\n KEY_Forward\nC type: GDK_KEY_Forward\n KEY_FrameBack\nC type: GDK_KEY_FrameBack\n KEY_FrameForward\nC type: GDK_KEY_FrameForward\n KEY_G\nC type: GDK_KEY_G\n KEY_Gabovedot\nC type: GDK_KEY_Gabovedot\n KEY_Game\nC type: GDK_KEY_Game\n KEY_Gbreve\nC type: GDK_KEY_Gbreve\n KEY_Gcaron\nC type: GDK_KEY_Gcaron\n KEY_Gcedilla\nC type: GDK_KEY_Gcedilla\n KEY_Gcircumflex\nC type: GDK_KEY_Gcircumflex\n KEY_Georgian_an\nC type: GDK_KEY_Georgian_an\n KEY_Georgian_ban\nC type: GDK_KEY_Georgian_ban\n KEY_Georgian_can\nC type: GDK_KEY_Georgian_can\n KEY_Georgian_char\nC type: GDK_KEY_Georgian_char\n KEY_Georgian_chin\nC type: GDK_KEY_Georgian_chin\n KEY_Georgian_cil\nC type: GDK_KEY_Georgian_cil\n KEY_Georgian_don\nC type: GDK_KEY_Georgian_don\n KEY_Georgian_en\nC type: GDK_KEY_Georgian_en\n KEY_Georgian_fi\nC type: GDK_KEY_Georgian_fi\n KEY_Georgian_gan\nC type: GDK_KEY_Georgian_gan\n KEY_Georgian_ghan\nC type: GDK_KEY_Georgian_ghan\n KEY_Georgian_hae\nC type: GDK_KEY_Georgian_hae\n KEY_Georgian_har\nC type: GDK_KEY_Georgian_har\n KEY_Georgian_he\nC type: GDK_KEY_Georgian_he\n KEY_Georgian_hie\nC type: GDK_KEY_Georgian_hie\n KEY_Georgian_hoe\nC type: GDK_KEY_Georgian_hoe\n KEY_Georgian_in\nC type: GDK_KEY_Georgian_in\n KEY_Georgian_jhan\nC type: GDK_KEY_Georgian_jhan\n KEY_Georgian_jil\nC type: GDK_KEY_Georgian_jil\n KEY_Georgian_kan\nC type: GDK_KEY_Georgian_kan\n KEY_Georgian_khar\nC type: GDK_KEY_Georgian_khar\n KEY_Georgian_las\nC type: GDK_KEY_Georgian_las\n KEY_Georgian_man\nC type: GDK_KEY_Georgian_man\n KEY_Georgian_nar\nC type: GDK_KEY_Georgian_nar\n KEY_Georgian_on\nC type: GDK_KEY_Georgian_on\n KEY_Georgian_par\nC type: GDK_KEY_Georgian_par\n KEY_Georgian_phar\nC type: GDK_KEY_Georgian_phar\n KEY_Georgian_qar\nC type: GDK_KEY_Georgian_qar\n KEY_Georgian_rae\nC type: GDK_KEY_Georgian_rae\n KEY_Georgian_san\nC type: GDK_KEY_Georgian_san\n KEY_Georgian_shin\nC type: GDK_KEY_Georgian_shin\n KEY_Georgian_tan\nC type: GDK_KEY_Georgian_tan\n KEY_Georgian_tar\nC type: GDK_KEY_Georgian_tar\n KEY_Georgian_un\nC type: GDK_KEY_Georgian_un\n KEY_Georgian_vin\nC type: GDK_KEY_Georgian_vin\n KEY_Georgian_we\nC type: GDK_KEY_Georgian_we\n KEY_Georgian_xan\nC type: GDK_KEY_Georgian_xan\n KEY_Georgian_zen\nC type: GDK_KEY_Georgian_zen\n KEY_Georgian_zhar\nC type: GDK_KEY_Georgian_zhar\n KEY_Go\nC type: GDK_KEY_Go\n KEY_Greek_ALPHA\nC type: GDK_KEY_Greek_ALPHA\n KEY_Greek_ALPHAaccent\nC type: GDK_KEY_Greek_ALPHAaccent\n KEY_Greek_BETA\nC type: GDK_KEY_Greek_BETA\n KEY_Greek_CHI\nC type: GDK_KEY_Greek_CHI\n KEY_Greek_DELTA\nC type: GDK_KEY_Greek_DELTA\n KEY_Greek_EPSILON\nC type: GDK_KEY_Greek_EPSILON\n KEY_Greek_EPSILONaccent\nC type: GDK_KEY_Greek_EPSILONaccent\n KEY_Greek_ETA\nC type: GDK_KEY_Greek_ETA\n KEY_Greek_ETAaccent\nC type: GDK_KEY_Greek_ETAaccent\n KEY_Greek_GAMMA\nC type: GDK_KEY_Greek_GAMMA\n KEY_Greek_IOTA\nC type: GDK_KEY_Greek_IOTA\n KEY_Greek_IOTAaccent\nC type: GDK_KEY_Greek_IOTAaccent\n KEY_Greek_IOTAdiaeresis\nC type: GDK_KEY_Greek_IOTAdiaeresis\n KEY_Greek_IOTAdieresis\nC type: GDK_KEY_Greek_IOTAdieresis\n KEY_Greek_KAPPA\nC type: GDK_KEY_Greek_KAPPA\n KEY_Greek_LAMBDA\nC type: GDK_KEY_Greek_LAMBDA\n KEY_Greek_LAMDA\nC type: GDK_KEY_Greek_LAMDA\n KEY_Greek_MU\nC type: GDK_KEY_Greek_MU\n KEY_Greek_NU\nC type: GDK_KEY_Greek_NU\n KEY_Greek_OMEGA\nC type: GDK_KEY_Greek_OMEGA\n KEY_Greek_OMEGAaccent\nC type: GDK_KEY_Greek_OMEGAaccent\n KEY_Greek_OMICRON\nC type: GDK_KEY_Greek_OMICRON\n KEY_Greek_OMICRONaccent\nC type: GDK_KEY_Greek_OMICRONaccent\n KEY_Greek_PHI\nC type: GDK_KEY_Greek_PHI\n KEY_Greek_PI\nC type: GDK_KEY_Greek_PI\n KEY_Greek_PSI\nC type: GDK_KEY_Greek_PSI\n KEY_Greek_RHO\nC type: GDK_KEY_Greek_RHO\n KEY_Greek_SIGMA\nC type: GDK_KEY_Greek_SIGMA\n KEY_Greek_TAU\nC type: GDK_KEY_Greek_TAU\n KEY_Greek_THETA\nC type: GDK_KEY_Greek_THETA\n KEY_Greek_UPSILON\nC type: GDK_KEY_Greek_UPSILON\n KEY_Greek_UPSILONaccent\nC type: GDK_KEY_Greek_UPSILONaccent\n KEY_Greek_UPSILONdieresis\nC type: GDK_KEY_Greek_UPSILONdieresis\n KEY_Greek_XI\nC type: GDK_KEY_Greek_XI\n KEY_Greek_ZETA\nC type: GDK_KEY_Greek_ZETA\n KEY_Greek_accentdieresis\nC type: GDK_KEY_Greek_accentdieresis\n KEY_Greek_alpha\nC type: GDK_KEY_Greek_alpha\n KEY_Greek_alphaaccent\nC type: GDK_KEY_Greek_alphaaccent\n KEY_Greek_beta\nC type: GDK_KEY_Greek_beta\n KEY_Greek_chi\nC type: GDK_KEY_Greek_chi\n KEY_Greek_delta\nC type: GDK_KEY_Greek_delta\n KEY_Greek_epsilon\nC type: GDK_KEY_Greek_epsilon\n KEY_Greek_epsilonaccent\nC type: GDK_KEY_Greek_epsilonaccent\n KEY_Greek_eta\nC type: GDK_KEY_Greek_eta\n KEY_Greek_etaaccent\nC type: GDK_KEY_Greek_etaaccent\n KEY_Greek_finalsmallsigma\nC type: GDK_KEY_Greek_finalsmallsigma\n KEY_Greek_gamma\nC type: GDK_KEY_Greek_gamma\n KEY_Greek_horizbar\nC type: GDK_KEY_Greek_horizbar\n KEY_Greek_iota\nC type: GDK_KEY_Greek_iota\n KEY_Greek_iotaaccent\nC type: GDK_KEY_Greek_iotaaccent\n KEY_Greek_iotaaccentdieresis\nC type: GDK_KEY_Greek_iotaaccentdieresis\n KEY_Greek_iotadieresis\nC type: GDK_KEY_Greek_iotadieresis\n KEY_Greek_kappa\nC type: GDK_KEY_Greek_kappa\n KEY_Greek_lambda\nC type: GDK_KEY_Greek_lambda\n KEY_Greek_lamda\nC type: GDK_KEY_Greek_lamda\n KEY_Greek_mu\nC type: GDK_KEY_Greek_mu\n KEY_Greek_nu\nC type: GDK_KEY_Greek_nu\n KEY_Greek_omega\nC type: GDK_KEY_Greek_omega\n KEY_Greek_omegaaccent\nC type: GDK_KEY_Greek_omegaaccent\n KEY_Greek_omicron\nC type: GDK_KEY_Greek_omicron\n KEY_Greek_omicronaccent\nC type: GDK_KEY_Greek_omicronaccent\n KEY_Greek_phi\nC type: GDK_KEY_Greek_phi\n KEY_Greek_pi\nC type: GDK_KEY_Greek_pi\n KEY_Greek_psi\nC type: GDK_KEY_Greek_psi\n KEY_Greek_rho\nC type: GDK_KEY_Greek_rho\n KEY_Greek_sigma\nC type: GDK_KEY_Greek_sigma\n KEY_Greek_switch\nC type: GDK_KEY_Greek_switch\n KEY_Greek_tau\nC type: GDK_KEY_Greek_tau\n KEY_Greek_theta\nC type: GDK_KEY_Greek_theta\n KEY_Greek_upsilon\nC type: GDK_KEY_Greek_upsilon\n KEY_Greek_upsilonaccent\nC type: GDK_KEY_Greek_upsilonaccent\n KEY_Greek_upsilonaccentdieresis\nC type: GDK_KEY_Greek_upsilonaccentdieresis\n KEY_Greek_upsilondieresis\nC type: GDK_KEY_Greek_upsilondieresis\n KEY_Greek_xi\nC type: GDK_KEY_Greek_xi\n KEY_Greek_zeta\nC type: GDK_KEY_Greek_zeta\n KEY_Green\nC type: GDK_KEY_Green\n KEY_H\nC type: GDK_KEY_H\n KEY_Hangul\nC type: GDK_KEY_Hangul\n KEY_Hangul_A\nC type: GDK_KEY_Hangul_A\n KEY_Hangul_AE\nC type: GDK_KEY_Hangul_AE\n KEY_Hangul_AraeA\nC type: GDK_KEY_Hangul_AraeA\n KEY_Hangul_AraeAE\nC type: GDK_KEY_Hangul_AraeAE\n KEY_Hangul_Banja\nC type: GDK_KEY_Hangul_Banja\n KEY_Hangul_Cieuc\nC type: GDK_KEY_Hangul_Cieuc\n KEY_Hangul_Codeinput\nC type: GDK_KEY_Hangul_Codeinput\n KEY_Hangul_Dikeud\nC type: GDK_KEY_Hangul_Dikeud\n KEY_Hangul_E\nC type: GDK_KEY_Hangul_E\n KEY_Hangul_EO\nC type: GDK_KEY_Hangul_EO\n KEY_Hangul_EU\nC type: GDK_KEY_Hangul_EU\n KEY_Hangul_End\nC type: GDK_KEY_Hangul_End\n KEY_Hangul_Hanja\nC type: GDK_KEY_Hangul_Hanja\n KEY_Hangul_Hieuh\nC type: GDK_KEY_Hangul_Hieuh\n KEY_Hangul_I\nC type: GDK_KEY_Hangul_I\n KEY_Hangul_Ieung\nC type: GDK_KEY_Hangul_Ieung\n KEY_Hangul_J_Cieuc\nC type: GDK_KEY_Hangul_J_Cieuc\n KEY_Hangul_J_Dikeud\nC type: GDK_KEY_Hangul_J_Dikeud\n KEY_Hangul_J_Hieuh\nC type: GDK_KEY_Hangul_J_Hieuh\n KEY_Hangul_J_Ieung\nC type: GDK_KEY_Hangul_J_Ieung\n KEY_Hangul_J_Jieuj\nC type: GDK_KEY_Hangul_J_Jieuj\n KEY_Hangul_J_Khieuq\nC type: GDK_KEY_Hangul_J_Khieuq\n KEY_Hangul_J_Kiyeog\nC type: GDK_KEY_Hangul_J_Kiyeog\n KEY_Hangul_J_KiyeogSios\nC type: GDK_KEY_Hangul_J_KiyeogSios\n KEY_Hangul_J_KkogjiDalrinIeung\nC type: GDK_KEY_Hangul_J_KkogjiDalrinIeung\n KEY_Hangul_J_Mieum\nC type: GDK_KEY_Hangul_J_Mieum\n KEY_Hangul_J_Nieun\nC type: GDK_KEY_Hangul_J_Nieun\n KEY_Hangul_J_NieunHieuh\nC type: GDK_KEY_Hangul_J_NieunHieuh\n KEY_Hangul_J_NieunJieuj\nC type: GDK_KEY_Hangul_J_NieunJieuj\n KEY_Hangul_J_PanSios\nC type: GDK_KEY_Hangul_J_PanSios\n KEY_Hangul_J_Phieuf\nC type: GDK_KEY_Hangul_J_Phieuf\n KEY_Hangul_J_Pieub\nC type: GDK_KEY_Hangul_J_Pieub\n KEY_Hangul_J_PieubSios\nC type: GDK_KEY_Hangul_J_PieubSios\n KEY_Hangul_J_Rieul\nC type: GDK_KEY_Hangul_J_Rieul\n KEY_Hangul_J_RieulHieuh\nC type: GDK_KEY_Hangul_J_RieulHieuh\n KEY_Hangul_J_RieulKiyeog\nC type: GDK_KEY_Hangul_J_RieulKiyeog\n KEY_Hangul_J_RieulMieum\nC type: GDK_KEY_Hangul_J_RieulMieum\n KEY_Hangul_J_RieulPhieuf\nC type: GDK_KEY_Hangul_J_RieulPhieuf\n KEY_Hangul_J_RieulPieub\nC type: GDK_KEY_Hangul_J_RieulPieub\n KEY_Hangul_J_RieulSios\nC type: GDK_KEY_Hangul_J_RieulSios\n KEY_Hangul_J_RieulTieut\nC type: GDK_KEY_Hangul_J_RieulTieut\n KEY_Hangul_J_Sios\nC type: GDK_KEY_Hangul_J_Sios\n KEY_Hangul_J_SsangKiyeog\nC type: GDK_KEY_Hangul_J_SsangKiyeog\n KEY_Hangul_J_SsangSios\nC type: GDK_KEY_Hangul_J_SsangSios\n KEY_Hangul_J_Tieut\nC type: GDK_KEY_Hangul_J_Tieut\n KEY_Hangul_J_YeorinHieuh\nC type: GDK_KEY_Hangul_J_YeorinHieuh\n KEY_Hangul_Jamo\nC type: GDK_KEY_Hangul_Jamo\n KEY_Hangul_Jeonja\nC type: GDK_KEY_Hangul_Jeonja\n KEY_Hangul_Jieuj\nC type: GDK_KEY_Hangul_Jieuj\n KEY_Hangul_Khieuq\nC type: GDK_KEY_Hangul_Khieuq\n KEY_Hangul_Kiyeog\nC type: GDK_KEY_Hangul_Kiyeog\n KEY_Hangul_KiyeogSios\nC type: GDK_KEY_Hangul_KiyeogSios\n KEY_Hangul_KkogjiDalrinIeung\nC type: GDK_KEY_Hangul_KkogjiDalrinIeung\n KEY_Hangul_Mieum\nC type: GDK_KEY_Hangul_Mieum\n KEY_Hangul_MultipleCandidate\nC type: GDK_KEY_Hangul_MultipleCandidate\n KEY_Hangul_Nieun\nC type: GDK_KEY_Hangul_Nieun\n KEY_Hangul_NieunHieuh\nC type: GDK_KEY_Hangul_NieunHieuh\n KEY_Hangul_NieunJieuj\nC type: GDK_KEY_Hangul_NieunJieuj\n KEY_Hangul_O\nC type: GDK_KEY_Hangul_O\n KEY_Hangul_OE\nC type: GDK_KEY_Hangul_OE\n KEY_Hangul_PanSios\nC type: GDK_KEY_Hangul_PanSios\n KEY_Hangul_Phieuf\nC type: GDK_KEY_Hangul_Phieuf\n KEY_Hangul_Pieub\nC type: GDK_KEY_Hangul_Pieub\n KEY_Hangul_PieubSios\nC type: GDK_KEY_Hangul_PieubSios\n KEY_Hangul_PostHanja\nC type: GDK_KEY_Hangul_PostHanja\n KEY_Hangul_PreHanja\nC type: GDK_KEY_Hangul_PreHanja\n KEY_Hangul_PreviousCandidate\nC type: GDK_KEY_Hangul_PreviousCandidate\n KEY_Hangul_Rieul\nC type: GDK_KEY_Hangul_Rieul\n KEY_Hangul_RieulHieuh\nC type: GDK_KEY_Hangul_RieulHieuh\n KEY_Hangul_RieulKiyeog\nC type: GDK_KEY_Hangul_RieulKiyeog\n KEY_Hangul_RieulMieum\nC type: GDK_KEY_Hangul_RieulMieum\n KEY_Hangul_RieulPhieuf\nC type: GDK_KEY_Hangul_RieulPhieuf\n KEY_Hangul_RieulPieub\nC type: GDK_KEY_Hangul_RieulPieub\n KEY_Hangul_RieulSios\nC type: GDK_KEY_Hangul_RieulSios\n KEY_Hangul_RieulTieut\nC type: GDK_KEY_Hangul_RieulTieut\n KEY_Hangul_RieulYeorinHieuh\nC type: GDK_KEY_Hangul_RieulYeorinHieuh\n KEY_Hangul_Romaja\nC type: GDK_KEY_Hangul_Romaja\n KEY_Hangul_SingleCandidate\nC type: GDK_KEY_Hangul_SingleCandidate\n KEY_Hangul_Sios\nC type: GDK_KEY_Hangul_Sios\n KEY_Hangul_Special\nC type: GDK_KEY_Hangul_Special\n KEY_Hangul_SsangDikeud\nC type: GDK_KEY_Hangul_SsangDikeud\n KEY_Hangul_SsangJieuj\nC type: GDK_KEY_Hangul_SsangJieuj\n KEY_Hangul_SsangKiyeog\nC type: GDK_KEY_Hangul_SsangKiyeog\n KEY_Hangul_SsangPieub\nC type: GDK_KEY_Hangul_SsangPieub\n KEY_Hangul_SsangSios\nC type: GDK_KEY_Hangul_SsangSios\n KEY_Hangul_Start\nC type: GDK_KEY_Hangul_Start\n KEY_Hangul_SunkyeongeumMieum\nC type: GDK_KEY_Hangul_SunkyeongeumMieum\n KEY_Hangul_SunkyeongeumPhieuf\nC type: GDK_KEY_Hangul_SunkyeongeumPhieuf\n KEY_Hangul_SunkyeongeumPieub\nC type: GDK_KEY_Hangul_SunkyeongeumPieub\n KEY_Hangul_Tieut\nC type: GDK_KEY_Hangul_Tieut\n KEY_Hangul_U\nC type: GDK_KEY_Hangul_U\n KEY_Hangul_WA\nC type: GDK_KEY_Hangul_WA\n KEY_Hangul_WAE\nC type: GDK_KEY_Hangul_WAE\n KEY_Hangul_WE\nC type: GDK_KEY_Hangul_WE\n KEY_Hangul_WEO\nC type: GDK_KEY_Hangul_WEO\n KEY_Hangul_WI\nC type: GDK_KEY_Hangul_WI\n KEY_Hangul_YA\nC type: GDK_KEY_Hangul_YA\n KEY_Hangul_YAE\nC type: GDK_KEY_Hangul_YAE\n KEY_Hangul_YE\nC type: GDK_KEY_Hangul_YE\n KEY_Hangul_YEO\nC type: GDK_KEY_Hangul_YEO\n KEY_Hangul_YI\nC type: GDK_KEY_Hangul_YI\n KEY_Hangul_YO\nC type: GDK_KEY_Hangul_YO\n KEY_Hangul_YU\nC type: GDK_KEY_Hangul_YU\n KEY_Hangul_YeorinHieuh\nC type: GDK_KEY_Hangul_YeorinHieuh\n KEY_Hangul_switch\nC type: GDK_KEY_Hangul_switch\n KEY_Hankaku\nC type: GDK_KEY_Hankaku\n KEY_Hcircumflex\nC type: GDK_KEY_Hcircumflex\n KEY_Hebrew_switch\nC type: GDK_KEY_Hebrew_switch\n KEY_Help\nC type: GDK_KEY_Help\n KEY_Henkan\nC type: GDK_KEY_Henkan\n KEY_Henkan_Mode\nC type: GDK_KEY_Henkan_Mode\n KEY_Hibernate\nC type: GDK_KEY_Hibernate\n KEY_Hiragana\nC type: GDK_KEY_Hiragana\n KEY_Hiragana_Katakana\nC type: GDK_KEY_Hiragana_Katakana\n KEY_History\nC type: GDK_KEY_History\n KEY_Home\nC type: GDK_KEY_Home\n KEY_HomePage\nC type: GDK_KEY_HomePage\n KEY_HotLinks\nC type: GDK_KEY_HotLinks\n KEY_Hstroke\nC type: GDK_KEY_Hstroke\n KEY_Hyper_L\nC type: GDK_KEY_Hyper_L\n KEY_Hyper_R\nC type: GDK_KEY_Hyper_R\n KEY_I\nC type: GDK_KEY_I\n KEY_ISO_Center_Object\nC type: GDK_KEY_ISO_Center_Object\n KEY_ISO_Continuous_Underline\nC type: GDK_KEY_ISO_Continuous_Underline\n KEY_ISO_Discontinuous_Underline\nC type: GDK_KEY_ISO_Discontinuous_Underline\n KEY_ISO_Emphasize\nC type: GDK_KEY_ISO_Emphasize\n KEY_ISO_Enter\nC type: GDK_KEY_ISO_Enter\n KEY_ISO_Fast_Cursor_Down\nC type: GDK_KEY_ISO_Fast_Cursor_Down\n KEY_ISO_Fast_Cursor_Left\nC type: GDK_KEY_ISO_Fast_Cursor_Left\n KEY_ISO_Fast_Cursor_Right\nC type: GDK_KEY_ISO_Fast_Cursor_Right\n KEY_ISO_Fast_Cursor_Up\nC type: GDK_KEY_ISO_Fast_Cursor_Up\n KEY_ISO_First_Group\nC type: GDK_KEY_ISO_First_Group\n KEY_ISO_First_Group_Lock\nC type: GDK_KEY_ISO_First_Group_Lock\n KEY_ISO_Group_Latch\nC type: GDK_KEY_ISO_Group_Latch\n KEY_ISO_Group_Lock\nC type: GDK_KEY_ISO_Group_Lock\n KEY_ISO_Group_Shift\nC type: GDK_KEY_ISO_Group_Shift\n KEY_ISO_Last_Group\nC type: GDK_KEY_ISO_Last_Group\n KEY_ISO_Last_Group_Lock\nC type: GDK_KEY_ISO_Last_Group_Lock\n KEY_ISO_Left_Tab\nC type: GDK_KEY_ISO_Left_Tab\n KEY_ISO_Level2_Latch\nC type: GDK_KEY_ISO_Level2_Latch\n KEY_ISO_Level3_Latch\nC type: GDK_KEY_ISO_Level3_Latch\n KEY_ISO_Level3_Lock\nC type: GDK_KEY_ISO_Level3_Lock\n KEY_ISO_Level3_Shift\nC type: GDK_KEY_ISO_Level3_Shift\n KEY_ISO_Level5_Latch\nC type: GDK_KEY_ISO_Level5_Latch\n KEY_ISO_Level5_Lock\nC type: GDK_KEY_ISO_Level5_Lock\n KEY_ISO_Level5_Shift\nC type: GDK_KEY_ISO_Level5_Shift\n KEY_ISO_Lock\nC type: GDK_KEY_ISO_Lock\n KEY_ISO_Move_Line_Down\nC type: GDK_KEY_ISO_Move_Line_Down\n KEY_ISO_Move_Line_Up\nC type: GDK_KEY_ISO_Move_Line_Up\n KEY_ISO_Next_Group\nC type: GDK_KEY_ISO_Next_Group\n KEY_ISO_Next_Group_Lock\nC type: GDK_KEY_ISO_Next_Group_Lock\n KEY_ISO_Partial_Line_Down\nC type: GDK_KEY_ISO_Partial_Line_Down\n KEY_ISO_Partial_Line_Up\nC type: GDK_KEY_ISO_Partial_Line_Up\n KEY_ISO_Partial_Space_Left\nC type: GDK_KEY_ISO_Partial_Space_Left\n KEY_ISO_Partial_Space_Right\nC type: GDK_KEY_ISO_Partial_Space_Right\n KEY_ISO_Prev_Group\nC type: GDK_KEY_ISO_Prev_Group\n KEY_ISO_Prev_Group_Lock\nC type: GDK_KEY_ISO_Prev_Group_Lock\n KEY_ISO_Release_Both_Margins\nC type: GDK_KEY_ISO_Release_Both_Margins\n KEY_ISO_Release_Margin_Left\nC type: GDK_KEY_ISO_Release_Margin_Left\n KEY_ISO_Release_Margin_Right\nC type: GDK_KEY_ISO_Release_Margin_Right\n KEY_ISO_Set_Margin_Left\nC type: GDK_KEY_ISO_Set_Margin_Left\n KEY_ISO_Set_Margin_Right\nC type: GDK_KEY_ISO_Set_Margin_Right\n KEY_Iabovedot\nC type: GDK_KEY_Iabovedot\n KEY_Iacute\nC type: GDK_KEY_Iacute\n KEY_Ibelowdot\nC type: GDK_KEY_Ibelowdot\n KEY_Ibreve\nC type: GDK_KEY_Ibreve\n KEY_Icircumflex\nC type: GDK_KEY_Icircumflex\n KEY_Idiaeresis\nC type: GDK_KEY_Idiaeresis\n KEY_Igrave\nC type: GDK_KEY_Igrave\n KEY_Ihook\nC type: GDK_KEY_Ihook\n KEY_Imacron\nC type: GDK_KEY_Imacron\n KEY_Insert\nC type: GDK_KEY_Insert\n KEY_Iogonek\nC type: GDK_KEY_Iogonek\n KEY_Itilde\nC type: GDK_KEY_Itilde\n KEY_J\nC type: GDK_KEY_J\n KEY_Jcircumflex\nC type: GDK_KEY_Jcircumflex\n KEY_K\nC type: GDK_KEY_K\n KEY_KP_0\nC type: GDK_KEY_KP_0\n KEY_KP_1\nC type: GDK_KEY_KP_1\n KEY_KP_2\nC type: GDK_KEY_KP_2\n KEY_KP_3\nC type: GDK_KEY_KP_3\n KEY_KP_4\nC type: GDK_KEY_KP_4\n KEY_KP_5\nC type: GDK_KEY_KP_5\n KEY_KP_6\nC type: GDK_KEY_KP_6\n KEY_KP_7\nC type: GDK_KEY_KP_7\n KEY_KP_8\nC type: GDK_KEY_KP_8\n KEY_KP_9\nC type: GDK_KEY_KP_9\n KEY_KP_Add\nC type: GDK_KEY_KP_Add\n KEY_KP_Begin\nC type: GDK_KEY_KP_Begin\n KEY_KP_Decimal\nC type: GDK_KEY_KP_Decimal\n KEY_KP_Delete\nC type: GDK_KEY_KP_Delete\n KEY_KP_Divide\nC type: GDK_KEY_KP_Divide\n KEY_KP_Down\nC type: GDK_KEY_KP_Down\n KEY_KP_End\nC type: GDK_KEY_KP_End\n KEY_KP_Enter\nC type: GDK_KEY_KP_Enter\n KEY_KP_Equal\nC type: GDK_KEY_KP_Equal\n KEY_KP_F1\nC type: GDK_KEY_KP_F1\n KEY_KP_F2\nC type: GDK_KEY_KP_F2\n KEY_KP_F3\nC type: GDK_KEY_KP_F3\n KEY_KP_F4\nC type: GDK_KEY_KP_F4\n KEY_KP_Home\nC type: GDK_KEY_KP_Home\n KEY_KP_Insert\nC type: GDK_KEY_KP_Insert\n KEY_KP_Left\nC type: GDK_KEY_KP_Left\n KEY_KP_Multiply\nC type: GDK_KEY_KP_Multiply\n KEY_KP_Next\nC type: GDK_KEY_KP_Next\n KEY_KP_Page_Down\nC type: GDK_KEY_KP_Page_Down\n KEY_KP_Page_Up\nC type: GDK_KEY_KP_Page_Up\n KEY_KP_Prior\nC type: GDK_KEY_KP_Prior\n KEY_KP_Right\nC type: GDK_KEY_KP_Right\n KEY_KP_Separator\nC type: GDK_KEY_KP_Separator\n KEY_KP_Space\nC type: GDK_KEY_KP_Space\n KEY_KP_Subtract\nC type: GDK_KEY_KP_Subtract\n KEY_KP_Tab\nC type: GDK_KEY_KP_Tab\n KEY_KP_Up\nC type: GDK_KEY_KP_Up\n KEY_Kana_Lock\nC type: GDK_KEY_Kana_Lock\n KEY_Kana_Shift\nC type: GDK_KEY_Kana_Shift\n KEY_Kanji\nC type: GDK_KEY_Kanji\n KEY_Kanji_Bangou\nC type: GDK_KEY_Kanji_Bangou\n KEY_Katakana\nC type: GDK_KEY_Katakana\n KEY_KbdBrightnessDown\nC type: GDK_KEY_KbdBrightnessDown\n KEY_KbdBrightnessUp\nC type: GDK_KEY_KbdBrightnessUp\n KEY_KbdLightOnOff\nC type: GDK_KEY_KbdLightOnOff\n KEY_Kcedilla\nC type: GDK_KEY_Kcedilla\n KEY_Korean_Won\nC type: GDK_KEY_Korean_Won\n KEY_L\nC type: GDK_KEY_L\n KEY_L1\nC type: GDK_KEY_L1\n KEY_L10\nC type: GDK_KEY_L10\n KEY_L2\nC type: GDK_KEY_L2\n KEY_L3\nC type: GDK_KEY_L3\n KEY_L4\nC type: GDK_KEY_L4\n KEY_L5\nC type: GDK_KEY_L5\n KEY_L6\nC type: GDK_KEY_L6\n KEY_L7\nC type: GDK_KEY_L7\n KEY_L8\nC type: GDK_KEY_L8\n KEY_L9\nC type: GDK_KEY_L9\n KEY_Lacute\nC type: GDK_KEY_Lacute\n KEY_Last_Virtual_Screen\nC type: GDK_KEY_Last_Virtual_Screen\n KEY_Launch0\nC type: GDK_KEY_Launch0\n KEY_Launch1\nC type: GDK_KEY_Launch1\n KEY_Launch2\nC type: GDK_KEY_Launch2\n KEY_Launch3\nC type: GDK_KEY_Launch3\n KEY_Launch4\nC type: GDK_KEY_Launch4\n KEY_Launch5\nC type: GDK_KEY_Launch5\n KEY_Launch6\nC type: GDK_KEY_Launch6\n KEY_Launch7\nC type: GDK_KEY_Launch7\n KEY_Launch8\nC type: GDK_KEY_Launch8\n KEY_Launch9\nC type: GDK_KEY_Launch9\n KEY_LaunchA\nC type: GDK_KEY_LaunchA\n KEY_LaunchB\nC type: GDK_KEY_LaunchB\n KEY_LaunchC\nC type: GDK_KEY_LaunchC\n KEY_LaunchD\nC type: GDK_KEY_LaunchD\n KEY_LaunchE\nC type: GDK_KEY_LaunchE\n KEY_LaunchF\nC type: GDK_KEY_LaunchF\n KEY_Lbelowdot\nC type: GDK_KEY_Lbelowdot\n KEY_Lcaron\nC type: GDK_KEY_Lcaron\n KEY_Lcedilla\nC type: GDK_KEY_Lcedilla\n KEY_Left\nC type: GDK_KEY_Left\n KEY_LightBulb\nC type: GDK_KEY_LightBulb\n KEY_Linefeed\nC type: GDK_KEY_Linefeed\n KEY_LiraSign\nC type: GDK_KEY_LiraSign\n KEY_LogGrabInfo\nC type: GDK_KEY_LogGrabInfo\n KEY_LogOff\nC type: GDK_KEY_LogOff\n KEY_LogWindowTree\nC type: GDK_KEY_LogWindowTree\n KEY_Lstroke\nC type: GDK_KEY_Lstroke\n KEY_M\nC type: GDK_KEY_M\n KEY_Mabovedot\nC type: GDK_KEY_Mabovedot\n KEY_Macedonia_DSE\nC type: GDK_KEY_Macedonia_DSE\n KEY_Macedonia_GJE\nC type: GDK_KEY_Macedonia_GJE\n KEY_Macedonia_KJE\nC type: GDK_KEY_Macedonia_KJE\n KEY_Macedonia_dse\nC type: GDK_KEY_Macedonia_dse\n KEY_Macedonia_gje\nC type: GDK_KEY_Macedonia_gje\n KEY_Macedonia_kje\nC type: GDK_KEY_Macedonia_kje\n KEY_Mae_Koho\nC type: GDK_KEY_Mae_Koho\n KEY_Mail\nC type: GDK_KEY_Mail\n KEY_MailForward\nC type: GDK_KEY_MailForward\n KEY_Market\nC type: GDK_KEY_Market\n KEY_Massyo\nC type: GDK_KEY_Massyo\n KEY_Meeting\nC type: GDK_KEY_Meeting\n KEY_Memo\nC type: GDK_KEY_Memo\n KEY_Menu\nC type: GDK_KEY_Menu\n KEY_MenuKB\nC type: GDK_KEY_MenuKB\n KEY_MenuPB\nC type: GDK_KEY_MenuPB\n KEY_Messenger\nC type: GDK_KEY_Messenger\n KEY_Meta_L\nC type: GDK_KEY_Meta_L\n KEY_Meta_R\nC type: GDK_KEY_Meta_R\n KEY_MillSign\nC type: GDK_KEY_MillSign\n KEY_ModeLock\nC type: GDK_KEY_ModeLock\n KEY_Mode_switch\nC type: GDK_KEY_Mode_switch\n KEY_MonBrightnessDown\nC type: GDK_KEY_MonBrightnessDown\n KEY_MonBrightnessUp\nC type: GDK_KEY_MonBrightnessUp\n KEY_MouseKeys_Accel_Enable\nC type: GDK_KEY_MouseKeys_Accel_Enable\n KEY_MouseKeys_Enable\nC type: GDK_KEY_MouseKeys_Enable\n KEY_Muhenkan\nC type: GDK_KEY_Muhenkan\n KEY_Multi_key\nC type: GDK_KEY_Multi_key\n KEY_MultipleCandidate\nC type: GDK_KEY_MultipleCandidate\n KEY_Music\nC type: GDK_KEY_Music\n KEY_MyComputer\nC type: GDK_KEY_MyComputer\n KEY_MySites\nC type: GDK_KEY_MySites\n KEY_N\nC type: GDK_KEY_N\n KEY_Nacute\nC type: GDK_KEY_Nacute\n KEY_NairaSign\nC type: GDK_KEY_NairaSign\n KEY_Ncaron\nC type: GDK_KEY_Ncaron\n KEY_Ncedilla\nC type: GDK_KEY_Ncedilla\n KEY_New\nC type: GDK_KEY_New\n KEY_NewSheqelSign\nC type: GDK_KEY_NewSheqelSign\n KEY_News\nC type: GDK_KEY_News\n KEY_Next\nC type: GDK_KEY_Next\n KEY_Next_VMode\nC type: GDK_KEY_Next_VMode\n KEY_Next_Virtual_Screen\nC type: GDK_KEY_Next_Virtual_Screen\n KEY_Ntilde\nC type: GDK_KEY_Ntilde\n KEY_Num_Lock\nC type: GDK_KEY_Num_Lock\n KEY_O\nC type: GDK_KEY_O\n KEY_OE\nC type: GDK_KEY_OE\n KEY_Oacute\nC type: GDK_KEY_Oacute\n KEY_Obarred\nC type: GDK_KEY_Obarred\n KEY_Obelowdot\nC type: GDK_KEY_Obelowdot\n KEY_Ocaron\nC type: GDK_KEY_Ocaron\n KEY_Ocircumflex\nC type: GDK_KEY_Ocircumflex\n KEY_Ocircumflexacute\nC type: GDK_KEY_Ocircumflexacute\n KEY_Ocircumflexbelowdot\nC type: GDK_KEY_Ocircumflexbelowdot\n KEY_Ocircumflexgrave\nC type: GDK_KEY_Ocircumflexgrave\n KEY_Ocircumflexhook\nC type: GDK_KEY_Ocircumflexhook\n KEY_Ocircumflextilde\nC type: GDK_KEY_Ocircumflextilde\n KEY_Odiaeresis\nC type: GDK_KEY_Odiaeresis\n KEY_Odoubleacute\nC type: GDK_KEY_Odoubleacute\n KEY_OfficeHome\nC type: GDK_KEY_OfficeHome\n KEY_Ograve\nC type: GDK_KEY_Ograve\n KEY_Ohook\nC type: GDK_KEY_Ohook\n KEY_Ohorn\nC type: GDK_KEY_Ohorn\n KEY_Ohornacute\nC type: GDK_KEY_Ohornacute\n KEY_Ohornbelowdot\nC type: GDK_KEY_Ohornbelowdot\n KEY_Ohorngrave\nC type: GDK_KEY_Ohorngrave\n KEY_Ohornhook\nC type: GDK_KEY_Ohornhook\n KEY_Ohorntilde\nC type: GDK_KEY_Ohorntilde\n KEY_Omacron\nC type: GDK_KEY_Omacron\n KEY_Ooblique\nC type: GDK_KEY_Ooblique\n KEY_Open\nC type: GDK_KEY_Open\n KEY_OpenURL\nC type: GDK_KEY_OpenURL\n KEY_Option\nC type: GDK_KEY_Option\n KEY_Oslash\nC type: GDK_KEY_Oslash\n KEY_Otilde\nC type: GDK_KEY_Otilde\n KEY_Overlay1_Enable\nC type: GDK_KEY_Overlay1_Enable\n KEY_Overlay2_Enable\nC type: GDK_KEY_Overlay2_Enable\n KEY_P\nC type: GDK_KEY_P\n KEY_Pabovedot\nC type: GDK_KEY_Pabovedot\n KEY_Page_Down\nC type: GDK_KEY_Page_Down\n KEY_Page_Up\nC type: GDK_KEY_Page_Up\n KEY_Paste\nC type: GDK_KEY_Paste\n KEY_Pause\nC type: GDK_KEY_Pause\n KEY_PesetaSign\nC type: GDK_KEY_PesetaSign\n KEY_Phone\nC type: GDK_KEY_Phone\n KEY_Pictures\nC type: GDK_KEY_Pictures\n KEY_Pointer_Accelerate\nC type: GDK_KEY_Pointer_Accelerate\n KEY_Pointer_Button1\nC type: GDK_KEY_Pointer_Button1\n KEY_Pointer_Button2\nC type: GDK_KEY_Pointer_Button2\n KEY_Pointer_Button3\nC type: GDK_KEY_Pointer_Button3\n KEY_Pointer_Button4\nC type: GDK_KEY_Pointer_Button4\n KEY_Pointer_Button5\nC type: GDK_KEY_Pointer_Button5\n KEY_Pointer_Button_Dflt\nC type: GDK_KEY_Pointer_Button_Dflt\n KEY_Pointer_DblClick1\nC type: GDK_KEY_Pointer_DblClick1\n KEY_Pointer_DblClick2\nC type: GDK_KEY_Pointer_DblClick2\n KEY_Pointer_DblClick3\nC type: GDK_KEY_Pointer_DblClick3\n KEY_Pointer_DblClick4\nC type: GDK_KEY_Pointer_DblClick4\n KEY_Pointer_DblClick5\nC type: GDK_KEY_Pointer_DblClick5\n KEY_Pointer_DblClick_Dflt\nC type: GDK_KEY_Pointer_DblClick_Dflt\n KEY_Pointer_DfltBtnNext\nC type: GDK_KEY_Pointer_DfltBtnNext\n KEY_Pointer_DfltBtnPrev\nC type: GDK_KEY_Pointer_DfltBtnPrev\n KEY_Pointer_Down\nC type: GDK_KEY_Pointer_Down\n KEY_Pointer_DownLeft\nC type: GDK_KEY_Pointer_DownLeft\n KEY_Pointer_DownRight\nC type: GDK_KEY_Pointer_DownRight\n KEY_Pointer_Drag1\nC type: GDK_KEY_Pointer_Drag1\n KEY_Pointer_Drag2\nC type: GDK_KEY_Pointer_Drag2\n KEY_Pointer_Drag3\nC type: GDK_KEY_Pointer_Drag3\n KEY_Pointer_Drag4\nC type: GDK_KEY_Pointer_Drag4\n KEY_Pointer_Drag5\nC type: GDK_KEY_Pointer_Drag5\n KEY_Pointer_Drag_Dflt\nC type: GDK_KEY_Pointer_Drag_Dflt\n KEY_Pointer_EnableKeys\nC type: GDK_KEY_Pointer_EnableKeys\n KEY_Pointer_Left\nC type: GDK_KEY_Pointer_Left\n KEY_Pointer_Right\nC type: GDK_KEY_Pointer_Right\n KEY_Pointer_Up\nC type: GDK_KEY_Pointer_Up\n KEY_Pointer_UpLeft\nC type: GDK_KEY_Pointer_UpLeft\n KEY_Pointer_UpRight\nC type: GDK_KEY_Pointer_UpRight\n KEY_PowerDown\nC type: GDK_KEY_PowerDown\n KEY_PowerOff\nC type: GDK_KEY_PowerOff\n KEY_Prev_VMode\nC type: GDK_KEY_Prev_VMode\n KEY_Prev_Virtual_Screen\nC type: GDK_KEY_Prev_Virtual_Screen\n KEY_PreviousCandidate\nC type: GDK_KEY_PreviousCandidate\n KEY_Print\nC type: GDK_KEY_Print\n KEY_Prior\nC type: GDK_KEY_Prior\n KEY_Q\nC type: GDK_KEY_Q\n KEY_R\nC type: GDK_KEY_R\n KEY_R1\nC type: GDK_KEY_R1\n KEY_R10\nC type: GDK_KEY_R10\n KEY_R11\nC type: GDK_KEY_R11\n KEY_R12\nC type: GDK_KEY_R12\n KEY_R13\nC type: GDK_KEY_R13\n KEY_R14\nC type: GDK_KEY_R14\n KEY_R15\nC type: GDK_KEY_R15\n KEY_R2\nC type: GDK_KEY_R2\n KEY_R3\nC type: GDK_KEY_R3\n KEY_R4\nC type: GDK_KEY_R4\n KEY_R5\nC type: GDK_KEY_R5\n KEY_R6\nC type: GDK_KEY_R6\n KEY_R7\nC type: GDK_KEY_R7\n KEY_R8\nC type: GDK_KEY_R8\n KEY_R9\nC type: GDK_KEY_R9\n KEY_Racute\nC type: GDK_KEY_Racute\n KEY_Rcaron\nC type: GDK_KEY_Rcaron\n KEY_Rcedilla\nC type: GDK_KEY_Rcedilla\n KEY_Red\nC type: GDK_KEY_Red\n KEY_Redo\nC type: GDK_KEY_Redo\n KEY_Refresh\nC type: GDK_KEY_Refresh\n KEY_Reload\nC type: GDK_KEY_Reload\n KEY_RepeatKeys_Enable\nC type: GDK_KEY_RepeatKeys_Enable\n KEY_Reply\nC type: GDK_KEY_Reply\n KEY_Return\nC type: GDK_KEY_Return\n KEY_Right\nC type: GDK_KEY_Right\n KEY_RockerDown\nC type: GDK_KEY_RockerDown\n KEY_RockerEnter\nC type: GDK_KEY_RockerEnter\n KEY_RockerUp\nC type: GDK_KEY_RockerUp\n KEY_Romaji\nC type: GDK_KEY_Romaji\n KEY_RotateWindows\nC type: GDK_KEY_RotateWindows\n KEY_RotationKB\nC type: GDK_KEY_RotationKB\n KEY_RotationPB\nC type: GDK_KEY_RotationPB\n KEY_RupeeSign\nC type: GDK_KEY_RupeeSign\n KEY_S\nC type: GDK_KEY_S\n KEY_SCHWA\nC type: GDK_KEY_SCHWA\n KEY_Sabovedot\nC type: GDK_KEY_Sabovedot\n KEY_Sacute\nC type: GDK_KEY_Sacute\n KEY_Save\nC type: GDK_KEY_Save\n KEY_Scaron\nC type: GDK_KEY_Scaron\n KEY_Scedilla\nC type: GDK_KEY_Scedilla\n KEY_Scircumflex\nC type: GDK_KEY_Scircumflex\n KEY_ScreenSaver\nC type: GDK_KEY_ScreenSaver\n KEY_ScrollClick\nC type: GDK_KEY_ScrollClick\n KEY_ScrollDown\nC type: GDK_KEY_ScrollDown\n KEY_ScrollUp\nC type: GDK_KEY_ScrollUp\n KEY_Scroll_Lock\nC type: GDK_KEY_Scroll_Lock\n KEY_Search\nC type: GDK_KEY_Search\n KEY_Select\nC type: GDK_KEY_Select\n KEY_SelectButton\nC type: GDK_KEY_SelectButton\n KEY_Send\nC type: GDK_KEY_Send\n KEY_Serbian_DJE\nC type: GDK_KEY_Serbian_DJE\n KEY_Serbian_DZE\nC type: GDK_KEY_Serbian_DZE\n KEY_Serbian_JE\nC type: GDK_KEY_Serbian_JE\n KEY_Serbian_LJE\nC type: GDK_KEY_Serbian_LJE\n KEY_Serbian_NJE\nC type: GDK_KEY_Serbian_NJE\n KEY_Serbian_TSHE\nC type: GDK_KEY_Serbian_TSHE\n KEY_Serbian_dje\nC type: GDK_KEY_Serbian_dje\n KEY_Serbian_dze\nC type: GDK_KEY_Serbian_dze\n KEY_Serbian_je\nC type: GDK_KEY_Serbian_je\n KEY_Serbian_lje\nC type: GDK_KEY_Serbian_lje\n KEY_Serbian_nje\nC type: GDK_KEY_Serbian_nje\n KEY_Serbian_tshe\nC type: GDK_KEY_Serbian_tshe\n KEY_Shift_L\nC type: GDK_KEY_Shift_L\n KEY_Shift_Lock\nC type: GDK_KEY_Shift_Lock\n KEY_Shift_R\nC type: GDK_KEY_Shift_R\n KEY_Shop\nC type: GDK_KEY_Shop\n KEY_SingleCandidate\nC type: GDK_KEY_SingleCandidate\n KEY_Sinh_a\nC type: GDK_KEY_Sinh_a\n KEY_Sinh_aa\nC type: GDK_KEY_Sinh_aa\n KEY_Sinh_aa2\nC type: GDK_KEY_Sinh_aa2\n KEY_Sinh_ae\nC type: GDK_KEY_Sinh_ae\n KEY_Sinh_ae2\nC type: GDK_KEY_Sinh_ae2\n KEY_Sinh_aee\nC type: GDK_KEY_Sinh_aee\n KEY_Sinh_aee2\nC type: GDK_KEY_Sinh_aee2\n KEY_Sinh_ai\nC type: GDK_KEY_Sinh_ai\n KEY_Sinh_ai2\nC type: GDK_KEY_Sinh_ai2\n KEY_Sinh_al\nC type: GDK_KEY_Sinh_al\n KEY_Sinh_au\nC type: GDK_KEY_Sinh_au\n KEY_Sinh_au2\nC type: GDK_KEY_Sinh_au2\n KEY_Sinh_ba\nC type: GDK_KEY_Sinh_ba\n KEY_Sinh_bha\nC type: GDK_KEY_Sinh_bha\n KEY_Sinh_ca\nC type: GDK_KEY_Sinh_ca\n KEY_Sinh_cha\nC type: GDK_KEY_Sinh_cha\n KEY_Sinh_dda\nC type: GDK_KEY_Sinh_dda\n KEY_Sinh_ddha\nC type: GDK_KEY_Sinh_ddha\n KEY_Sinh_dha\nC type: GDK_KEY_Sinh_dha\n KEY_Sinh_dhha\nC type: GDK_KEY_Sinh_dhha\n KEY_Sinh_e\nC type: GDK_KEY_Sinh_e\n KEY_Sinh_e2\nC type: GDK_KEY_Sinh_e2\n KEY_Sinh_ee\nC type: GDK_KEY_Sinh_ee\n KEY_Sinh_ee2\nC type: GDK_KEY_Sinh_ee2\n KEY_Sinh_fa\nC type: GDK_KEY_Sinh_fa\n KEY_Sinh_ga\nC type: GDK_KEY_Sinh_ga\n KEY_Sinh_gha\nC type: GDK_KEY_Sinh_gha\n KEY_Sinh_h2\nC type: GDK_KEY_Sinh_h2\n KEY_Sinh_ha\nC type: GDK_KEY_Sinh_ha\n KEY_Sinh_i\nC type: GDK_KEY_Sinh_i\n KEY_Sinh_i2\nC type: GDK_KEY_Sinh_i2\n KEY_Sinh_ii\nC type: GDK_KEY_Sinh_ii\n KEY_Sinh_ii2\nC type: GDK_KEY_Sinh_ii2\n KEY_Sinh_ja\nC type: GDK_KEY_Sinh_ja\n KEY_Sinh_jha\nC type: GDK_KEY_Sinh_jha\n KEY_Sinh_jnya\nC type: GDK_KEY_Sinh_jnya\n KEY_Sinh_ka\nC type: GDK_KEY_Sinh_ka\n KEY_Sinh_kha\nC type: GDK_KEY_Sinh_kha\n KEY_Sinh_kunddaliya\nC type: GDK_KEY_Sinh_kunddaliya\n KEY_Sinh_la\nC type: GDK_KEY_Sinh_la\n KEY_Sinh_lla\nC type: GDK_KEY_Sinh_lla\n KEY_Sinh_lu\nC type: GDK_KEY_Sinh_lu\n KEY_Sinh_lu2\nC type: GDK_KEY_Sinh_lu2\n KEY_Sinh_luu\nC type: GDK_KEY_Sinh_luu\n KEY_Sinh_luu2\nC type: GDK_KEY_Sinh_luu2\n KEY_Sinh_ma\nC type: GDK_KEY_Sinh_ma\n KEY_Sinh_mba\nC type: GDK_KEY_Sinh_mba\n KEY_Sinh_na\nC type: GDK_KEY_Sinh_na\n KEY_Sinh_ndda\nC type: GDK_KEY_Sinh_ndda\n KEY_Sinh_ndha\nC type: GDK_KEY_Sinh_ndha\n KEY_Sinh_ng\nC type: GDK_KEY_Sinh_ng\n KEY_Sinh_ng2\nC type: GDK_KEY_Sinh_ng2\n KEY_Sinh_nga\nC type: GDK_KEY_Sinh_nga\n KEY_Sinh_nja\nC type: GDK_KEY_Sinh_nja\n KEY_Sinh_nna\nC type: GDK_KEY_Sinh_nna\n KEY_Sinh_nya\nC type: GDK_KEY_Sinh_nya\n KEY_Sinh_o\nC type: GDK_KEY_Sinh_o\n KEY_Sinh_o2\nC type: GDK_KEY_Sinh_o2\n KEY_Sinh_oo\nC type: GDK_KEY_Sinh_oo\n KEY_Sinh_oo2\nC type: GDK_KEY_Sinh_oo2\n KEY_Sinh_pa\nC type: GDK_KEY_Sinh_pa\n KEY_Sinh_pha\nC type: GDK_KEY_Sinh_pha\n KEY_Sinh_ra\nC type: GDK_KEY_Sinh_ra\n KEY_Sinh_ri\nC type: GDK_KEY_Sinh_ri\n KEY_Sinh_rii\nC type: GDK_KEY_Sinh_rii\n KEY_Sinh_ru2\nC type: GDK_KEY_Sinh_ru2\n KEY_Sinh_ruu2\nC type: GDK_KEY_Sinh_ruu2\n KEY_Sinh_sa\nC type: GDK_KEY_Sinh_sa\n KEY_Sinh_sha\nC type: GDK_KEY_Sinh_sha\n KEY_Sinh_ssha\nC type: GDK_KEY_Sinh_ssha\n KEY_Sinh_tha\nC type: GDK_KEY_Sinh_tha\n KEY_Sinh_thha\nC type: GDK_KEY_Sinh_thha\n KEY_Sinh_tta\nC type: GDK_KEY_Sinh_tta\n KEY_Sinh_ttha\nC type: GDK_KEY_Sinh_ttha\n KEY_Sinh_u\nC type: GDK_KEY_Sinh_u\n KEY_Sinh_u2\nC type: GDK_KEY_Sinh_u2\n KEY_Sinh_uu\nC type: GDK_KEY_Sinh_uu\n KEY_Sinh_uu2\nC type: GDK_KEY_Sinh_uu2\n KEY_Sinh_va\nC type: GDK_KEY_Sinh_va\n KEY_Sinh_ya\nC type: GDK_KEY_Sinh_ya\n KEY_Sleep\nC type: GDK_KEY_Sleep\n KEY_SlowKeys_Enable\nC type: GDK_KEY_SlowKeys_Enable\n KEY_Spell\nC type: GDK_KEY_Spell\n KEY_SplitScreen\nC type: GDK_KEY_SplitScreen\n KEY_Standby\nC type: GDK_KEY_Standby\n KEY_Start\nC type: GDK_KEY_Start\n KEY_StickyKeys_Enable\nC type: GDK_KEY_StickyKeys_Enable\n KEY_Stop\nC type: GDK_KEY_Stop\n KEY_Subtitle\nC type: GDK_KEY_Subtitle\n KEY_Super_L\nC type: GDK_KEY_Super_L\n KEY_Super_R\nC type: GDK_KEY_Super_R\n KEY_Support\nC type: GDK_KEY_Support\n KEY_Suspend\nC type: GDK_KEY_Suspend\n KEY_Switch_VT_1\nC type: GDK_KEY_Switch_VT_1\n KEY_Switch_VT_10\nC type: GDK_KEY_Switch_VT_10\n KEY_Switch_VT_11\nC type: GDK_KEY_Switch_VT_11\n KEY_Switch_VT_12\nC type: GDK_KEY_Switch_VT_12\n KEY_Switch_VT_2\nC type: GDK_KEY_Switch_VT_2\n KEY_Switch_VT_3\nC type: GDK_KEY_Switch_VT_3\n KEY_Switch_VT_4\nC type: GDK_KEY_Switch_VT_4\n KEY_Switch_VT_5\nC type: GDK_KEY_Switch_VT_5\n KEY_Switch_VT_6\nC type: GDK_KEY_Switch_VT_6\n KEY_Switch_VT_7\nC type: GDK_KEY_Switch_VT_7\n KEY_Switch_VT_8\nC type: GDK_KEY_Switch_VT_8\n KEY_Switch_VT_9\nC type: GDK_KEY_Switch_VT_9\n KEY_Sys_Req\nC type: GDK_KEY_Sys_Req\n KEY_T\nC type: GDK_KEY_T\n KEY_THORN\nC type: GDK_KEY_THORN\n KEY_Tab\nC type: GDK_KEY_Tab\n KEY_Tabovedot\nC type: GDK_KEY_Tabovedot\n KEY_TaskPane\nC type: GDK_KEY_TaskPane\n KEY_Tcaron\nC type: GDK_KEY_Tcaron\n KEY_Tcedilla\nC type: GDK_KEY_Tcedilla\n KEY_Terminal\nC type: GDK_KEY_Terminal\n KEY_Terminate_Server\nC type: GDK_KEY_Terminate_Server\n KEY_Thai_baht\nC type: GDK_KEY_Thai_baht\n KEY_Thai_bobaimai\nC type: GDK_KEY_Thai_bobaimai\n KEY_Thai_chochan\nC type: GDK_KEY_Thai_chochan\n KEY_Thai_chochang\nC type: GDK_KEY_Thai_chochang\n KEY_Thai_choching\nC type: GDK_KEY_Thai_choching\n KEY_Thai_chochoe\nC type: GDK_KEY_Thai_chochoe\n KEY_Thai_dochada\nC type: GDK_KEY_Thai_dochada\n KEY_Thai_dodek\nC type: GDK_KEY_Thai_dodek\n KEY_Thai_fofa\nC type: GDK_KEY_Thai_fofa\n KEY_Thai_fofan\nC type: GDK_KEY_Thai_fofan\n KEY_Thai_hohip\nC type: GDK_KEY_Thai_hohip\n KEY_Thai_honokhuk\nC type: GDK_KEY_Thai_honokhuk\n KEY_Thai_khokhai\nC type: GDK_KEY_Thai_khokhai\n KEY_Thai_khokhon\nC type: GDK_KEY_Thai_khokhon\n KEY_Thai_khokhuat\nC type: GDK_KEY_Thai_khokhuat\n KEY_Thai_khokhwai\nC type: GDK_KEY_Thai_khokhwai\n KEY_Thai_khorakhang\nC type: GDK_KEY_Thai_khorakhang\n KEY_Thai_kokai\nC type: GDK_KEY_Thai_kokai\n KEY_Thai_lakkhangyao\nC type: GDK_KEY_Thai_lakkhangyao\n KEY_Thai_lekchet\nC type: GDK_KEY_Thai_lekchet\n KEY_Thai_lekha\nC type: GDK_KEY_Thai_lekha\n KEY_Thai_lekhok\nC type: GDK_KEY_Thai_lekhok\n KEY_Thai_lekkao\nC type: GDK_KEY_Thai_lekkao\n KEY_Thai_leknung\nC type: GDK_KEY_Thai_leknung\n KEY_Thai_lekpaet\nC type: GDK_KEY_Thai_lekpaet\n KEY_Thai_leksam\nC type: GDK_KEY_Thai_leksam\n KEY_Thai_leksi\nC type: GDK_KEY_Thai_leksi\n KEY_Thai_leksong\nC type: GDK_KEY_Thai_leksong\n KEY_Thai_leksun\nC type: GDK_KEY_Thai_leksun\n KEY_Thai_lochula\nC type: GDK_KEY_Thai_lochula\n KEY_Thai_loling\nC type: GDK_KEY_Thai_loling\n KEY_Thai_lu\nC type: GDK_KEY_Thai_lu\n KEY_Thai_maichattawa\nC type: GDK_KEY_Thai_maichattawa\n KEY_Thai_maiek\nC type: GDK_KEY_Thai_maiek\n KEY_Thai_maihanakat\nC type: GDK_KEY_Thai_maihanakat\n KEY_Thai_maihanakat_maitho\nC type: GDK_KEY_Thai_maihanakat_maitho\n KEY_Thai_maitaikhu\nC type: GDK_KEY_Thai_maitaikhu\n KEY_Thai_maitho\nC type: GDK_KEY_Thai_maitho\n KEY_Thai_maitri\nC type: GDK_KEY_Thai_maitri\n KEY_Thai_maiyamok\nC type: GDK_KEY_Thai_maiyamok\n KEY_Thai_moma\nC type: GDK_KEY_Thai_moma\n KEY_Thai_ngongu\nC type: GDK_KEY_Thai_ngongu\n KEY_Thai_nikhahit\nC type: GDK_KEY_Thai_nikhahit\n KEY_Thai_nonen\nC type: GDK_KEY_Thai_nonen\n KEY_Thai_nonu\nC type: GDK_KEY_Thai_nonu\n KEY_Thai_oang\nC type: GDK_KEY_Thai_oang\n KEY_Thai_paiyannoi\nC type: GDK_KEY_Thai_paiyannoi\n KEY_Thai_phinthu\nC type: GDK_KEY_Thai_phinthu\n KEY_Thai_phophan\nC type: GDK_KEY_Thai_phophan\n KEY_Thai_phophung\nC type: GDK_KEY_Thai_phophung\n KEY_Thai_phosamphao\nC type: GDK_KEY_Thai_phosamphao\n KEY_Thai_popla\nC type: GDK_KEY_Thai_popla\n KEY_Thai_rorua\nC type: GDK_KEY_Thai_rorua\n KEY_Thai_ru\nC type: GDK_KEY_Thai_ru\n KEY_Thai_saraa\nC type: GDK_KEY_Thai_saraa\n KEY_Thai_saraaa\nC type: GDK_KEY_Thai_saraaa\n KEY_Thai_saraae\nC type: GDK_KEY_Thai_saraae\n KEY_Thai_saraaimaimalai\nC type: GDK_KEY_Thai_saraaimaimalai\n KEY_Thai_saraaimaimuan\nC type: GDK_KEY_Thai_saraaimaimuan\n KEY_Thai_saraam\nC type: GDK_KEY_Thai_saraam\n KEY_Thai_sarae\nC type: GDK_KEY_Thai_sarae\n KEY_Thai_sarai\nC type: GDK_KEY_Thai_sarai\n KEY_Thai_saraii\nC type: GDK_KEY_Thai_saraii\n KEY_Thai_sarao\nC type: GDK_KEY_Thai_sarao\n KEY_Thai_sarau\nC type: GDK_KEY_Thai_sarau\n KEY_Thai_saraue\nC type: GDK_KEY_Thai_saraue\n KEY_Thai_sarauee\nC type: GDK_KEY_Thai_sarauee\n KEY_Thai_sarauu\nC type: GDK_KEY_Thai_sarauu\n KEY_Thai_sorusi\nC type: GDK_KEY_Thai_sorusi\n KEY_Thai_sosala\nC type: GDK_KEY_Thai_sosala\n KEY_Thai_soso\nC type: GDK_KEY_Thai_soso\n KEY_Thai_sosua\nC type: GDK_KEY_Thai_sosua\n KEY_Thai_thanthakhat\nC type: GDK_KEY_Thai_thanthakhat\n KEY_Thai_thonangmontho\nC type: GDK_KEY_Thai_thonangmontho\n KEY_Thai_thophuthao\nC type: GDK_KEY_Thai_thophuthao\n KEY_Thai_thothahan\nC type: GDK_KEY_Thai_thothahan\n KEY_Thai_thothan\nC type: GDK_KEY_Thai_thothan\n KEY_Thai_thothong\nC type: GDK_KEY_Thai_thothong\n KEY_Thai_thothung\nC type: GDK_KEY_Thai_thothung\n KEY_Thai_topatak\nC type: GDK_KEY_Thai_topatak\n KEY_Thai_totao\nC type: GDK_KEY_Thai_totao\n KEY_Thai_wowaen\nC type: GDK_KEY_Thai_wowaen\n KEY_Thai_yoyak\nC type: GDK_KEY_Thai_yoyak\n KEY_Thai_yoying\nC type: GDK_KEY_Thai_yoying\n KEY_Thorn\nC type: GDK_KEY_Thorn\n KEY_Time\nC type: GDK_KEY_Time\n KEY_ToDoList\nC type: GDK_KEY_ToDoList\n KEY_Tools\nC type: GDK_KEY_Tools\n KEY_TopMenu\nC type: GDK_KEY_TopMenu\n KEY_TouchpadOff\nC type: GDK_KEY_TouchpadOff\n KEY_TouchpadOn\nC type: GDK_KEY_TouchpadOn\n KEY_TouchpadToggle\nC type: GDK_KEY_TouchpadToggle\n KEY_Touroku\nC type: GDK_KEY_Touroku\n KEY_Travel\nC type: GDK_KEY_Travel\n KEY_Tslash\nC type: GDK_KEY_Tslash\n KEY_U\nC type: GDK_KEY_U\n KEY_UWB\nC type: GDK_KEY_UWB\n KEY_Uacute\nC type: GDK_KEY_Uacute\n KEY_Ubelowdot\nC type: GDK_KEY_Ubelowdot\n KEY_Ubreve\nC type: GDK_KEY_Ubreve\n KEY_Ucircumflex\nC type: GDK_KEY_Ucircumflex\n KEY_Udiaeresis\nC type: GDK_KEY_Udiaeresis\n KEY_Udoubleacute\nC type: GDK_KEY_Udoubleacute\n KEY_Ugrave\nC type: GDK_KEY_Ugrave\n KEY_Uhook\nC type: GDK_KEY_Uhook\n KEY_Uhorn\nC type: GDK_KEY_Uhorn\n KEY_Uhornacute\nC type: GDK_KEY_Uhornacute\n KEY_Uhornbelowdot\nC type: GDK_KEY_Uhornbelowdot\n KEY_Uhorngrave\nC type: GDK_KEY_Uhorngrave\n KEY_Uhornhook\nC type: GDK_KEY_Uhornhook\n KEY_Uhorntilde\nC type: GDK_KEY_Uhorntilde\n KEY_Ukrainian_GHE_WITH_UPTURN\nC type: GDK_KEY_Ukrainian_GHE_WITH_UPTURN\n KEY_Ukrainian_I\nC type: GDK_KEY_Ukrainian_I\n KEY_Ukrainian_IE\nC type: GDK_KEY_Ukrainian_IE\n KEY_Ukrainian_YI\nC type: GDK_KEY_Ukrainian_YI\n KEY_Ukrainian_ghe_with_upturn\nC type: GDK_KEY_Ukrainian_ghe_with_upturn\n KEY_Ukrainian_i\nC type: GDK_KEY_Ukrainian_i\n KEY_Ukrainian_ie\nC type: GDK_KEY_Ukrainian_ie\n KEY_Ukrainian_yi\nC type: GDK_KEY_Ukrainian_yi\n KEY_Ukranian_I\nC type: GDK_KEY_Ukranian_I\n KEY_Ukranian_JE\nC type: GDK_KEY_Ukranian_JE\n KEY_Ukranian_YI\nC type: GDK_KEY_Ukranian_YI\n KEY_Ukranian_i\nC type: GDK_KEY_Ukranian_i\n KEY_Ukranian_je\nC type: GDK_KEY_Ukranian_je\n KEY_Ukranian_yi\nC type: GDK_KEY_Ukranian_yi\n KEY_Umacron\nC type: GDK_KEY_Umacron\n KEY_Undo\nC type: GDK_KEY_Undo\n KEY_Ungrab\nC type: GDK_KEY_Ungrab\n KEY_Uogonek\nC type: GDK_KEY_Uogonek\n KEY_Up\nC type: GDK_KEY_Up\n KEY_Uring\nC type: GDK_KEY_Uring\n KEY_User1KB\nC type: GDK_KEY_User1KB\n KEY_User2KB\nC type: GDK_KEY_User2KB\n KEY_UserPB\nC type: GDK_KEY_UserPB\n KEY_Utilde\nC type: GDK_KEY_Utilde\n KEY_V\nC type: GDK_KEY_V\n KEY_VendorHome\nC type: GDK_KEY_VendorHome\n KEY_Video\nC type: GDK_KEY_Video\n KEY_View\nC type: GDK_KEY_View\n KEY_VoidSymbol\nC type: GDK_KEY_VoidSymbol\n KEY_W\nC type: GDK_KEY_W\n KEY_WLAN\nC type: GDK_KEY_WLAN\n KEY_WWW\nC type: GDK_KEY_WWW\n KEY_Wacute\nC type: GDK_KEY_Wacute\n KEY_WakeUp\nC type: GDK_KEY_WakeUp\n KEY_Wcircumflex\nC type: GDK_KEY_Wcircumflex\n KEY_Wdiaeresis\nC type: GDK_KEY_Wdiaeresis\n KEY_WebCam\nC type: GDK_KEY_WebCam\n KEY_Wgrave\nC type: GDK_KEY_Wgrave\n KEY_WheelButton\nC type: GDK_KEY_WheelButton\n KEY_WindowClear\nC type: GDK_KEY_WindowClear\n KEY_WonSign\nC type: GDK_KEY_WonSign\n KEY_Word\nC type: GDK_KEY_Word\n KEY_X\nC type: GDK_KEY_X\n KEY_Xabovedot\nC type: GDK_KEY_Xabovedot\n KEY_Xfer\nC type: GDK_KEY_Xfer\n KEY_Y\nC type: GDK_KEY_Y\n KEY_Yacute\nC type: GDK_KEY_Yacute\n KEY_Ybelowdot\nC type: GDK_KEY_Ybelowdot\n KEY_Ycircumflex\nC type: GDK_KEY_Ycircumflex\n KEY_Ydiaeresis\nC type: GDK_KEY_Ydiaeresis\n KEY_Yellow\nC type: GDK_KEY_Yellow\n KEY_Ygrave\nC type: GDK_KEY_Ygrave\n KEY_Yhook\nC type: GDK_KEY_Yhook\n KEY_Ytilde\nC type: GDK_KEY_Ytilde\n KEY_Z\nC type: GDK_KEY_Z\n KEY_Zabovedot\nC type: GDK_KEY_Zabovedot\n KEY_Zacute\nC type: GDK_KEY_Zacute\n KEY_Zcaron\nC type: GDK_KEY_Zcaron\n KEY_Zen_Koho\nC type: GDK_KEY_Zen_Koho\n KEY_Zenkaku\nC type: GDK_KEY_Zenkaku\n KEY_Zenkaku_Hankaku\nC type: GDK_KEY_Zenkaku_Hankaku\n KEY_ZoomIn\nC type: GDK_KEY_ZoomIn\n KEY_ZoomOut\nC type: GDK_KEY_ZoomOut\n KEY_Zstroke\nC type: GDK_KEY_Zstroke\n KEY_a\nC type: GDK_KEY_a\n KEY_aacute\nC type: GDK_KEY_aacute\n KEY_abelowdot\nC type: GDK_KEY_abelowdot\n KEY_abovedot\nC type: GDK_KEY_abovedot\n KEY_abreve\nC type: GDK_KEY_abreve\n KEY_abreveacute\nC type: GDK_KEY_abreveacute\n KEY_abrevebelowdot\nC type: GDK_KEY_abrevebelowdot\n KEY_abrevegrave\nC type: GDK_KEY_abrevegrave\n KEY_abrevehook\nC type: GDK_KEY_abrevehook\n KEY_abrevetilde\nC type: GDK_KEY_abrevetilde\n KEY_acircumflex\nC type: GDK_KEY_acircumflex\n KEY_acircumflexacute\nC type: GDK_KEY_acircumflexacute\n KEY_acircumflexbelowdot\nC type: GDK_KEY_acircumflexbelowdot\n KEY_acircumflexgrave\nC type: GDK_KEY_acircumflexgrave\n KEY_acircumflexhook\nC type: GDK_KEY_acircumflexhook\n KEY_acircumflextilde\nC type: GDK_KEY_acircumflextilde\n KEY_acute\nC type: GDK_KEY_acute\n KEY_adiaeresis\nC type: GDK_KEY_adiaeresis\n KEY_ae\nC type: GDK_KEY_ae\n KEY_agrave\nC type: GDK_KEY_agrave\n KEY_ahook\nC type: GDK_KEY_ahook\n KEY_amacron\nC type: GDK_KEY_amacron\n KEY_ampersand\nC type: GDK_KEY_ampersand\n KEY_aogonek\nC type: GDK_KEY_aogonek\n KEY_apostrophe\nC type: GDK_KEY_apostrophe\n KEY_approxeq\nC type: GDK_KEY_approxeq\n KEY_approximate\nC type: GDK_KEY_approximate\n KEY_aring\nC type: GDK_KEY_aring\n KEY_asciicircum\nC type: GDK_KEY_asciicircum\n KEY_asciitilde\nC type: GDK_KEY_asciitilde\n KEY_asterisk\nC type: GDK_KEY_asterisk\n KEY_at\nC type: GDK_KEY_at\n KEY_atilde\nC type: GDK_KEY_atilde\n KEY_b\nC type: GDK_KEY_b\n KEY_babovedot\nC type: GDK_KEY_babovedot\n KEY_backslash\nC type: GDK_KEY_backslash\n KEY_ballotcross\nC type: GDK_KEY_ballotcross\n KEY_bar\nC type: GDK_KEY_bar\n KEY_because\nC type: GDK_KEY_because\n KEY_blank\nC type: GDK_KEY_blank\n KEY_botintegral\nC type: GDK_KEY_botintegral\n KEY_botleftparens\nC type: GDK_KEY_botleftparens\n KEY_botleftsqbracket\nC type: GDK_KEY_botleftsqbracket\n KEY_botleftsummation\nC type: GDK_KEY_botleftsummation\n KEY_botrightparens\nC type: GDK_KEY_botrightparens\n KEY_botrightsqbracket\nC type: GDK_KEY_botrightsqbracket\n KEY_botrightsummation\nC type: GDK_KEY_botrightsummation\n KEY_bott\nC type: GDK_KEY_bott\n KEY_botvertsummationconnector\nC type: GDK_KEY_botvertsummationconnector\n KEY_braceleft\nC type: GDK_KEY_braceleft\n KEY_braceright\nC type: GDK_KEY_braceright\n KEY_bracketleft\nC type: GDK_KEY_bracketleft\n KEY_bracketright\nC type: GDK_KEY_bracketright\n KEY_braille_blank\nC type: GDK_KEY_braille_blank\n KEY_braille_dot_1\nC type: GDK_KEY_braille_dot_1\n KEY_braille_dot_10\nC type: GDK_KEY_braille_dot_10\n KEY_braille_dot_2\nC type: GDK_KEY_braille_dot_2\n KEY_braille_dot_3\nC type: GDK_KEY_braille_dot_3\n KEY_braille_dot_4\nC type: GDK_KEY_braille_dot_4\n KEY_braille_dot_5\nC type: GDK_KEY_braille_dot_5\n KEY_braille_dot_6\nC type: GDK_KEY_braille_dot_6\n KEY_braille_dot_7\nC type: GDK_KEY_braille_dot_7\n KEY_braille_dot_8\nC type: GDK_KEY_braille_dot_8\n KEY_braille_dot_9\nC type: GDK_KEY_braille_dot_9\n KEY_braille_dots_1\nC type: GDK_KEY_braille_dots_1\n KEY_braille_dots_12\nC type: GDK_KEY_braille_dots_12\n KEY_braille_dots_123\nC type: GDK_KEY_braille_dots_123\n KEY_braille_dots_1234\nC type: GDK_KEY_braille_dots_1234\n KEY_braille_dots_12345\nC type: GDK_KEY_braille_dots_12345\n KEY_braille_dots_123456\nC type: GDK_KEY_braille_dots_123456\n KEY_braille_dots_1234567\nC type: GDK_KEY_braille_dots_1234567\n KEY_braille_dots_12345678\nC type: GDK_KEY_braille_dots_12345678\n KEY_braille_dots_1234568\nC type: GDK_KEY_braille_dots_1234568\n KEY_braille_dots_123457\nC type: GDK_KEY_braille_dots_123457\n KEY_braille_dots_1234578\nC type: GDK_KEY_braille_dots_1234578\n KEY_braille_dots_123458\nC type: GDK_KEY_braille_dots_123458\n KEY_braille_dots_12346\nC type: GDK_KEY_braille_dots_12346\n KEY_braille_dots_123467\nC type: GDK_KEY_braille_dots_123467\n KEY_braille_dots_1234678\nC type: GDK_KEY_braille_dots_1234678\n KEY_braille_dots_123468\nC type: GDK_KEY_braille_dots_123468\n KEY_braille_dots_12347\nC type: GDK_KEY_braille_dots_12347\n KEY_braille_dots_123478\nC type: GDK_KEY_braille_dots_123478\n KEY_braille_dots_12348\nC type: GDK_KEY_braille_dots_12348\n KEY_braille_dots_1235\nC type: GDK_KEY_braille_dots_1235\n KEY_braille_dots_12356\nC type: GDK_KEY_braille_dots_12356\n KEY_braille_dots_123567\nC type: GDK_KEY_braille_dots_123567\n KEY_braille_dots_1235678\nC type: GDK_KEY_braille_dots_1235678\n KEY_braille_dots_123568\nC type: GDK_KEY_braille_dots_123568\n KEY_braille_dots_12357\nC type: GDK_KEY_braille_dots_12357\n KEY_braille_dots_123578\nC type: GDK_KEY_braille_dots_123578\n KEY_braille_dots_12358\nC type: GDK_KEY_braille_dots_12358\n KEY_braille_dots_1236\nC type: GDK_KEY_braille_dots_1236\n KEY_braille_dots_12367\nC type: GDK_KEY_braille_dots_12367\n KEY_braille_dots_123678\nC type: GDK_KEY_braille_dots_123678\n KEY_braille_dots_12368\nC type: GDK_KEY_braille_dots_12368\n KEY_braille_dots_1237\nC type: GDK_KEY_braille_dots_1237\n KEY_braille_dots_12378\nC type: GDK_KEY_braille_dots_12378\n KEY_braille_dots_1238\nC type: GDK_KEY_braille_dots_1238\n KEY_braille_dots_124\nC type: GDK_KEY_braille_dots_124\n KEY_braille_dots_1245\nC type: GDK_KEY_braille_dots_1245\n KEY_braille_dots_12456\nC type: GDK_KEY_braille_dots_12456\n KEY_braille_dots_124567\nC type: GDK_KEY_braille_dots_124567\n KEY_braille_dots_1245678\nC type: GDK_KEY_braille_dots_1245678\n KEY_braille_dots_124568\nC type: GDK_KEY_braille_dots_124568\n KEY_braille_dots_12457\nC type: GDK_KEY_braille_dots_12457\n KEY_braille_dots_124578\nC type: GDK_KEY_braille_dots_124578\n KEY_braille_dots_12458\nC type: GDK_KEY_braille_dots_12458\n KEY_braille_dots_1246\nC type: GDK_KEY_braille_dots_1246\n KEY_braille_dots_12467\nC type: GDK_KEY_braille_dots_12467\n KEY_braille_dots_124678\nC type: GDK_KEY_braille_dots_124678\n KEY_braille_dots_12468\nC type: GDK_KEY_braille_dots_12468\n KEY_braille_dots_1247\nC type: GDK_KEY_braille_dots_1247\n KEY_braille_dots_12478\nC type: GDK_KEY_braille_dots_12478\n KEY_braille_dots_1248\nC type: GDK_KEY_braille_dots_1248\n KEY_braille_dots_125\nC type: GDK_KEY_braille_dots_125\n KEY_braille_dots_1256\nC type: GDK_KEY_braille_dots_1256\n KEY_braille_dots_12567\nC type: GDK_KEY_braille_dots_12567\n KEY_braille_dots_125678\nC type: GDK_KEY_braille_dots_125678\n KEY_braille_dots_12568\nC type: GDK_KEY_braille_dots_12568\n KEY_braille_dots_1257\nC type: GDK_KEY_braille_dots_1257\n KEY_braille_dots_12578\nC type: GDK_KEY_braille_dots_12578\n KEY_braille_dots_1258\nC type: GDK_KEY_braille_dots_1258\n KEY_braille_dots_126\nC type: GDK_KEY_braille_dots_126\n KEY_braille_dots_1267\nC type: GDK_KEY_braille_dots_1267\n KEY_braille_dots_12678\nC type: GDK_KEY_braille_dots_12678\n KEY_braille_dots_1268\nC type: GDK_KEY_braille_dots_1268\n KEY_braille_dots_127\nC type: GDK_KEY_braille_dots_127\n KEY_braille_dots_1278\nC type: GDK_KEY_braille_dots_1278\n KEY_braille_dots_128\nC type: GDK_KEY_braille_dots_128\n KEY_braille_dots_13\nC type: GDK_KEY_braille_dots_13\n KEY_braille_dots_134\nC type: GDK_KEY_braille_dots_134\n KEY_braille_dots_1345\nC type: GDK_KEY_braille_dots_1345\n KEY_braille_dots_13456\nC type: GDK_KEY_braille_dots_13456\n KEY_braille_dots_134567\nC type: GDK_KEY_braille_dots_134567\n KEY_braille_dots_1345678\nC type: GDK_KEY_braille_dots_1345678\n KEY_braille_dots_134568\nC type: GDK_KEY_braille_dots_134568\n KEY_braille_dots_13457\nC type: GDK_KEY_braille_dots_13457\n KEY_braille_dots_134578\nC type: GDK_KEY_braille_dots_134578\n KEY_braille_dots_13458\nC type: GDK_KEY_braille_dots_13458\n KEY_braille_dots_1346\nC type: GDK_KEY_braille_dots_1346\n KEY_braille_dots_13467\nC type: GDK_KEY_braille_dots_13467\n KEY_braille_dots_134678\nC type: GDK_KEY_braille_dots_134678\n KEY_braille_dots_13468\nC type: GDK_KEY_braille_dots_13468\n KEY_braille_dots_1347\nC type: GDK_KEY_braille_dots_1347\n KEY_braille_dots_13478\nC type: GDK_KEY_braille_dots_13478\n KEY_braille_dots_1348\nC type: GDK_KEY_braille_dots_1348\n KEY_braille_dots_135\nC type: GDK_KEY_braille_dots_135\n KEY_braille_dots_1356\nC type: GDK_KEY_braille_dots_1356\n KEY_braille_dots_13567\nC type: GDK_KEY_braille_dots_13567\n KEY_braille_dots_135678\nC type: GDK_KEY_braille_dots_135678\n KEY_braille_dots_13568\nC type: GDK_KEY_braille_dots_13568\n KEY_braille_dots_1357\nC type: GDK_KEY_braille_dots_1357\n KEY_braille_dots_13578\nC type: GDK_KEY_braille_dots_13578\n KEY_braille_dots_1358\nC type: GDK_KEY_braille_dots_1358\n KEY_braille_dots_136\nC type: GDK_KEY_braille_dots_136\n KEY_braille_dots_1367\nC type: GDK_KEY_braille_dots_1367\n KEY_braille_dots_13678\nC type: GDK_KEY_braille_dots_13678\n KEY_braille_dots_1368\nC type: GDK_KEY_braille_dots_1368\n KEY_braille_dots_137\nC type: GDK_KEY_braille_dots_137\n KEY_braille_dots_1378\nC type: GDK_KEY_braille_dots_1378\n KEY_braille_dots_138\nC type: GDK_KEY_braille_dots_138\n KEY_braille_dots_14\nC type: GDK_KEY_braille_dots_14\n KEY_braille_dots_145\nC type: GDK_KEY_braille_dots_145\n KEY_braille_dots_1456\nC type: GDK_KEY_braille_dots_1456\n KEY_braille_dots_14567\nC type: GDK_KEY_braille_dots_14567\n KEY_braille_dots_145678\nC type: GDK_KEY_braille_dots_145678\n KEY_braille_dots_14568\nC type: GDK_KEY_braille_dots_14568\n KEY_braille_dots_1457\nC type: GDK_KEY_braille_dots_1457\n KEY_braille_dots_14578\nC type: GDK_KEY_braille_dots_14578\n KEY_braille_dots_1458\nC type: GDK_KEY_braille_dots_1458\n KEY_braille_dots_146\nC type: GDK_KEY_braille_dots_146\n KEY_braille_dots_1467\nC type: GDK_KEY_braille_dots_1467\n KEY_braille_dots_14678\nC type: GDK_KEY_braille_dots_14678\n KEY_braille_dots_1468\nC type: GDK_KEY_braille_dots_1468\n KEY_braille_dots_147\nC type: GDK_KEY_braille_dots_147\n KEY_braille_dots_1478\nC type: GDK_KEY_braille_dots_1478\n KEY_braille_dots_148\nC type: GDK_KEY_braille_dots_148\n KEY_braille_dots_15\nC type: GDK_KEY_braille_dots_15\n KEY_braille_dots_156\nC type: GDK_KEY_braille_dots_156\n KEY_braille_dots_1567\nC type: GDK_KEY_braille_dots_1567\n KEY_braille_dots_15678\nC type: GDK_KEY_braille_dots_15678\n KEY_braille_dots_1568\nC type: GDK_KEY_braille_dots_1568\n KEY_braille_dots_157\nC type: GDK_KEY_braille_dots_157\n KEY_braille_dots_1578\nC type: GDK_KEY_braille_dots_1578\n KEY_braille_dots_158\nC type: GDK_KEY_braille_dots_158\n KEY_braille_dots_16\nC type: GDK_KEY_braille_dots_16\n KEY_braille_dots_167\nC type: GDK_KEY_braille_dots_167\n KEY_braille_dots_1678\nC type: GDK_KEY_braille_dots_1678\n KEY_braille_dots_168\nC type: GDK_KEY_braille_dots_168\n KEY_braille_dots_17\nC type: GDK_KEY_braille_dots_17\n KEY_braille_dots_178\nC type: GDK_KEY_braille_dots_178\n KEY_braille_dots_18\nC type: GDK_KEY_braille_dots_18\n KEY_braille_dots_2\nC type: GDK_KEY_braille_dots_2\n KEY_braille_dots_23\nC type: GDK_KEY_braille_dots_23\n KEY_braille_dots_234\nC type: GDK_KEY_braille_dots_234\n KEY_braille_dots_2345\nC type: GDK_KEY_braille_dots_2345\n KEY_braille_dots_23456\nC type: GDK_KEY_braille_dots_23456\n KEY_braille_dots_234567\nC type: GDK_KEY_braille_dots_234567\n KEY_braille_dots_2345678\nC type: GDK_KEY_braille_dots_2345678\n KEY_braille_dots_234568\nC type: GDK_KEY_braille_dots_234568\n KEY_braille_dots_23457\nC type: GDK_KEY_braille_dots_23457\n KEY_braille_dots_234578\nC type: GDK_KEY_braille_dots_234578\n KEY_braille_dots_23458\nC type: GDK_KEY_braille_dots_23458\n KEY_braille_dots_2346\nC type: GDK_KEY_braille_dots_2346\n KEY_braille_dots_23467\nC type: GDK_KEY_braille_dots_23467\n KEY_braille_dots_234678\nC type: GDK_KEY_braille_dots_234678\n KEY_braille_dots_23468\nC type: GDK_KEY_braille_dots_23468\n KEY_braille_dots_2347\nC type: GDK_KEY_braille_dots_2347\n KEY_braille_dots_23478\nC type: GDK_KEY_braille_dots_23478\n KEY_braille_dots_2348\nC type: GDK_KEY_braille_dots_2348\n KEY_braille_dots_235\nC type: GDK_KEY_braille_dots_235\n KEY_braille_dots_2356\nC type: GDK_KEY_braille_dots_2356\n KEY_braille_dots_23567\nC type: GDK_KEY_braille_dots_23567\n KEY_braille_dots_235678\nC type: GDK_KEY_braille_dots_235678\n KEY_braille_dots_23568\nC type: GDK_KEY_braille_dots_23568\n KEY_braille_dots_2357\nC type: GDK_KEY_braille_dots_2357\n KEY_braille_dots_23578\nC type: GDK_KEY_braille_dots_23578\n KEY_braille_dots_2358\nC type: GDK_KEY_braille_dots_2358\n KEY_braille_dots_236\nC type: GDK_KEY_braille_dots_236\n KEY_braille_dots_2367\nC type: GDK_KEY_braille_dots_2367\n KEY_braille_dots_23678\nC type: GDK_KEY_braille_dots_23678\n KEY_braille_dots_2368\nC type: GDK_KEY_braille_dots_2368\n KEY_braille_dots_237\nC type: GDK_KEY_braille_dots_237\n KEY_braille_dots_2378\nC type: GDK_KEY_braille_dots_2378\n KEY_braille_dots_238\nC type: GDK_KEY_braille_dots_238\n KEY_braille_dots_24\nC type: GDK_KEY_braille_dots_24\n KEY_braille_dots_245\nC type: GDK_KEY_braille_dots_245\n KEY_braille_dots_2456\nC type: GDK_KEY_braille_dots_2456\n KEY_braille_dots_24567\nC type: GDK_KEY_braille_dots_24567\n KEY_braille_dots_245678\nC type: GDK_KEY_braille_dots_245678\n KEY_braille_dots_24568\nC type: GDK_KEY_braille_dots_24568\n KEY_braille_dots_2457\nC type: GDK_KEY_braille_dots_2457\n KEY_braille_dots_24578\nC type: GDK_KEY_braille_dots_24578\n KEY_braille_dots_2458\nC type: GDK_KEY_braille_dots_2458\n KEY_braille_dots_246\nC type: GDK_KEY_braille_dots_246\n KEY_braille_dots_2467\nC type: GDK_KEY_braille_dots_2467\n KEY_braille_dots_24678\nC type: GDK_KEY_braille_dots_24678\n KEY_braille_dots_2468\nC type: GDK_KEY_braille_dots_2468\n KEY_braille_dots_247\nC type: GDK_KEY_braille_dots_247\n KEY_braille_dots_2478\nC type: GDK_KEY_braille_dots_2478\n KEY_braille_dots_248\nC type: GDK_KEY_braille_dots_248\n KEY_braille_dots_25\nC type: GDK_KEY_braille_dots_25\n KEY_braille_dots_256\nC type: GDK_KEY_braille_dots_256\n KEY_braille_dots_2567\nC type: GDK_KEY_braille_dots_2567\n KEY_braille_dots_25678\nC type: GDK_KEY_braille_dots_25678\n KEY_braille_dots_2568\nC type: GDK_KEY_braille_dots_2568\n KEY_braille_dots_257\nC type: GDK_KEY_braille_dots_257\n KEY_braille_dots_2578\nC type: GDK_KEY_braille_dots_2578\n KEY_braille_dots_258\nC type: GDK_KEY_braille_dots_258\n KEY_braille_dots_26\nC type: GDK_KEY_braille_dots_26\n KEY_braille_dots_267\nC type: GDK_KEY_braille_dots_267\n KEY_braille_dots_2678\nC type: GDK_KEY_braille_dots_2678\n KEY_braille_dots_268\nC type: GDK_KEY_braille_dots_268\n KEY_braille_dots_27\nC type: GDK_KEY_braille_dots_27\n KEY_braille_dots_278\nC type: GDK_KEY_braille_dots_278\n KEY_braille_dots_28\nC type: GDK_KEY_braille_dots_28\n KEY_braille_dots_3\nC type: GDK_KEY_braille_dots_3\n KEY_braille_dots_34\nC type: GDK_KEY_braille_dots_34\n KEY_braille_dots_345\nC type: GDK_KEY_braille_dots_345\n KEY_braille_dots_3456\nC type: GDK_KEY_braille_dots_3456\n KEY_braille_dots_34567\nC type: GDK_KEY_braille_dots_34567\n KEY_braille_dots_345678\nC type: GDK_KEY_braille_dots_345678\n KEY_braille_dots_34568\nC type: GDK_KEY_braille_dots_34568\n KEY_braille_dots_3457\nC type: GDK_KEY_braille_dots_3457\n KEY_braille_dots_34578\nC type: GDK_KEY_braille_dots_34578\n KEY_braille_dots_3458\nC type: GDK_KEY_braille_dots_3458\n KEY_braille_dots_346\nC type: GDK_KEY_braille_dots_346\n KEY_braille_dots_3467\nC type: GDK_KEY_braille_dots_3467\n KEY_braille_dots_34678\nC type: GDK_KEY_braille_dots_34678\n KEY_braille_dots_3468\nC type: GDK_KEY_braille_dots_3468\n KEY_braille_dots_347\nC type: GDK_KEY_braille_dots_347\n KEY_braille_dots_3478\nC type: GDK_KEY_braille_dots_3478\n KEY_braille_dots_348\nC type: GDK_KEY_braille_dots_348\n KEY_braille_dots_35\nC type: GDK_KEY_braille_dots_35\n KEY_braille_dots_356\nC type: GDK_KEY_braille_dots_356\n KEY_braille_dots_3567\nC type: GDK_KEY_braille_dots_3567\n KEY_braille_dots_35678\nC type: GDK_KEY_braille_dots_35678\n KEY_braille_dots_3568\nC type: GDK_KEY_braille_dots_3568\n KEY_braille_dots_357\nC type: GDK_KEY_braille_dots_357\n KEY_braille_dots_3578\nC type: GDK_KEY_braille_dots_3578\n KEY_braille_dots_358\nC type: GDK_KEY_braille_dots_358\n KEY_braille_dots_36\nC type: GDK_KEY_braille_dots_36\n KEY_braille_dots_367\nC type: GDK_KEY_braille_dots_367\n KEY_braille_dots_3678\nC type: GDK_KEY_braille_dots_3678\n KEY_braille_dots_368\nC type: GDK_KEY_braille_dots_368\n KEY_braille_dots_37\nC type: GDK_KEY_braille_dots_37\n KEY_braille_dots_378\nC type: GDK_KEY_braille_dots_378\n KEY_braille_dots_38\nC type: GDK_KEY_braille_dots_38\n KEY_braille_dots_4\nC type: GDK_KEY_braille_dots_4\n KEY_braille_dots_45\nC type: GDK_KEY_braille_dots_45\n KEY_braille_dots_456\nC type: GDK_KEY_braille_dots_456\n KEY_braille_dots_4567\nC type: GDK_KEY_braille_dots_4567\n KEY_braille_dots_45678\nC type: GDK_KEY_braille_dots_45678\n KEY_braille_dots_4568\nC type: GDK_KEY_braille_dots_4568\n KEY_braille_dots_457\nC type: GDK_KEY_braille_dots_457\n KEY_braille_dots_4578\nC type: GDK_KEY_braille_dots_4578\n KEY_braille_dots_458\nC type: GDK_KEY_braille_dots_458\n KEY_braille_dots_46\nC type: GDK_KEY_braille_dots_46\n KEY_braille_dots_467\nC type: GDK_KEY_braille_dots_467\n KEY_braille_dots_4678\nC type: GDK_KEY_braille_dots_4678\n KEY_braille_dots_468\nC type: GDK_KEY_braille_dots_468\n KEY_braille_dots_47\nC type: GDK_KEY_braille_dots_47\n KEY_braille_dots_478\nC type: GDK_KEY_braille_dots_478\n KEY_braille_dots_48\nC type: GDK_KEY_braille_dots_48\n KEY_braille_dots_5\nC type: GDK_KEY_braille_dots_5\n KEY_braille_dots_56\nC type: GDK_KEY_braille_dots_56\n KEY_braille_dots_567\nC type: GDK_KEY_braille_dots_567\n KEY_braille_dots_5678\nC type: GDK_KEY_braille_dots_5678\n KEY_braille_dots_568\nC type: GDK_KEY_braille_dots_568\n KEY_braille_dots_57\nC type: GDK_KEY_braille_dots_57\n KEY_braille_dots_578\nC type: GDK_KEY_braille_dots_578\n KEY_braille_dots_58\nC type: GDK_KEY_braille_dots_58\n KEY_braille_dots_6\nC type: GDK_KEY_braille_dots_6\n KEY_braille_dots_67\nC type: GDK_KEY_braille_dots_67\n KEY_braille_dots_678\nC type: GDK_KEY_braille_dots_678\n KEY_braille_dots_68\nC type: GDK_KEY_braille_dots_68\n KEY_braille_dots_7\nC type: GDK_KEY_braille_dots_7\n KEY_braille_dots_78\nC type: GDK_KEY_braille_dots_78\n KEY_braille_dots_8\nC type: GDK_KEY_braille_dots_8\n KEY_breve\nC type: GDK_KEY_breve\n KEY_brokenbar\nC type: GDK_KEY_brokenbar\n KEY_c\nC type: GDK_KEY_c\n KEY_c_h\nC type: GDK_KEY_c_h\n KEY_cabovedot\nC type: GDK_KEY_cabovedot\n KEY_cacute\nC type: GDK_KEY_cacute\n KEY_careof\nC type: GDK_KEY_careof\n KEY_caret\nC type: GDK_KEY_caret\n KEY_caron\nC type: GDK_KEY_caron\n KEY_ccaron\nC type: GDK_KEY_ccaron\n KEY_ccedilla\nC type: GDK_KEY_ccedilla\n KEY_ccircumflex\nC type: GDK_KEY_ccircumflex\n KEY_cedilla\nC type: GDK_KEY_cedilla\n KEY_cent\nC type: GDK_KEY_cent\n KEY_ch\nC type: GDK_KEY_ch\n KEY_checkerboard\nC type: GDK_KEY_checkerboard\n KEY_checkmark\nC type: GDK_KEY_checkmark\n KEY_circle\nC type: GDK_KEY_circle\n KEY_club\nC type: GDK_KEY_club\n KEY_colon\nC type: GDK_KEY_colon\n KEY_comma\nC type: GDK_KEY_comma\n KEY_containsas\nC type: GDK_KEY_containsas\n KEY_copyright\nC type: GDK_KEY_copyright\n KEY_cr\nC type: GDK_KEY_cr\n KEY_crossinglines\nC type: GDK_KEY_crossinglines\n KEY_cuberoot\nC type: GDK_KEY_cuberoot\n KEY_currency\nC type: GDK_KEY_currency\n KEY_cursor\nC type: GDK_KEY_cursor\n KEY_d\nC type: GDK_KEY_d\n KEY_dabovedot\nC type: GDK_KEY_dabovedot\n KEY_dagger\nC type: GDK_KEY_dagger\n KEY_dcaron\nC type: GDK_KEY_dcaron\n KEY_dead_A\nC type: GDK_KEY_dead_A\n KEY_dead_E\nC type: GDK_KEY_dead_E\n KEY_dead_I\nC type: GDK_KEY_dead_I\n KEY_dead_O\nC type: GDK_KEY_dead_O\n KEY_dead_U\nC type: GDK_KEY_dead_U\n KEY_dead_a\nC type: GDK_KEY_dead_a\n KEY_dead_abovecomma\nC type: GDK_KEY_dead_abovecomma\n KEY_dead_abovedot\nC type: GDK_KEY_dead_abovedot\n KEY_dead_abovereversedcomma\nC type: GDK_KEY_dead_abovereversedcomma\n KEY_dead_abovering\nC type: GDK_KEY_dead_abovering\n KEY_dead_acute\nC type: GDK_KEY_dead_acute\n KEY_dead_belowbreve\nC type: GDK_KEY_dead_belowbreve\n KEY_dead_belowcircumflex\nC type: GDK_KEY_dead_belowcircumflex\n KEY_dead_belowcomma\nC type: GDK_KEY_dead_belowcomma\n KEY_dead_belowdiaeresis\nC type: GDK_KEY_dead_belowdiaeresis\n KEY_dead_belowdot\nC type: GDK_KEY_dead_belowdot\n KEY_dead_belowmacron\nC type: GDK_KEY_dead_belowmacron\n KEY_dead_belowring\nC type: GDK_KEY_dead_belowring\n KEY_dead_belowtilde\nC type: GDK_KEY_dead_belowtilde\n KEY_dead_breve\nC type: GDK_KEY_dead_breve\n KEY_dead_capital_schwa\nC type: GDK_KEY_dead_capital_schwa\n KEY_dead_caron\nC type: GDK_KEY_dead_caron\n KEY_dead_cedilla\nC type: GDK_KEY_dead_cedilla\n KEY_dead_circumflex\nC type: GDK_KEY_dead_circumflex\n KEY_dead_currency\nC type: GDK_KEY_dead_currency\n KEY_dead_dasia\nC type: GDK_KEY_dead_dasia\n KEY_dead_diaeresis\nC type: GDK_KEY_dead_diaeresis\n KEY_dead_doubleacute\nC type: GDK_KEY_dead_doubleacute\n KEY_dead_doublegrave\nC type: GDK_KEY_dead_doublegrave\n KEY_dead_e\nC type: GDK_KEY_dead_e\n KEY_dead_grave\nC type: GDK_KEY_dead_grave\n KEY_dead_greek\nC type: GDK_KEY_dead_greek\n KEY_dead_hook\nC type: GDK_KEY_dead_hook\n KEY_dead_horn\nC type: GDK_KEY_dead_horn\n KEY_dead_i\nC type: GDK_KEY_dead_i\n KEY_dead_invertedbreve\nC type: GDK_KEY_dead_invertedbreve\n KEY_dead_iota\nC type: GDK_KEY_dead_iota\n KEY_dead_macron\nC type: GDK_KEY_dead_macron\n KEY_dead_o\nC type: GDK_KEY_dead_o\n KEY_dead_ogonek\nC type: GDK_KEY_dead_ogonek\n KEY_dead_perispomeni\nC type: GDK_KEY_dead_perispomeni\n KEY_dead_psili\nC type: GDK_KEY_dead_psili\n KEY_dead_semivoiced_sound\nC type: GDK_KEY_dead_semivoiced_sound\n KEY_dead_small_schwa\nC type: GDK_KEY_dead_small_schwa\n KEY_dead_stroke\nC type: GDK_KEY_dead_stroke\n KEY_dead_tilde\nC type: GDK_KEY_dead_tilde\n KEY_dead_u\nC type: GDK_KEY_dead_u\n KEY_dead_voiced_sound\nC type: GDK_KEY_dead_voiced_sound\n KEY_decimalpoint\nC type: GDK_KEY_decimalpoint\n KEY_degree\nC type: GDK_KEY_degree\n KEY_diaeresis\nC type: GDK_KEY_diaeresis\n KEY_diamond\nC type: GDK_KEY_diamond\n KEY_digitspace\nC type: GDK_KEY_digitspace\n KEY_dintegral\nC type: GDK_KEY_dintegral\n KEY_division\nC type: GDK_KEY_division\n KEY_dollar\nC type: GDK_KEY_dollar\n KEY_doubbaselinedot\nC type: GDK_KEY_doubbaselinedot\n KEY_doubleacute\nC type: GDK_KEY_doubleacute\n KEY_doubledagger\nC type: GDK_KEY_doubledagger\n KEY_doublelowquotemark\nC type: GDK_KEY_doublelowquotemark\n KEY_downarrow\nC type: GDK_KEY_downarrow\n KEY_downcaret\nC type: GDK_KEY_downcaret\n KEY_downshoe\nC type: GDK_KEY_downshoe\n KEY_downstile\nC type: GDK_KEY_downstile\n KEY_downtack\nC type: GDK_KEY_downtack\n KEY_dstroke\nC type: GDK_KEY_dstroke\n KEY_e\nC type: GDK_KEY_e\n KEY_eabovedot\nC type: GDK_KEY_eabovedot\n KEY_eacute\nC type: GDK_KEY_eacute\n KEY_ebelowdot\nC type: GDK_KEY_ebelowdot\n KEY_ecaron\nC type: GDK_KEY_ecaron\n KEY_ecircumflex\nC type: GDK_KEY_ecircumflex\n KEY_ecircumflexacute\nC type: GDK_KEY_ecircumflexacute\n KEY_ecircumflexbelowdot\nC type: GDK_KEY_ecircumflexbelowdot\n KEY_ecircumflexgrave\nC type: GDK_KEY_ecircumflexgrave\n KEY_ecircumflexhook\nC type: GDK_KEY_ecircumflexhook\n KEY_ecircumflextilde\nC type: GDK_KEY_ecircumflextilde\n KEY_ediaeresis\nC type: GDK_KEY_ediaeresis\n KEY_egrave\nC type: GDK_KEY_egrave\n KEY_ehook\nC type: GDK_KEY_ehook\n KEY_eightsubscript\nC type: GDK_KEY_eightsubscript\n KEY_eightsuperior\nC type: GDK_KEY_eightsuperior\n KEY_elementof\nC type: GDK_KEY_elementof\n KEY_ellipsis\nC type: GDK_KEY_ellipsis\n KEY_em3space\nC type: GDK_KEY_em3space\n KEY_em4space\nC type: GDK_KEY_em4space\n KEY_emacron\nC type: GDK_KEY_emacron\n KEY_emdash\nC type: GDK_KEY_emdash\n KEY_emfilledcircle\nC type: GDK_KEY_emfilledcircle\n KEY_emfilledrect\nC type: GDK_KEY_emfilledrect\n KEY_emopencircle\nC type: GDK_KEY_emopencircle\n KEY_emopenrectangle\nC type: GDK_KEY_emopenrectangle\n KEY_emptyset\nC type: GDK_KEY_emptyset\n KEY_emspace\nC type: GDK_KEY_emspace\n KEY_endash\nC type: GDK_KEY_endash\n KEY_enfilledcircbullet\nC type: GDK_KEY_enfilledcircbullet\n KEY_enfilledsqbullet\nC type: GDK_KEY_enfilledsqbullet\n KEY_eng\nC type: GDK_KEY_eng\n KEY_enopencircbullet\nC type: GDK_KEY_enopencircbullet\n KEY_enopensquarebullet\nC type: GDK_KEY_enopensquarebullet\n KEY_enspace\nC type: GDK_KEY_enspace\n KEY_eogonek\nC type: GDK_KEY_eogonek\n KEY_equal\nC type: GDK_KEY_equal\n KEY_eth\nC type: GDK_KEY_eth\n KEY_etilde\nC type: GDK_KEY_etilde\n KEY_exclam\nC type: GDK_KEY_exclam\n KEY_exclamdown\nC type: GDK_KEY_exclamdown\n KEY_ezh\nC type: GDK_KEY_ezh\n KEY_f\nC type: GDK_KEY_f\n KEY_fabovedot\nC type: GDK_KEY_fabovedot\n KEY_femalesymbol\nC type: GDK_KEY_femalesymbol\n KEY_ff\nC type: GDK_KEY_ff\n KEY_figdash\nC type: GDK_KEY_figdash\n KEY_filledlefttribullet\nC type: GDK_KEY_filledlefttribullet\n KEY_filledrectbullet\nC type: GDK_KEY_filledrectbullet\n KEY_filledrighttribullet\nC type: GDK_KEY_filledrighttribullet\n KEY_filledtribulletdown\nC type: GDK_KEY_filledtribulletdown\n KEY_filledtribulletup\nC type: GDK_KEY_filledtribulletup\n KEY_fiveeighths\nC type: GDK_KEY_fiveeighths\n KEY_fivesixths\nC type: GDK_KEY_fivesixths\n KEY_fivesubscript\nC type: GDK_KEY_fivesubscript\n KEY_fivesuperior\nC type: GDK_KEY_fivesuperior\n KEY_fourfifths\nC type: GDK_KEY_fourfifths\n KEY_foursubscript\nC type: GDK_KEY_foursubscript\n KEY_foursuperior\nC type: GDK_KEY_foursuperior\n KEY_fourthroot\nC type: GDK_KEY_fourthroot\n KEY_function\nC type: GDK_KEY_function\n KEY_g\nC type: GDK_KEY_g\n KEY_gabovedot\nC type: GDK_KEY_gabovedot\n KEY_gbreve\nC type: GDK_KEY_gbreve\n KEY_gcaron\nC type: GDK_KEY_gcaron\n KEY_gcedilla\nC type: GDK_KEY_gcedilla\n KEY_gcircumflex\nC type: GDK_KEY_gcircumflex\n KEY_grave\nC type: GDK_KEY_grave\n KEY_greater\nC type: GDK_KEY_greater\n KEY_greaterthanequal\nC type: GDK_KEY_greaterthanequal\n KEY_guillemotleft\nC type: GDK_KEY_guillemotleft\n KEY_guillemotright\nC type: GDK_KEY_guillemotright\n KEY_h\nC type: GDK_KEY_h\n KEY_hairspace\nC type: GDK_KEY_hairspace\n KEY_hcircumflex\nC type: GDK_KEY_hcircumflex\n KEY_heart\nC type: GDK_KEY_heart\n KEY_hebrew_aleph\nC type: GDK_KEY_hebrew_aleph\n KEY_hebrew_ayin\nC type: GDK_KEY_hebrew_ayin\n KEY_hebrew_bet\nC type: GDK_KEY_hebrew_bet\n KEY_hebrew_beth\nC type: GDK_KEY_hebrew_beth\n KEY_hebrew_chet\nC type: GDK_KEY_hebrew_chet\n KEY_hebrew_dalet\nC type: GDK_KEY_hebrew_dalet\n KEY_hebrew_daleth\nC type: GDK_KEY_hebrew_daleth\n KEY_hebrew_doublelowline\nC type: GDK_KEY_hebrew_doublelowline\n KEY_hebrew_finalkaph\nC type: GDK_KEY_hebrew_finalkaph\n KEY_hebrew_finalmem\nC type: GDK_KEY_hebrew_finalmem\n KEY_hebrew_finalnun\nC type: GDK_KEY_hebrew_finalnun\n KEY_hebrew_finalpe\nC type: GDK_KEY_hebrew_finalpe\n KEY_hebrew_finalzade\nC type: GDK_KEY_hebrew_finalzade\n KEY_hebrew_finalzadi\nC type: GDK_KEY_hebrew_finalzadi\n KEY_hebrew_gimel\nC type: GDK_KEY_hebrew_gimel\n KEY_hebrew_gimmel\nC type: GDK_KEY_hebrew_gimmel\n KEY_hebrew_he\nC type: GDK_KEY_hebrew_he\n KEY_hebrew_het\nC type: GDK_KEY_hebrew_het\n KEY_hebrew_kaph\nC type: GDK_KEY_hebrew_kaph\n KEY_hebrew_kuf\nC type: GDK_KEY_hebrew_kuf\n KEY_hebrew_lamed\nC type: GDK_KEY_hebrew_lamed\n KEY_hebrew_mem\nC type: GDK_KEY_hebrew_mem\n KEY_hebrew_nun\nC type: GDK_KEY_hebrew_nun\n KEY_hebrew_pe\nC type: GDK_KEY_hebrew_pe\n KEY_hebrew_qoph\nC type: GDK_KEY_hebrew_qoph\n KEY_hebrew_resh\nC type: GDK_KEY_hebrew_resh\n KEY_hebrew_samech\nC type: GDK_KEY_hebrew_samech\n KEY_hebrew_samekh\nC type: GDK_KEY_hebrew_samekh\n KEY_hebrew_shin\nC type: GDK_KEY_hebrew_shin\n KEY_hebrew_taf\nC type: GDK_KEY_hebrew_taf\n KEY_hebrew_taw\nC type: GDK_KEY_hebrew_taw\n KEY_hebrew_tet\nC type: GDK_KEY_hebrew_tet\n KEY_hebrew_teth\nC type: GDK_KEY_hebrew_teth\n KEY_hebrew_waw\nC type: GDK_KEY_hebrew_waw\n KEY_hebrew_yod\nC type: GDK_KEY_hebrew_yod\n KEY_hebrew_zade\nC type: GDK_KEY_hebrew_zade\n KEY_hebrew_zadi\nC type: GDK_KEY_hebrew_zadi\n KEY_hebrew_zain\nC type: GDK_KEY_hebrew_zain\n KEY_hebrew_zayin\nC type: GDK_KEY_hebrew_zayin\n KEY_hexagram\nC type: GDK_KEY_hexagram\n KEY_horizconnector\nC type: GDK_KEY_horizconnector\n KEY_horizlinescan1\nC type: GDK_KEY_horizlinescan1\n KEY_horizlinescan3\nC type: GDK_KEY_horizlinescan3\n KEY_horizlinescan5\nC type: GDK_KEY_horizlinescan5\n KEY_horizlinescan7\nC type: GDK_KEY_horizlinescan7\n KEY_horizlinescan9\nC type: GDK_KEY_horizlinescan9\n KEY_hstroke\nC type: GDK_KEY_hstroke\n KEY_ht\nC type: GDK_KEY_ht\n KEY_hyphen\nC type: GDK_KEY_hyphen\n KEY_i\nC type: GDK_KEY_i\n KEY_iTouch\nC type: GDK_KEY_iTouch\n KEY_iacute\nC type: GDK_KEY_iacute\n KEY_ibelowdot\nC type: GDK_KEY_ibelowdot\n KEY_ibreve\nC type: GDK_KEY_ibreve\n KEY_icircumflex\nC type: GDK_KEY_icircumflex\n KEY_identical\nC type: GDK_KEY_identical\n KEY_idiaeresis\nC type: GDK_KEY_idiaeresis\n KEY_idotless\nC type: GDK_KEY_idotless\n KEY_ifonlyif\nC type: GDK_KEY_ifonlyif\n KEY_igrave\nC type: GDK_KEY_igrave\n KEY_ihook\nC type: GDK_KEY_ihook\n KEY_imacron\nC type: GDK_KEY_imacron\n KEY_implies\nC type: GDK_KEY_implies\n KEY_includedin\nC type: GDK_KEY_includedin\n KEY_includes\nC type: GDK_KEY_includes\n KEY_infinity\nC type: GDK_KEY_infinity\n KEY_integral\nC type: GDK_KEY_integral\n KEY_intersection\nC type: GDK_KEY_intersection\n KEY_iogonek\nC type: GDK_KEY_iogonek\n KEY_itilde\nC type: GDK_KEY_itilde\n KEY_j\nC type: GDK_KEY_j\n KEY_jcircumflex\nC type: GDK_KEY_jcircumflex\n KEY_jot\nC type: GDK_KEY_jot\n KEY_k\nC type: GDK_KEY_k\n KEY_kana_A\nC type: GDK_KEY_kana_A\n KEY_kana_CHI\nC type: GDK_KEY_kana_CHI\n KEY_kana_E\nC type: GDK_KEY_kana_E\n KEY_kana_FU\nC type: GDK_KEY_kana_FU\n KEY_kana_HA\nC type: GDK_KEY_kana_HA\n KEY_kana_HE\nC type: GDK_KEY_kana_HE\n KEY_kana_HI\nC type: GDK_KEY_kana_HI\n KEY_kana_HO\nC type: GDK_KEY_kana_HO\n KEY_kana_HU\nC type: GDK_KEY_kana_HU\n KEY_kana_I\nC type: GDK_KEY_kana_I\n KEY_kana_KA\nC type: GDK_KEY_kana_KA\n KEY_kana_KE\nC type: GDK_KEY_kana_KE\n KEY_kana_KI\nC type: GDK_KEY_kana_KI\n KEY_kana_KO\nC type: GDK_KEY_kana_KO\n KEY_kana_KU\nC type: GDK_KEY_kana_KU\n KEY_kana_MA\nC type: GDK_KEY_kana_MA\n KEY_kana_ME\nC type: GDK_KEY_kana_ME\n KEY_kana_MI\nC type: GDK_KEY_kana_MI\n KEY_kana_MO\nC type: GDK_KEY_kana_MO\n KEY_kana_MU\nC type: GDK_KEY_kana_MU\n KEY_kana_N\nC type: GDK_KEY_kana_N\n KEY_kana_NA\nC type: GDK_KEY_kana_NA\n KEY_kana_NE\nC type: GDK_KEY_kana_NE\n KEY_kana_NI\nC type: GDK_KEY_kana_NI\n KEY_kana_NO\nC type: GDK_KEY_kana_NO\n KEY_kana_NU\nC type: GDK_KEY_kana_NU\n KEY_kana_O\nC type: GDK_KEY_kana_O\n KEY_kana_RA\nC type: GDK_KEY_kana_RA\n KEY_kana_RE\nC type: GDK_KEY_kana_RE\n KEY_kana_RI\nC type: GDK_KEY_kana_RI\n KEY_kana_RO\nC type: GDK_KEY_kana_RO\n KEY_kana_RU\nC type: GDK_KEY_kana_RU\n KEY_kana_SA\nC type: GDK_KEY_kana_SA\n KEY_kana_SE\nC type: GDK_KEY_kana_SE\n KEY_kana_SHI\nC type: GDK_KEY_kana_SHI\n KEY_kana_SO\nC type: GDK_KEY_kana_SO\n KEY_kana_SU\nC type: GDK_KEY_kana_SU\n KEY_kana_TA\nC type: GDK_KEY_kana_TA\n KEY_kana_TE\nC type: GDK_KEY_kana_TE\n KEY_kana_TI\nC type: GDK_KEY_kana_TI\n KEY_kana_TO\nC type: GDK_KEY_kana_TO\n KEY_kana_TSU\nC type: GDK_KEY_kana_TSU\n KEY_kana_TU\nC type: GDK_KEY_kana_TU\n KEY_kana_U\nC type: GDK_KEY_kana_U\n KEY_kana_WA\nC type: GDK_KEY_kana_WA\n KEY_kana_WO\nC type: GDK_KEY_kana_WO\n KEY_kana_YA\nC type: GDK_KEY_kana_YA\n KEY_kana_YO\nC type: GDK_KEY_kana_YO\n KEY_kana_YU\nC type: GDK_KEY_kana_YU\n KEY_kana_a\nC type: GDK_KEY_kana_a\n KEY_kana_closingbracket\nC type: GDK_KEY_kana_closingbracket\n KEY_kana_comma\nC type: GDK_KEY_kana_comma\n KEY_kana_conjunctive\nC type: GDK_KEY_kana_conjunctive\n KEY_kana_e\nC type: GDK_KEY_kana_e\n KEY_kana_fullstop\nC type: GDK_KEY_kana_fullstop\n KEY_kana_i\nC type: GDK_KEY_kana_i\n KEY_kana_middledot\nC type: GDK_KEY_kana_middledot\n KEY_kana_o\nC type: GDK_KEY_kana_o\n KEY_kana_openingbracket\nC type: GDK_KEY_kana_openingbracket\n KEY_kana_switch\nC type: GDK_KEY_kana_switch\n KEY_kana_tsu\nC type: GDK_KEY_kana_tsu\n KEY_kana_tu\nC type: GDK_KEY_kana_tu\n KEY_kana_u\nC type: GDK_KEY_kana_u\n KEY_kana_ya\nC type: GDK_KEY_kana_ya\n KEY_kana_yo\nC type: GDK_KEY_kana_yo\n KEY_kana_yu\nC type: GDK_KEY_kana_yu\n KEY_kappa\nC type: GDK_KEY_kappa\n KEY_kcedilla\nC type: GDK_KEY_kcedilla\n KEY_kra\nC type: GDK_KEY_kra\n KEY_l\nC type: GDK_KEY_l\n KEY_lacute\nC type: GDK_KEY_lacute\n KEY_latincross\nC type: GDK_KEY_latincross\n KEY_lbelowdot\nC type: GDK_KEY_lbelowdot\n KEY_lcaron\nC type: GDK_KEY_lcaron\n KEY_lcedilla\nC type: GDK_KEY_lcedilla\n KEY_leftanglebracket\nC type: GDK_KEY_leftanglebracket\n KEY_leftarrow\nC type: GDK_KEY_leftarrow\n KEY_leftcaret\nC type: GDK_KEY_leftcaret\n KEY_leftdoublequotemark\nC type: GDK_KEY_leftdoublequotemark\n KEY_leftmiddlecurlybrace\nC type: GDK_KEY_leftmiddlecurlybrace\n KEY_leftopentriangle\nC type: GDK_KEY_leftopentriangle\n KEY_leftpointer\nC type: GDK_KEY_leftpointer\n KEY_leftradical\nC type: GDK_KEY_leftradical\n KEY_leftshoe\nC type: GDK_KEY_leftshoe\n KEY_leftsinglequotemark\nC type: GDK_KEY_leftsinglequotemark\n KEY_leftt\nC type: GDK_KEY_leftt\n KEY_lefttack\nC type: GDK_KEY_lefttack\n KEY_less\nC type: GDK_KEY_less\n KEY_lessthanequal\nC type: GDK_KEY_lessthanequal\n KEY_lf\nC type: GDK_KEY_lf\n KEY_logicaland\nC type: GDK_KEY_logicaland\n KEY_logicalor\nC type: GDK_KEY_logicalor\n KEY_lowleftcorner\nC type: GDK_KEY_lowleftcorner\n KEY_lowrightcorner\nC type: GDK_KEY_lowrightcorner\n KEY_lstroke\nC type: GDK_KEY_lstroke\n KEY_m\nC type: GDK_KEY_m\n KEY_mabovedot\nC type: GDK_KEY_mabovedot\n KEY_macron\nC type: GDK_KEY_macron\n KEY_malesymbol\nC type: GDK_KEY_malesymbol\n KEY_maltesecross\nC type: GDK_KEY_maltesecross\n KEY_marker\nC type: GDK_KEY_marker\n KEY_masculine\nC type: GDK_KEY_masculine\n KEY_minus\nC type: GDK_KEY_minus\n KEY_minutes\nC type: GDK_KEY_minutes\n KEY_mu\nC type: GDK_KEY_mu\n KEY_multiply\nC type: GDK_KEY_multiply\n KEY_musicalflat\nC type: GDK_KEY_musicalflat\n KEY_musicalsharp\nC type: GDK_KEY_musicalsharp\n KEY_n\nC type: GDK_KEY_n\n KEY_nabla\nC type: GDK_KEY_nabla\n KEY_nacute\nC type: GDK_KEY_nacute\n KEY_ncaron\nC type: GDK_KEY_ncaron\n KEY_ncedilla\nC type: GDK_KEY_ncedilla\n KEY_ninesubscript\nC type: GDK_KEY_ninesubscript\n KEY_ninesuperior\nC type: GDK_KEY_ninesuperior\n KEY_nl\nC type: GDK_KEY_nl\n KEY_nobreakspace\nC type: GDK_KEY_nobreakspace\n KEY_notapproxeq\nC type: GDK_KEY_notapproxeq\n KEY_notelementof\nC type: GDK_KEY_notelementof\n KEY_notequal\nC type: GDK_KEY_notequal\n KEY_notidentical\nC type: GDK_KEY_notidentical\n KEY_notsign\nC type: GDK_KEY_notsign\n KEY_ntilde\nC type: GDK_KEY_ntilde\n KEY_numbersign\nC type: GDK_KEY_numbersign\n KEY_numerosign\nC type: GDK_KEY_numerosign\n KEY_o\nC type: GDK_KEY_o\n KEY_oacute\nC type: GDK_KEY_oacute\n KEY_obarred\nC type: GDK_KEY_obarred\n KEY_obelowdot\nC type: GDK_KEY_obelowdot\n KEY_ocaron\nC type: GDK_KEY_ocaron\n KEY_ocircumflex\nC type: GDK_KEY_ocircumflex\n KEY_ocircumflexacute\nC type: GDK_KEY_ocircumflexacute\n KEY_ocircumflexbelowdot\nC type: GDK_KEY_ocircumflexbelowdot\n KEY_ocircumflexgrave\nC type: GDK_KEY_ocircumflexgrave\n KEY_ocircumflexhook\nC type: GDK_KEY_ocircumflexhook\n KEY_ocircumflextilde\nC type: GDK_KEY_ocircumflextilde\n KEY_odiaeresis\nC type: GDK_KEY_odiaeresis\n KEY_odoubleacute\nC type: GDK_KEY_odoubleacute\n KEY_oe\nC type: GDK_KEY_oe\n KEY_ogonek\nC type: GDK_KEY_ogonek\n KEY_ograve\nC type: GDK_KEY_ograve\n KEY_ohook\nC type: GDK_KEY_ohook\n KEY_ohorn\nC type: GDK_KEY_ohorn\n KEY_ohornacute\nC type: GDK_KEY_ohornacute\n KEY_ohornbelowdot\nC type: GDK_KEY_ohornbelowdot\n KEY_ohorngrave\nC type: GDK_KEY_ohorngrave\n KEY_ohornhook\nC type: GDK_KEY_ohornhook\n KEY_ohorntilde\nC type: GDK_KEY_ohorntilde\n KEY_omacron\nC type: GDK_KEY_omacron\n KEY_oneeighth\nC type: GDK_KEY_oneeighth\n KEY_onefifth\nC type: GDK_KEY_onefifth\n KEY_onehalf\nC type: GDK_KEY_onehalf\n KEY_onequarter\nC type: GDK_KEY_onequarter\n KEY_onesixth\nC type: GDK_KEY_onesixth\n KEY_onesubscript\nC type: GDK_KEY_onesubscript\n KEY_onesuperior\nC type: GDK_KEY_onesuperior\n KEY_onethird\nC type: GDK_KEY_onethird\n KEY_ooblique\nC type: GDK_KEY_ooblique\n KEY_openrectbullet\nC type: GDK_KEY_openrectbullet\n KEY_openstar\nC type: GDK_KEY_openstar\n KEY_opentribulletdown\nC type: GDK_KEY_opentribulletdown\n KEY_opentribulletup\nC type: GDK_KEY_opentribulletup\n KEY_ordfeminine\nC type: GDK_KEY_ordfeminine\n KEY_oslash\nC type: GDK_KEY_oslash\n KEY_otilde\nC type: GDK_KEY_otilde\n KEY_overbar\nC type: GDK_KEY_overbar\n KEY_overline\nC type: GDK_KEY_overline\n KEY_p\nC type: GDK_KEY_p\n KEY_pabovedot\nC type: GDK_KEY_pabovedot\n KEY_paragraph\nC type: GDK_KEY_paragraph\n KEY_parenleft\nC type: GDK_KEY_parenleft\n KEY_parenright\nC type: GDK_KEY_parenright\n KEY_partdifferential\nC type: GDK_KEY_partdifferential\n KEY_partialderivative\nC type: GDK_KEY_partialderivative\n KEY_percent\nC type: GDK_KEY_percent\n KEY_period\nC type: GDK_KEY_period\n KEY_periodcentered\nC type: GDK_KEY_periodcentered\n KEY_permille\nC type: GDK_KEY_permille\n KEY_phonographcopyright\nC type: GDK_KEY_phonographcopyright\n KEY_plus\nC type: GDK_KEY_plus\n KEY_plusminus\nC type: GDK_KEY_plusminus\n KEY_prescription\nC type: GDK_KEY_prescription\n KEY_prolongedsound\nC type: GDK_KEY_prolongedsound\n KEY_punctspace\nC type: GDK_KEY_punctspace\n KEY_q\nC type: GDK_KEY_q\n KEY_quad\nC type: GDK_KEY_quad\n KEY_question\nC type: GDK_KEY_question\n KEY_questiondown\nC type: GDK_KEY_questiondown\n KEY_quotedbl\nC type: GDK_KEY_quotedbl\n KEY_quoteleft\nC type: GDK_KEY_quoteleft\n KEY_quoteright\nC type: GDK_KEY_quoteright\n KEY_r\nC type: GDK_KEY_r\n KEY_racute\nC type: GDK_KEY_racute\n KEY_radical\nC type: GDK_KEY_radical\n KEY_rcaron\nC type: GDK_KEY_rcaron\n KEY_rcedilla\nC type: GDK_KEY_rcedilla\n KEY_registered\nC type: GDK_KEY_registered\n KEY_rightanglebracket\nC type: GDK_KEY_rightanglebracket\n KEY_rightarrow\nC type: GDK_KEY_rightarrow\n KEY_rightcaret\nC type: GDK_KEY_rightcaret\n KEY_rightdoublequotemark\nC type: GDK_KEY_rightdoublequotemark\n KEY_rightmiddlecurlybrace\nC type: GDK_KEY_rightmiddlecurlybrace\n KEY_rightmiddlesummation\nC type: GDK_KEY_rightmiddlesummation\n KEY_rightopentriangle\nC type: GDK_KEY_rightopentriangle\n KEY_rightpointer\nC type: GDK_KEY_rightpointer\n KEY_rightshoe\nC type: GDK_KEY_rightshoe\n KEY_rightsinglequotemark\nC type: GDK_KEY_rightsinglequotemark\n KEY_rightt\nC type: GDK_KEY_rightt\n KEY_righttack\nC type: GDK_KEY_righttack\n KEY_s\nC type: GDK_KEY_s\n KEY_sabovedot\nC type: GDK_KEY_sabovedot\n KEY_sacute\nC type: GDK_KEY_sacute\n KEY_scaron\nC type: GDK_KEY_scaron\n KEY_scedilla\nC type: GDK_KEY_scedilla\n KEY_schwa\nC type: GDK_KEY_schwa\n KEY_scircumflex\nC type: GDK_KEY_scircumflex\n KEY_script_switch\nC type: GDK_KEY_script_switch\n KEY_seconds\nC type: GDK_KEY_seconds\n KEY_section\nC type: GDK_KEY_section\n KEY_semicolon\nC type: GDK_KEY_semicolon\n KEY_semivoicedsound\nC type: GDK_KEY_semivoicedsound\n KEY_seveneighths\nC type: GDK_KEY_seveneighths\n KEY_sevensubscript\nC type: GDK_KEY_sevensubscript\n KEY_sevensuperior\nC type: GDK_KEY_sevensuperior\n KEY_signaturemark\nC type: GDK_KEY_signaturemark\n KEY_signifblank\nC type: GDK_KEY_signifblank\n KEY_similarequal\nC type: GDK_KEY_similarequal\n KEY_singlelowquotemark\nC type: GDK_KEY_singlelowquotemark\n KEY_sixsubscript\nC type: GDK_KEY_sixsubscript\n KEY_sixsuperior\nC type: GDK_KEY_sixsuperior\n KEY_slash\nC type: GDK_KEY_slash\n KEY_soliddiamond\nC type: GDK_KEY_soliddiamond\n KEY_space\nC type: GDK_KEY_space\n KEY_squareroot\nC type: GDK_KEY_squareroot\n KEY_ssharp\nC type: GDK_KEY_ssharp\n KEY_sterling\nC type: GDK_KEY_sterling\n KEY_stricteq\nC type: GDK_KEY_stricteq\n KEY_t\nC type: GDK_KEY_t\n KEY_tabovedot\nC type: GDK_KEY_tabovedot\n KEY_tcaron\nC type: GDK_KEY_tcaron\n KEY_tcedilla\nC type: GDK_KEY_tcedilla\n KEY_telephone\nC type: GDK_KEY_telephone\n KEY_telephonerecorder\nC type: GDK_KEY_telephonerecorder\n KEY_therefore\nC type: GDK_KEY_therefore\n KEY_thinspace\nC type: GDK_KEY_thinspace\n KEY_thorn\nC type: GDK_KEY_thorn\n KEY_threeeighths\nC type: GDK_KEY_threeeighths\n KEY_threefifths\nC type: GDK_KEY_threefifths\n KEY_threequarters\nC type: GDK_KEY_threequarters\n KEY_threesubscript\nC type: GDK_KEY_threesubscript\n KEY_threesuperior\nC type: GDK_KEY_threesuperior\n KEY_tintegral\nC type: GDK_KEY_tintegral\n KEY_topintegral\nC type: GDK_KEY_topintegral\n KEY_topleftparens\nC type: GDK_KEY_topleftparens\n KEY_topleftradical\nC type: GDK_KEY_topleftradical\n KEY_topleftsqbracket\nC type: GDK_KEY_topleftsqbracket\n KEY_topleftsummation\nC type: GDK_KEY_topleftsummation\n KEY_toprightparens\nC type: GDK_KEY_toprightparens\n KEY_toprightsqbracket\nC type: GDK_KEY_toprightsqbracket\n KEY_toprightsummation\nC type: GDK_KEY_toprightsummation\n KEY_topt\nC type: GDK_KEY_topt\n KEY_topvertsummationconnector\nC type: GDK_KEY_topvertsummationconnector\n KEY_trademark\nC type: GDK_KEY_trademark\n KEY_trademarkincircle\nC type: GDK_KEY_trademarkincircle\n KEY_tslash\nC type: GDK_KEY_tslash\n KEY_twofifths\nC type: GDK_KEY_twofifths\n KEY_twosubscript\nC type: GDK_KEY_twosubscript\n KEY_twosuperior\nC type: GDK_KEY_twosuperior\n KEY_twothirds\nC type: GDK_KEY_twothirds\n KEY_u\nC type: GDK_KEY_u\n KEY_uacute\nC type: GDK_KEY_uacute\n KEY_ubelowdot\nC type: GDK_KEY_ubelowdot\n KEY_ubreve\nC type: GDK_KEY_ubreve\n KEY_ucircumflex\nC type: GDK_KEY_ucircumflex\n KEY_udiaeresis\nC type: GDK_KEY_udiaeresis\n KEY_udoubleacute\nC type: GDK_KEY_udoubleacute\n KEY_ugrave\nC type: GDK_KEY_ugrave\n KEY_uhook\nC type: GDK_KEY_uhook\n KEY_uhorn\nC type: GDK_KEY_uhorn\n KEY_uhornacute\nC type: GDK_KEY_uhornacute\n KEY_uhornbelowdot\nC type: GDK_KEY_uhornbelowdot\n KEY_uhorngrave\nC type: GDK_KEY_uhorngrave\n KEY_uhornhook\nC type: GDK_KEY_uhornhook\n KEY_uhorntilde\nC type: GDK_KEY_uhorntilde\n KEY_umacron\nC type: GDK_KEY_umacron\n KEY_underbar\nC type: GDK_KEY_underbar\n KEY_underscore\nC type: GDK_KEY_underscore\n KEY_union\nC type: GDK_KEY_union\n KEY_uogonek\nC type: GDK_KEY_uogonek\n KEY_uparrow\nC type: GDK_KEY_uparrow\n KEY_upcaret\nC type: GDK_KEY_upcaret\n KEY_upleftcorner\nC type: GDK_KEY_upleftcorner\n KEY_uprightcorner\nC type: GDK_KEY_uprightcorner\n KEY_upshoe\nC type: GDK_KEY_upshoe\n KEY_upstile\nC type: GDK_KEY_upstile\n KEY_uptack\nC type: GDK_KEY_uptack\n KEY_uring\nC type: GDK_KEY_uring\n KEY_utilde\nC type: GDK_KEY_utilde\n KEY_v\nC type: GDK_KEY_v\n KEY_variation\nC type: GDK_KEY_variation\n KEY_vertbar\nC type: GDK_KEY_vertbar\n KEY_vertconnector\nC type: GDK_KEY_vertconnector\n KEY_voicedsound\nC type: GDK_KEY_voicedsound\n KEY_vt\nC type: GDK_KEY_vt\n KEY_w\nC type: GDK_KEY_w\n KEY_wacute\nC type: GDK_KEY_wacute\n KEY_wcircumflex\nC type: GDK_KEY_wcircumflex\n KEY_wdiaeresis\nC type: GDK_KEY_wdiaeresis\n KEY_wgrave\nC type: GDK_KEY_wgrave\n KEY_x\nC type: GDK_KEY_x\n KEY_xabovedot\nC type: GDK_KEY_xabovedot\n KEY_y\nC type: GDK_KEY_y\n KEY_yacute\nC type: GDK_KEY_yacute\n KEY_ybelowdot\nC type: GDK_KEY_ybelowdot\n KEY_ycircumflex\nC type: GDK_KEY_ycircumflex\n KEY_ydiaeresis\nC type: GDK_KEY_ydiaeresis\n KEY_yen\nC type: GDK_KEY_yen\n KEY_ygrave\nC type: GDK_KEY_ygrave\n KEY_yhook\nC type: GDK_KEY_yhook\n KEY_ytilde\nC type: GDK_KEY_ytilde\n KEY_z\nC type: GDK_KEY_z\n KEY_zabovedot\nC type: GDK_KEY_zabovedot\n KEY_zacute\nC type: GDK_KEY_zacute\n KEY_zcaron\nC type: GDK_KEY_zcaron\n KEY_zerosubscript\nC type: GDK_KEY_zerosubscript\n KEY_zerosuperior\nC type: GDK_KEY_zerosuperior\n KEY_zstroke\nC type: GDK_KEY_zstroke\n MAX_TIMECOORD_AXES\nC type: GDK_MAX_TIMECOORD_AXES\n PARENT_RELATIVE\nA special value, indicating that the background for a window should be inherited from the parent window.\nC type: GDK_PARENT_RELATIVE\n PRIORITY_REDRAW\nThis is the priority that the idle handler processing window updates is given in the [GLib Main Loop][glib-The-Main-Event-Loop].\nC type: GDK_PRIORITY_REDRAW\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gdkpixbuf/constants/",
	"title": "constants",
	"tags": [],
	"description": "",
	"content": "PIXBUF_FEATURES_H\nC type: GDK_PIXBUF_FEATURES_H\n PIXBUF_MAJOR\nMajor version of gdk-pixbuf library, that is the \u0026ldquo;0\u0026rdquo; in \u0026ldquo;0.8.2\u0026rdquo; for example.\nC type: GDK_PIXBUF_MAJOR\n PIXBUF_MICRO\nMicro version of gdk-pixbuf library, that is the \u0026ldquo;2\u0026rdquo; in \u0026ldquo;0.8.2\u0026rdquo; for example.\nC type: GDK_PIXBUF_MICRO\n PIXBUF_MINOR\nMinor version of gdk-pixbuf library, that is the \u0026ldquo;8\u0026rdquo; in \u0026ldquo;0.8.2\u0026rdquo; for example.\nC type: GDK_PIXBUF_MINOR\n PIXBUF_VERSION\nContains the full version of the gdk-pixbuf header as a string. This is the version being compiled against; contrast with #gdk_pixbuf_version.\nC type: GDK_PIXBUF_VERSION\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gio/constants/",
	"title": "constants",
	"tags": [],
	"description": "",
	"content": "DESKTOP_APP_INFO_LOOKUP_EXTENSION_POINT_NAME\nExtension point for default handler to URI association. See [Extending GIO][extending-gio].\nC type: G_DESKTOP_APP_INFO_LOOKUP_EXTENSION_POINT_NAME\n FILE_ATTRIBUTE_ACCESS_CAN_DELETE\nA key in the \u0026ldquo;access\u0026rdquo; namespace for checking deletion privileges. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN. This attribute will be %TRUE if the user is able to delete the file.\nC type: G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE\n FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE\nA key in the \u0026ldquo;access\u0026rdquo; namespace for getting execution privileges. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN. This attribute will be %TRUE if the user is able to execute the file.\nC type: G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE\n FILE_ATTRIBUTE_ACCESS_CAN_READ\nA key in the \u0026ldquo;access\u0026rdquo; namespace for getting read privileges. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN. This attribute will be %TRUE if the user is able to read the file.\nC type: G_FILE_ATTRIBUTE_ACCESS_CAN_READ\n FILE_ATTRIBUTE_ACCESS_CAN_RENAME\nA key in the \u0026ldquo;access\u0026rdquo; namespace for checking renaming privileges. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN. This attribute will be %TRUE if the user is able to rename the file.\nC type: G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME\n FILE_ATTRIBUTE_ACCESS_CAN_TRASH\nA key in the \u0026ldquo;access\u0026rdquo; namespace for checking trashing privileges. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN. This attribute will be %TRUE if the user is able to move the file to the trash.\nC type: G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH\n FILE_ATTRIBUTE_ACCESS_CAN_WRITE\nA key in the \u0026ldquo;access\u0026rdquo; namespace for getting write privileges. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN. This attribute will be %TRUE if the user is able to write to the file.\nC type: G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE\n FILE_ATTRIBUTE_DOS_IS_ARCHIVE\nA key in the \u0026ldquo;dos\u0026rdquo; namespace for checking if the file\u0026rsquo;s archive flag is set. This attribute is %TRUE if the archive flag is set. This attribute is only available for DOS file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE\n FILE_ATTRIBUTE_DOS_IS_SYSTEM\nA key in the \u0026ldquo;dos\u0026rdquo; namespace for checking if the file\u0026rsquo;s backup flag is set. This attribute is %TRUE if the backup flag is set. This attribute is only available for DOS file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_DOS_IS_SYSTEM\n FILE_ATTRIBUTE_ETAG_VALUE\nA key in the \u0026ldquo;etag\u0026rdquo; namespace for getting the value of the file\u0026rsquo;s entity tag. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_ETAG_VALUE\n FILE_ATTRIBUTE_FILESYSTEM_FREE\nA key in the \u0026ldquo;filesystem\u0026rdquo; namespace for getting the number of bytes of free space left on the file system. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT64.\nC type: G_FILE_ATTRIBUTE_FILESYSTEM_FREE\n FILE_ATTRIBUTE_FILESYSTEM_READONLY\nA key in the \u0026ldquo;filesystem\u0026rdquo; namespace for checking if the file system is read only. Is set to %TRUE if the file system is read only. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_FILESYSTEM_READONLY\n FILE_ATTRIBUTE_FILESYSTEM_SIZE\nA key in the \u0026ldquo;filesystem\u0026rdquo; namespace for getting the total size (in bytes) of the file system, used in g_file_query_filesystem_info(). Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT64.\nC type: G_FILE_ATTRIBUTE_FILESYSTEM_SIZE\n FILE_ATTRIBUTE_FILESYSTEM_TYPE\nA key in the \u0026ldquo;filesystem\u0026rdquo; namespace for getting the file system\u0026rsquo;s type. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_FILESYSTEM_TYPE\n FILE_ATTRIBUTE_FILESYSTEM_USED\nA key in the \u0026ldquo;filesystem\u0026rdquo; namespace for getting the number of bytes of used on the file system. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT64.\nC type: G_FILE_ATTRIBUTE_FILESYSTEM_USED\nsince 2.32\n FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW\nA key in the \u0026ldquo;filesystem\u0026rdquo; namespace for hinting a file manager application whether it should preview (e.g. thumbnail) files on the file system. The value for this key contain a #GFilesystemPreviewType.\nC type: G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW\n FILE_ATTRIBUTE_GVFS_BACKEND\nA key in the \u0026ldquo;gvfs\u0026rdquo; namespace that gets the name of the current GVFS backend in use. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_GVFS_BACKEND\n FILE_ATTRIBUTE_ID_FILE\nA key in the \u0026ldquo;id\u0026rdquo; namespace for getting a file identifier. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING. An example use would be during listing files, to avoid recursive directory scanning.\nC type: G_FILE_ATTRIBUTE_ID_FILE\n FILE_ATTRIBUTE_ID_FILESYSTEM\nA key in the \u0026ldquo;id\u0026rdquo; namespace for getting the file system identifier. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING. An example use would be during drag and drop to see if the source and target are on the same filesystem (default to move) or not (default to copy).\nC type: G_FILE_ATTRIBUTE_ID_FILESYSTEM\n FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) can be ejected. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT\n FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) is mountable. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT\n FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) can be polled. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL\nsince 2.22\n FILE_ATTRIBUTE_MOUNTABLE_CAN_START\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) can be started. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START\nsince 2.22\n FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) can be started degraded. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED\nsince 2.22\n FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) can be stopped. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP\nsince 2.22\n FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) is unmountable. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT\n FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for getting the HAL UDI for the mountable file. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI\n FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) is automatically polled for media. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC\nsince 2.22\n FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for getting the #GDriveStartStopType. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE\nsince 2.22\n FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for getting the unix device. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE\n FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE\nA key in the \u0026ldquo;mountable\u0026rdquo; namespace for getting the unix device file. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE\nsince 2.22\n FILE_ATTRIBUTE_OWNER_GROUP\nA key in the \u0026ldquo;owner\u0026rdquo; namespace for getting the file owner\u0026rsquo;s group. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_OWNER_GROUP\n FILE_ATTRIBUTE_OWNER_USER\nA key in the \u0026ldquo;owner\u0026rdquo; namespace for getting the user name of the file\u0026rsquo;s owner. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_OWNER_USER\n FILE_ATTRIBUTE_OWNER_USER_REAL\nA key in the \u0026ldquo;owner\u0026rdquo; namespace for getting the real name of the user that owns the file. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_OWNER_USER_REAL\n FILE_ATTRIBUTE_PREVIEW_ICON\nA key in the \u0026ldquo;preview\u0026rdquo; namespace for getting a #GIcon that can be used to get preview of the file. For example, it may be a low resolution thumbnail without metadata. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_OBJECT. The value for this key should contain a #GIcon.\nC type: G_FILE_ATTRIBUTE_PREVIEW_ICON\nsince 2.20\n FILE_ATTRIBUTE_RECENT_MODIFIED\nA key in the \u0026ldquo;recent\u0026rdquo; namespace for getting time, when the metadata for the file in recent:/// was last changed. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_INT64.\nC type: G_FILE_ATTRIBUTE_RECENT_MODIFIED\nsince 2.52\n FILE_ATTRIBUTE_SELINUX_CONTEXT\nA key in the \u0026ldquo;selinux\u0026rdquo; namespace for getting the file\u0026rsquo;s SELinux context. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING. Note that this attribute is only available if GLib has been built with SELinux support.\nC type: G_FILE_ATTRIBUTE_SELINUX_CONTEXT\n FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the amount of disk space that is consumed by the file (in bytes). This will generally be larger than the file size (due to block size overhead) but can occasionally be smaller (for example, for sparse files). Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT64.\nC type: G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE\nsince 2.20\n FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the content type of the file. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING. The value for this key should contain a valid content type.\nC type: G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE\n FILE_ATTRIBUTE_STANDARD_COPY_NAME\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the copy name of the file. The copy name is an optional version of the name. If available it\u0026rsquo;s always in UTF8, and corresponds directly to the original filename (only transcoded to UTF8). This is useful if you want to copy the file to another filesystem that might have a different encoding. If the filename is not a valid string in the encoding selected for the filesystem it is in then the copy name will not be set.\nCorresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_STANDARD_COPY_NAME\n FILE_ATTRIBUTE_STANDARD_DESCRIPTION\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the description of the file. The description is a utf8 string that describes the file, generally containing the filename, but can also contain furter information. Example descriptions could be \u0026ldquo;filename (on hostname)\u0026rdquo; for a remote file or \u0026ldquo;filename (in trash)\u0026rdquo; for a file in the trash. This is useful for instance as the window title when displaying a directory or for a bookmarks menu.\nCorresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION\n FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the display name of the file. A display name is guaranteed to be in UTF8 and can thus be displayed in the UI. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME\n FILE_ATTRIBUTE_STANDARD_EDIT_NAME\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for edit name of the file. An edit name is similar to the display name, but it is meant to be used when you want to rename the file in the UI. The display name might contain information you don\u0026rsquo;t want in the new filename (such as \u0026ldquo;(invalid unicode)\u0026rdquo; if the filename was in an invalid encoding).\nCorresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME\n FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the fast content type. The fast content type isn\u0026rsquo;t as reliable as the regular one, as it only uses the filename to guess it, but it is faster to calculate than the regular content type. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE\n FILE_ATTRIBUTE_STANDARD_ICON\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the icon for the file. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_OBJECT. The value for this key should contain a #GIcon.\nC type: G_FILE_ATTRIBUTE_STANDARD_ICON\n FILE_ATTRIBUTE_STANDARD_IS_BACKUP\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for checking if a file is a backup file. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP\n FILE_ATTRIBUTE_STANDARD_IS_HIDDEN\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for checking if a file is hidden. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN\n FILE_ATTRIBUTE_STANDARD_IS_SYMLINK\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for checking if the file is a symlink. Typically the actual type is something else, if we followed the symlink to get the type. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK\n FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for checking if a file is virtual. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL\n FILE_ATTRIBUTE_STANDARD_IS_VOLATILE\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for checking if a file is volatile. This is meant for opaque, non-POSIX-like backends to indicate that the URI is not persistent. Applications should look at #G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET for the persistent URI.\nCorresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE\nsince 2.46\n FILE_ATTRIBUTE_STANDARD_NAME\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the name of the file. The name is the on-disk filename which may not be in any known encoding, and can thus not be generally displayed as is. Use #G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME if you need to display the name in a user interface. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BYTE_STRING.\nC type: G_FILE_ATTRIBUTE_STANDARD_NAME\n FILE_ATTRIBUTE_STANDARD_SIZE\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the file\u0026rsquo;s size (in bytes). Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT64.\nC type: G_FILE_ATTRIBUTE_STANDARD_SIZE\n FILE_ATTRIBUTE_STANDARD_SORT_ORDER\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for setting the sort order of a file. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_INT32. An example use would be in file managers, which would use this key to set the order files are displayed. Files with smaller sort order should be sorted first, and files without sort order as if sort order was zero.\nC type: G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER\n FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the symbolic icon for the file. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_OBJECT. The value for this key should contain a #GIcon.\nC type: G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON\nsince 2.34\n FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the symlink target, if the file is a symlink. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BYTE_STRING.\nC type: G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET\n FILE_ATTRIBUTE_STANDARD_TARGET_URI\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for getting the target URI for the file, in the case of %G_FILE_TYPE_SHORTCUT or %G_FILE_TYPE_MOUNTABLE files. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_STANDARD_TARGET_URI\n FILE_ATTRIBUTE_STANDARD_TYPE\nA key in the \u0026ldquo;standard\u0026rdquo; namespace for storing file types. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32. The value for this key should contain a #GFileType.\nC type: G_FILE_ATTRIBUTE_STANDARD_TYPE\n FILE_ATTRIBUTE_THUMBNAILING_FAILED\nA key in the \u0026ldquo;thumbnail\u0026rdquo; namespace for checking if thumbnailing failed. This attribute is %TRUE if thumbnailing failed. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_THUMBNAILING_FAILED\n FILE_ATTRIBUTE_THUMBNAIL_IS_VALID\nA key in the \u0026ldquo;thumbnail\u0026rdquo; namespace for checking whether the thumbnail is outdated. This attribute is %TRUE if the thumbnail is up-to-date with the file it represents, and %FALSE if the file has been modified since the thumbnail was generated.\nIf %G_FILE_ATTRIBUTE_THUMBNAILING_FAILED is %TRUE and this attribute is %FALSE, it indicates that thumbnailing may be attempted again and may succeed.\nCorresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID\nsince 2.40\n FILE_ATTRIBUTE_THUMBNAIL_PATH\nA key in the \u0026ldquo;thumbnail\u0026rdquo; namespace for getting the path to the thumbnail image. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BYTE_STRING.\nC type: G_FILE_ATTRIBUTE_THUMBNAIL_PATH\n FILE_ATTRIBUTE_TIME_ACCESS\nA key in the \u0026ldquo;time\u0026rdquo; namespace for getting the time the file was last accessed. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT64, and contains the time since the file was last accessed, in seconds since the UNIX epoch.\nC type: G_FILE_ATTRIBUTE_TIME_ACCESS\n FILE_ATTRIBUTE_TIME_ACCESS_USEC\nA key in the \u0026ldquo;time\u0026rdquo; namespace for getting the microseconds of the time the file was last accessed. This should be used in conjunction with #G_FILE_ATTRIBUTE_TIME_ACCESS. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_TIME_ACCESS_USEC\n FILE_ATTRIBUTE_TIME_CHANGED\nA key in the \u0026ldquo;time\u0026rdquo; namespace for getting the time the file was last changed. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT64, and contains the time since the file was last changed, in seconds since the UNIX epoch.\nThis corresponds to the traditional UNIX ctime.\nC type: G_FILE_ATTRIBUTE_TIME_CHANGED\n FILE_ATTRIBUTE_TIME_CHANGED_USEC\nA key in the \u0026ldquo;time\u0026rdquo; namespace for getting the microseconds of the time the file was last changed. This should be used in conjunction with #G_FILE_ATTRIBUTE_TIME_CHANGED. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_TIME_CHANGED_USEC\n FILE_ATTRIBUTE_TIME_CREATED\nA key in the \u0026ldquo;time\u0026rdquo; namespace for getting the time the file was created. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT64, and contains the time since the file was created, in seconds since the UNIX epoch.\nThis corresponds to the NTFS ctime.\nC type: G_FILE_ATTRIBUTE_TIME_CREATED\n FILE_ATTRIBUTE_TIME_CREATED_USEC\nA key in the \u0026ldquo;time\u0026rdquo; namespace for getting the microseconds of the time the file was created. This should be used in conjunction with #G_FILE_ATTRIBUTE_TIME_CREATED. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_TIME_CREATED_USEC\n FILE_ATTRIBUTE_TIME_MODIFIED\nA key in the \u0026ldquo;time\u0026rdquo; namespace for getting the time the file was last modified. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT64, and contains the time since the file was modified, in seconds since the UNIX epoch.\nC type: G_FILE_ATTRIBUTE_TIME_MODIFIED\n FILE_ATTRIBUTE_TIME_MODIFIED_USEC\nA key in the \u0026ldquo;time\u0026rdquo; namespace for getting the microseconds of the time the file was last modified. This should be used in conjunction with #G_FILE_ATTRIBUTE_TIME_MODIFIED. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC\n FILE_ATTRIBUTE_TRASH_DELETION_DATE\nA key in the \u0026ldquo;trash\u0026rdquo; namespace. When requested against items in trash:///, will return the date and time when the file was trashed. The format of the returned string is YYYY-MM-DDThh:mm:ss. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_STRING.\nC type: G_FILE_ATTRIBUTE_TRASH_DELETION_DATE\nsince 2.24\n FILE_ATTRIBUTE_TRASH_ITEM_COUNT\nA key in the \u0026ldquo;trash\u0026rdquo; namespace. When requested against trash:/// returns the number of (toplevel) items in the trash folder. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT\n FILE_ATTRIBUTE_TRASH_ORIG_PATH\nA key in the \u0026ldquo;trash\u0026rdquo; namespace. When requested against items in trash:///, will return the original path to the file before it was trashed. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BYTE_STRING.\nC type: G_FILE_ATTRIBUTE_TRASH_ORIG_PATH\nsince 2.24\n FILE_ATTRIBUTE_UNIX_BLOCKS\nA key in the \u0026ldquo;unix\u0026rdquo; namespace for getting the number of blocks allocated for the file. This attribute is only available for UNIX file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT64.\nC type: G_FILE_ATTRIBUTE_UNIX_BLOCKS\n FILE_ATTRIBUTE_UNIX_BLOCK_SIZE\nA key in the \u0026ldquo;unix\u0026rdquo; namespace for getting the block size for the file system. This attribute is only available for UNIX file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE\n FILE_ATTRIBUTE_UNIX_DEVICE\nA key in the \u0026ldquo;unix\u0026rdquo; namespace for getting the device id of the device the file is located on (see stat() documentation). This attribute is only available for UNIX file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_UNIX_DEVICE\n FILE_ATTRIBUTE_UNIX_GID\nA key in the \u0026ldquo;unix\u0026rdquo; namespace for getting the group ID for the file. This attribute is only available for UNIX file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_UNIX_GID\n FILE_ATTRIBUTE_UNIX_INODE\nA key in the \u0026ldquo;unix\u0026rdquo; namespace for getting the inode of the file. This attribute is only available for UNIX file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT64.\nC type: G_FILE_ATTRIBUTE_UNIX_INODE\n FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT\nA key in the \u0026ldquo;unix\u0026rdquo; namespace for checking if the file represents a UNIX mount point. This attribute is %TRUE if the file is a UNIX mount point. This attribute is only available for UNIX file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_BOOLEAN.\nC type: G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT\n FILE_ATTRIBUTE_UNIX_MODE\nA key in the \u0026ldquo;unix\u0026rdquo; namespace for getting the mode of the file (e.g. whether the file is a regular file, symlink, etc). See lstat() documentation. This attribute is only available for UNIX file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_UNIX_MODE\n FILE_ATTRIBUTE_UNIX_NLINK\nA key in the \u0026ldquo;unix\u0026rdquo; namespace for getting the number of hard links for a file. See lstat() documentation. This attribute is only available for UNIX file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_UNIX_NLINK\n FILE_ATTRIBUTE_UNIX_RDEV\nA key in the \u0026ldquo;unix\u0026rdquo; namespace for getting the device ID for the file (if it is a special file). See lstat() documentation. This attribute is only available for UNIX file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_UNIX_RDEV\n FILE_ATTRIBUTE_UNIX_UID\nA key in the \u0026ldquo;unix\u0026rdquo; namespace for getting the user ID for the file. This attribute is only available for UNIX file systems. Corresponding #GFileAttributeType is %G_FILE_ATTRIBUTE_TYPE_UINT32.\nC type: G_FILE_ATTRIBUTE_UNIX_UID\n MENU_ATTRIBUTE_ACTION\nThe menu item attribute which holds the action name of the item. Action names are namespaced with an identifier for the action group in which the action resides. For example, \u0026ldquo;win.\u0026rdquo; for window-specific actions and \u0026ldquo;app.\u0026rdquo; for application-wide actions.\nSee also g_menu_model_get_item_attribute() and g_menu_item_set_attribute().\nC type: G_MENU_ATTRIBUTE_ACTION\nsince 2.32\n MENU_ATTRIBUTE_ACTION_NAMESPACE\nThe menu item attribute that holds the namespace for all action names in menus that are linked from this item.\nC type: G_MENU_ATTRIBUTE_ACTION_NAMESPACE\nsince 2.36\n MENU_ATTRIBUTE_ICON\nThe menu item attribute which holds the icon of the item.\nThe icon is stored in the format returned by g_icon_serialize().\nThis attribute is intended only to represent \u0026lsquo;noun\u0026rsquo; icons such as favicons for a webpage, or application icons. It should not be used for \u0026lsquo;verbs\u0026rsquo; (ie: stock icons).\nC type: G_MENU_ATTRIBUTE_ICON\nsince 2.38\n MENU_ATTRIBUTE_LABEL\nThe menu item attribute which holds the label of the item.\nC type: G_MENU_ATTRIBUTE_LABEL\nsince 2.32\n MENU_ATTRIBUTE_TARGET\nThe menu item attribute which holds the target with which the item\u0026rsquo;s action will be activated.\nSee also g_menu_item_set_action_and_target()\nC type: G_MENU_ATTRIBUTE_TARGET\nsince 2.32\n MENU_LINK_SECTION\nThe name of the link that associates a menu item with a section. The linked menu will usually be shown in place of the menu item, using the item\u0026rsquo;s label as a header.\nSee also g_menu_item_set_link().\nC type: G_MENU_LINK_SECTION\nsince 2.32\n MENU_LINK_SUBMENU\nThe name of the link that associates a menu item with a submenu.\nSee also g_menu_item_set_link().\nC type: G_MENU_LINK_SUBMENU\nsince 2.32\n NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME\nC type: G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME\n NETWORK_MONITOR_EXTENSION_POINT_NAME\nExtension point for network status monitoring functionality. See [Extending GIO][extending-gio].\nC type: G_NETWORK_MONITOR_EXTENSION_POINT_NAME\nsince 2.30\n PROXY_EXTENSION_POINT_NAME\nExtension point for proxy functionality. See [Extending GIO][extending-gio].\nC type: G_PROXY_EXTENSION_POINT_NAME\nsince 2.26\n PROXY_RESOLVER_EXTENSION_POINT_NAME\nExtension point for proxy resolving functionality. See [Extending GIO][extending-gio].\nC type: G_PROXY_RESOLVER_EXTENSION_POINT_NAME\n TLS_BACKEND_EXTENSION_POINT_NAME\nExtension point for TLS functionality via #GTlsBackend. See [Extending GIO][extending-gio].\nC type: G_TLS_BACKEND_EXTENSION_POINT_NAME\n TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT\nThe purpose used to verify the client certificate in a TLS connection. Used by TLS servers.\nC type: G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT\n TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER\nThe purpose used to verify the server certificate in a TLS connection. This is the most common purpose in use. Used by TLS clients.\nC type: G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER\n VFS_EXTENSION_POINT_NAME\nExtension point for #GVfs functionality. See [Extending GIO][extending-gio].\nC type: G_VFS_EXTENSION_POINT_NAME\n VOLUME_IDENTIFIER_KIND_CLASS\nThe string used to obtain the volume class with g_volume_get_identifier().\nKnown volume classes include device and network. Other classes may be added in the future.\nThis is intended to be used by applications to classify #GVolume instances into different sections - for example a file manager or file chooser can use this information to show network volumes under a \u0026ldquo;Network\u0026rdquo; heading and device volumes under a \u0026ldquo;Devices\u0026rdquo; heading.\nC type: G_VOLUME_IDENTIFIER_KIND_CLASS\n VOLUME_IDENTIFIER_KIND_HAL_UDI\nThe string used to obtain a Hal UDI with g_volume_get_identifier().\nC type: G_VOLUME_IDENTIFIER_KIND_HAL_UDI\n VOLUME_IDENTIFIER_KIND_LABEL\nThe string used to obtain a filesystem label with g_volume_get_identifier().\nC type: G_VOLUME_IDENTIFIER_KIND_LABEL\n VOLUME_IDENTIFIER_KIND_NFS_MOUNT\nThe string used to obtain a NFS mount with g_volume_get_identifier().\nC type: G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT\n VOLUME_IDENTIFIER_KIND_UNIX_DEVICE\nThe string used to obtain a Unix device path with g_volume_get_identifier().\nC type: G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE\n VOLUME_IDENTIFIER_KIND_UUID\nThe string used to obtain a UUID with g_volume_get_identifier().\nC type: G_VOLUME_IDENTIFIER_KIND_UUID\n VOLUME_MONITOR_EXTENSION_POINT_NAME\nExtension point for volume monitor functionality. See [Extending GIO][extending-gio].\nC type: G_VOLUME_MONITOR_EXTENSION_POINT_NAME\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/glib/constants/",
	"title": "constants",
	"tags": [],
	"description": "",
	"content": "ANALYZER_ANALYZING\nC type: G_ANALYZER_ANALYZING\n ASCII_DTOSTR_BUF_SIZE\nA good size for a buffer to be passed into g_ascii_dtostr(). It is guaranteed to be enough for all output of that function on systems with 64bit IEEE-compatible doubles.\nThe typical usage would be something like: |[char buf[G_ASCII_DTOSTR_BUF_SIZE];\nfprintf (out, \u0026ldquo;value=%s\\n\u0026rdquo;, g_ascii_dtostr (buf, sizeof (buf), value)); ]|\nC type: G_ASCII_DTOSTR_BUF_SIZE\n BIG_ENDIAN\nSpecifies one of the possible types of byte order. See #G_BYTE_ORDER.\nC type: G_BIG_ENDIAN\n CSET_A_2_Z\nThe set of uppercase ASCII alphabet characters. Used for specifying valid identifier characters in #GScannerConfig.\nC type: G_CSET_A_2_Z\n CSET_DIGITS\nThe set of ASCII digits. Used for specifying valid identifier characters in #GScannerConfig.\nC type: G_CSET_DIGITS\n CSET_a_2_z\nThe set of lowercase ASCII alphabet characters. Used for specifying valid identifier characters in #GScannerConfig.\nC type: G_CSET_a_2_z\n DATALIST_FLAGS_MASK\nA bitmask that restricts the possible flags passed to g_datalist_set_flags(). Passing a flags value where flags \u0026amp; ~G_DATALIST_FLAGS_MASK != 0 is an error.\nC type: G_DATALIST_FLAGS_MASK\n DATE_BAD_DAY\nRepresents an invalid #GDateDay.\nC type: G_DATE_BAD_DAY\n DATE_BAD_JULIAN\nRepresents an invalid Julian day number.\nC type: G_DATE_BAD_JULIAN\n DATE_BAD_YEAR\nRepresents an invalid year.\nC type: G_DATE_BAD_YEAR\n DIR_SEPARATOR\nThe directory separator character. This is \u0026lsquo;/\u0026rsquo; on UNIX machines and \u0026lsquo;\\\u0026rsquo; under Windows.\nC type: G_DIR_SEPARATOR\n DIR_SEPARATOR_S\nThe directory separator as a string. This is \u0026ldquo;/\u0026rdquo; on UNIX machines and \u0026ldquo;\\\u0026rdquo; under Windows.\nC type: G_DIR_SEPARATOR_S\n E\nThe base of natural logarithms.\nC type: G_E\n GINT16_FORMAT\nThis is the platform dependent conversion specifier for scanning and printing values of type #gint16. It is a string literal, but doesn\u0026rsquo;t include the percent-sign, such that you can add precision and length modifiers between percent-sign and conversion specifier.\n|[gint16 in; gint32 out; sscanf (\u0026ldquo;42\u0026rdquo;, \u0026ldquo;%\u0026rdquo; G_GINT16_FORMAT, \u0026amp;in) out = in * 1000; g_print (\u0026ldquo;%\u0026rdquo; G_GINT32_FORMAT, out); ]|\nC type: G_GINT16_FORMAT\n GINT16_MODIFIER\nThe platform dependent length modifier for conversion specifiers for scanning and printing values of type #gint16 or #guint16. It is a string literal, but doesn\u0026rsquo;t include the percent-sign, such that you can add precision and length modifiers between percent-sign and conversion specifier and append a conversion specifier.\nThe following example prints \u0026ldquo;0x7b\u0026rdquo;; |[gint16 value = 123; g_print (\u0026ldquo;%#\u0026rdquo; G_GINT16_MODIFIER \u0026ldquo;x\u0026rdquo;, value); ]|\nC type: G_GINT16_MODIFIER\nsince 2.4\n GINT32_FORMAT\nThis is the platform dependent conversion specifier for scanning and printing values of type #gint32. See also #G_GINT16_FORMAT.\nC type: G_GINT32_FORMAT\n GINT32_MODIFIER\nThe platform dependent length modifier for conversion specifiers for scanning and printing values of type #gint32 or #guint32. It is a string literal. See also #G_GINT16_MODIFIER.\nC type: G_GINT32_MODIFIER\nsince 2.4\n GINT64_FORMAT\nThis is the platform dependent conversion specifier for scanning and printing values of type #gint64. See also #G_GINT16_FORMAT.\nSome platforms do not support scanning and printing 64-bit integers, even though the types are supported. On such platforms %G_GINT64_FORMAT is not defined. Note that scanf() may not support 64-bit integers, even if %G_GINT64_FORMAT is defined. Due to its weak error handling, scanf() is not recommended for parsing anyway; consider using g_ascii_strtoull() instead.\nC type: G_GINT64_FORMAT\n GINT64_MODIFIER\nThe platform dependent length modifier for conversion specifiers for scanning and printing values of type #gint64 or #guint64. It is a string literal.\nSome platforms do not support printing 64-bit integers, even though the types are supported. On such platforms %G_GINT64_MODIFIER is not defined.\nC type: G_GINT64_MODIFIER\nsince 2.4\n GINTPTR_FORMAT\nThis is the platform dependent conversion specifier for scanning and printing values of type #gintptr.\nC type: G_GINTPTR_FORMAT\nsince 2.22\n GINTPTR_MODIFIER\nThe platform dependent length modifier for conversion specifiers for scanning and printing values of type #gintptr or #guintptr. It is a string literal.\nC type: G_GINTPTR_MODIFIER\nsince 2.22\n GNUC_FUNCTION\nExpands to \u0026ldquo;\u0026rdquo; on all modern compilers, and to FUNCTION on gcc version 2.x. Don\u0026rsquo;t use it.\nC type: G_GNUC_FUNCTION\n GNUC_PRETTY_FUNCTION\nExpands to \u0026ldquo;\u0026rdquo; on all modern compilers, and to PRETTY_FUNCTION on gcc version 2.x. Don\u0026rsquo;t use it.\nC type: G_GNUC_PRETTY_FUNCTION\n GSIZE_FORMAT\nThis is the platform dependent conversion specifier for scanning and printing values of type #gsize. See also #G_GINT16_FORMAT.\nC type: G_GSIZE_FORMAT\nsince 2.6\n GSIZE_MODIFIER\nThe platform dependent length modifier for conversion specifiers for scanning and printing values of type #gsize. It is a string literal.\nC type: G_GSIZE_MODIFIER\nsince 2.6\n GSSIZE_FORMAT\nThis is the platform dependent conversion specifier for scanning and printing values of type #gssize. See also #G_GINT16_FORMAT.\nC type: G_GSSIZE_FORMAT\nsince 2.6\n GSSIZE_MODIFIER\nThe platform dependent length modifier for conversion specifiers for scanning and printing values of type #gssize. It is a string literal.\nC type: G_GSSIZE_MODIFIER\nsince 2.6\n GUINT16_FORMAT\nThis is the platform dependent conversion specifier for scanning and printing values of type #guint16. See also #G_GINT16_FORMAT\nC type: G_GUINT16_FORMAT\n GUINT32_FORMAT\nThis is the platform dependent conversion specifier for scanning and printing values of type #guint32. See also #G_GINT16_FORMAT.\nC type: G_GUINT32_FORMAT\n GUINT64_FORMAT\nThis is the platform dependent conversion specifier for scanning and printing values of type #guint64. See also #G_GINT16_FORMAT.\nSome platforms do not support scanning and printing 64-bit integers, even though the types are supported. On such platforms %G_GUINT64_FORMAT is not defined. Note that scanf() may not support 64-bit integers, even if %G_GINT64_FORMAT is defined. Due to its weak error handling, scanf() is not recommended for parsing anyway; consider using g_ascii_strtoull() instead.\nC type: G_GUINT64_FORMAT\n GUINTPTR_FORMAT\nThis is the platform dependent conversion specifier for scanning and printing values of type #guintptr.\nC type: G_GUINTPTR_FORMAT\nsince 2.22\n HAVE_GINT64\nC type: G_HAVE_GINT64\n HAVE_GNUC_VARARGS\nC type: G_HAVE_GNUC_VARARGS\n HAVE_GNUC_VISIBILITY\nDefined to 1 if gcc-style visibility handling is supported.\nC type: G_HAVE_GNUC_VISIBILITY\n HAVE_GROWING_STACK\nC type: G_HAVE_GROWING_STACK\n HAVE_ISO_VARARGS\nC type: G_HAVE_ISO_VARARGS\n HOOK_FLAG_USER_SHIFT\nThe position of the first bit which is not reserved for internal use be the #GHook implementation, i.e. 1 \u0026lt;\u0026lt; G_HOOK_FLAG_USER_SHIFT is the first bit which can be used for application-defined flags.\nC type: G_HOOK_FLAG_USER_SHIFT\n IEEE754_DOUBLE_BIAS\nThe bias by which exponents in double-precision floats are offset.\nC type: G_IEEE754_DOUBLE_BIAS\n IEEE754_FLOAT_BIAS\nThe bias by which exponents in single-precision floats are offset.\nC type: G_IEEE754_FLOAT_BIAS\n KEY_FILE_DESKTOP_GROUP\nThe name of the main group of a desktop entry file, as defined in the Desktop Entry Specification. Consult the specification for more details about the meanings of the keys below.\nC type: G_KEY_FILE_DESKTOP_GROUP\nsince 2.14\n KEY_FILE_DESKTOP_KEY_ACTIONS\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a string list giving the available application actions.\nC type: G_KEY_FILE_DESKTOP_KEY_ACTIONS\nsince 2.38\n KEY_FILE_DESKTOP_KEY_CATEGORIES\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a list of strings giving the categories in which the desktop entry should be shown in a menu.\nC type: G_KEY_FILE_DESKTOP_KEY_CATEGORIES\nsince 2.14\n KEY_FILE_DESKTOP_KEY_COMMENT\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a localized string giving the tooltip for the desktop entry.\nC type: G_KEY_FILE_DESKTOP_KEY_COMMENT\nsince 2.14\n KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a boolean set to true if the application is D-Bus activatable.\nC type: G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE\nsince 2.38\n KEY_FILE_DESKTOP_KEY_EXEC\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a string giving the command line to execute. It is only valid for desktop entries with the Application type.\nC type: G_KEY_FILE_DESKTOP_KEY_EXEC\nsince 2.14\n KEY_FILE_DESKTOP_KEY_FULLNAME\nC type: G_KEY_FILE_DESKTOP_KEY_FULLNAME\n KEY_FILE_DESKTOP_KEY_GENERIC_NAME\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a localized string giving the generic name of the desktop entry.\nC type: G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME\nsince 2.14\n KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN\nC type: G_KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN\n KEY_FILE_DESKTOP_KEY_HIDDEN\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a boolean stating whether the desktop entry has been deleted by the user.\nC type: G_KEY_FILE_DESKTOP_KEY_HIDDEN\nsince 2.14\n KEY_FILE_DESKTOP_KEY_ICON\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a localized string giving the name of the icon to be displayed for the desktop entry.\nC type: G_KEY_FILE_DESKTOP_KEY_ICON\nsince 2.14\n KEY_FILE_DESKTOP_KEY_KEYWORDS\nC type: G_KEY_FILE_DESKTOP_KEY_KEYWORDS\n KEY_FILE_DESKTOP_KEY_MIME_TYPE\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a list of strings giving the MIME types supported by this desktop entry.\nC type: G_KEY_FILE_DESKTOP_KEY_MIME_TYPE\nsince 2.14\n KEY_FILE_DESKTOP_KEY_NAME\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a localized string giving the specific name of the desktop entry.\nC type: G_KEY_FILE_DESKTOP_KEY_NAME\nsince 2.14\n KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a list of strings identifying the environments that should not display the desktop entry.\nC type: G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN\nsince 2.14\n KEY_FILE_DESKTOP_KEY_NO_DISPLAY\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a boolean stating whether the desktop entry should be shown in menus.\nC type: G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY\nsince 2.14\n KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a list of strings identifying the environments that should display the desktop entry.\nC type: G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN\nsince 2.14\n KEY_FILE_DESKTOP_KEY_PATH\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a string containing the working directory to run the program in. It is only valid for desktop entries with the Application type.\nC type: G_KEY_FILE_DESKTOP_KEY_PATH\nsince 2.14\n KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a boolean stating whether the application supports the Startup Notification Protocol Specification.\nC type: G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY\nsince 2.14\n KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is string identifying the WM class or name hint of a window that the application will create, which can be used to emulate Startup Notification with older applications.\nC type: G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS\nsince 2.14\n KEY_FILE_DESKTOP_KEY_TERMINAL\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a boolean stating whether the program should be run in a terminal window. It is only valid for desktop entries with the Application type.\nC type: G_KEY_FILE_DESKTOP_KEY_TERMINAL\nsince 2.14\n KEY_FILE_DESKTOP_KEY_TRY_EXEC\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a string giving the file name of a binary on disk used to determine if the program is actually installed. It is only valid for desktop entries with the Application type.\nC type: G_KEY_FILE_DESKTOP_KEY_TRY_EXEC\nsince 2.14\n KEY_FILE_DESKTOP_KEY_TYPE\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a string giving the type of the desktop entry. Usually #G_KEY_FILE_DESKTOP_TYPE_APPLICATION, #G_KEY_FILE_DESKTOP_TYPE_LINK, or #G_KEY_FILE_DESKTOP_TYPE_DIRECTORY.\nC type: G_KEY_FILE_DESKTOP_KEY_TYPE\nsince 2.14\n KEY_FILE_DESKTOP_KEY_URL\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a string giving the URL to access. It is only valid for desktop entries with the Link type.\nC type: G_KEY_FILE_DESKTOP_KEY_URL\nsince 2.14\n KEY_FILE_DESKTOP_KEY_VERSION\nA key under #G_KEY_FILE_DESKTOP_GROUP, whose value is a string giving the version of the Desktop Entry Specification used for the desktop entry file.\nC type: G_KEY_FILE_DESKTOP_KEY_VERSION\nsince 2.14\n KEY_FILE_DESKTOP_TYPE_APPLICATION\nThe value of the #G_KEY_FILE_DESKTOP_KEY_TYPE, key for desktop entries representing applications.\nC type: G_KEY_FILE_DESKTOP_TYPE_APPLICATION\nsince 2.14\n KEY_FILE_DESKTOP_TYPE_DIRECTORY\nThe value of the #G_KEY_FILE_DESKTOP_KEY_TYPE, key for desktop entries representing directories.\nC type: G_KEY_FILE_DESKTOP_TYPE_DIRECTORY\nsince 2.14\n KEY_FILE_DESKTOP_TYPE_LINK\nThe value of the #G_KEY_FILE_DESKTOP_KEY_TYPE, key for desktop entries representing links to documents.\nC type: G_KEY_FILE_DESKTOP_TYPE_LINK\nsince 2.14\n LITTLE_ENDIAN\nSpecifies one of the possible types of byte order. See #G_BYTE_ORDER.\nC type: G_LITTLE_ENDIAN\n LN10\nThe natural logarithm of 10.\nC type: G_LN10\n LN2\nThe natural logarithm of 2.\nC type: G_LN2\n LOG_2_BASE_10\nMultiplying the base 2 exponent by this number yields the base 10 exponent.\nC type: G_LOG_2_BASE_10\n LOG_DOMAIN\nDefines the log domain. See Log Domains.\nLibraries should define this so that any messages which they log can be differentiated from messages from other libraries and application code. But be careful not to define it in any public header files.\nLog domains must be unique, and it is recommended that they are the application or library name, optionally followed by a hyphen and a sub-domain name. For example, bloatpad or bloatpad-io.\nIf undefined, it defaults to the default %NULL (or \u0026quot;\u0026quot;) log domain; this is not advisable, as it cannot be filtered against using the G_MESSAGES_DEBUG environment variable.\nFor example, GTK+ uses this in its Makefile.am: |[ AM_CPPFLAGS = -DG_LOG_DOMAIN=\\\u0026ldquo;Gtk\\\u0026rdquo; ]|\nApplications can choose to leave it as the default %NULL (or \u0026quot;\u0026quot;) domain. However, defining the domain offers the same advantages as above.\nC type: G_LOG_DOMAIN\n LOG_FATAL_MASK\nGLib log levels that are considered fatal by default.\nThis is not used if structured logging is enabled; see [Using Structured Logging][using-structured-logging].\nC type: G_LOG_FATAL_MASK\n LOG_LEVEL_USER_SHIFT\nLog levels below 1\u0026lt;C type: G_LOG_LEVEL_USER_SHIFT\n MAJOR_VERSION\nThe major version number of the GLib library.\nLike #glib_major_version, but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: GLIB_MAJOR_VERSION\n MAXINT16\nThe maximum value which can be held in a #gint16.\nC type: G_MAXINT16\nsince 2.4\n MAXINT32\nThe maximum value which can be held in a #gint32.\nC type: G_MAXINT32\nsince 2.4\n MAXINT64\nThe maximum value which can be held in a #gint64.\nC type: G_MAXINT64\n MAXINT8\nThe maximum value which can be held in a #gint8.\nC type: G_MAXINT8\nsince 2.4\n MAXUINT16\nThe maximum value which can be held in a #guint16.\nC type: G_MAXUINT16\nsince 2.4\n MAXUINT32\nThe maximum value which can be held in a #guint32.\nC type: G_MAXUINT32\nsince 2.4\n MAXUINT64\nThe maximum value which can be held in a #guint64.\nC type: G_MAXUINT64\n MAXUINT8\nThe maximum value which can be held in a #guint8.\nC type: G_MAXUINT8\nsince 2.4\n MICRO_VERSION\nThe micro version number of the GLib library.\nLike #gtk_micro_version, but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: GLIB_MICRO_VERSION\n MININT16\nThe minimum value which can be held in a #gint16.\nC type: G_MININT16\nsince 2.4\n MININT32\nThe minimum value which can be held in a #gint32.\nC type: G_MININT32\nsince 2.4\n MININT64\nThe minimum value which can be held in a #gint64.\nC type: G_MININT64\n MININT8\nThe minimum value which can be held in a #gint8.\nC type: G_MININT8\nsince 2.4\n MINOR_VERSION\nThe minor version number of the GLib library.\nLike #gtk_minor_version, but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: GLIB_MINOR_VERSION\n MODULE_SUFFIX\nC type: G_MODULE_SUFFIX\n OPTION_REMAINING\nIf a long option in the main group has this name, it is not treated as a regular option. Instead it collects all non-option arguments which would otherwise be left in argv. The option must be of type %G_OPTION_ARG_CALLBACK, %G_OPTION_ARG_STRING_ARRAY or %G_OPTION_ARG_FILENAME_ARRAY.\nUsing #G_OPTION_REMAINING instead of simply scanning argv for leftover arguments has the advantage that GOption takes care of necessary encoding conversions for strings or filenames.\nC type: G_OPTION_REMAINING\nsince 2.6\n PDP_ENDIAN\nSpecifies one of the possible types of byte order (currently unused). See #G_BYTE_ORDER.\nC type: G_PDP_ENDIAN\n PI\nThe value of pi (ratio of circle\u0026rsquo;s circumference to its diameter).\nC type: G_PI\n PID_FORMAT\nA format specifier that can be used in printf()-style format strings when printing a #GPid.\nC type: G_PID_FORMAT\nsince 2.50\n PI_2\nPi divided by 2.\nC type: G_PI_2\n PI_4\nPi divided by 4.\nC type: G_PI_4\n POLLFD_FORMAT\nA format specifier that can be used in printf()-style format strings when printing the @fd member of a #GPollFD.\nC type: G_POLLFD_FORMAT\n PRIORITY_DEFAULT\nUse this for default priority event sources.\nIn GLib this priority is used when adding timeout functions with g_timeout_add(). In GDK this priority is used for events from the X server.\nC type: G_PRIORITY_DEFAULT\n PRIORITY_DEFAULT_IDLE\nUse this for default priority idle functions.\nIn GLib this priority is used when adding idle functions with g_idle_add().\nC type: G_PRIORITY_DEFAULT_IDLE\n PRIORITY_HIGH\nUse this for high priority event sources.\nIt is not used within GLib or GTK+.\nC type: G_PRIORITY_HIGH\n PRIORITY_HIGH_IDLE\nUse this for high priority idle functions.\nGTK+ uses #G_PRIORITY_HIGH_IDLE + 10 for resizing operations, and #G_PRIORITY_HIGH_IDLE + 20 for redrawing operations. (This is done to ensure that any pending resizes are processed before any pending redraws, so that widgets are not redrawn twice unnecessarily.)\nC type: G_PRIORITY_HIGH_IDLE\n PRIORITY_LOW\nUse this for very low priority background tasks.\nIt is not used within GLib or GTK+.\nC type: G_PRIORITY_LOW\n SEARCHPATH_SEPARATOR\nThe search path separator character. This is \u0026lsquo;:\u0026rsquo; on UNIX machines and \u0026lsquo;;\u0026rsquo; under Windows.\nC type: G_SEARCHPATH_SEPARATOR\n SEARCHPATH_SEPARATOR_S\nThe search path separator as a string. This is \u0026ldquo;:\u0026rdquo; on UNIX machines and \u0026ldquo;;\u0026rdquo; under Windows.\nC type: G_SEARCHPATH_SEPARATOR_S\n SIZEOF_LONG\nC type: GLIB_SIZEOF_LONG\n SIZEOF_SIZE_T\nC type: GLIB_SIZEOF_SIZE_T\n SIZEOF_SSIZE_T\nC type: GLIB_SIZEOF_SSIZE_T\n SIZEOF_VOID_P\nC type: GLIB_SIZEOF_VOID_P\n SOURCE_CONTINUE\nUse this macro as the return value of a #GSourceFunc to leave the #GSource in the main loop.\nC type: G_SOURCE_CONTINUE\nsince 2.32\n SOURCE_REMOVE\nUse this macro as the return value of a #GSourceFunc to remove the #GSource from the main loop.\nC type: G_SOURCE_REMOVE\nsince 2.32\n SQRT2\nThe square root of two.\nC type: G_SQRT2\n STR_DELIMITERS\nThe standard delimiters, used in g_strdelimit().\nC type: G_STR_DELIMITERS\n SYSDEF_AF_INET\nC type: GLIB_SYSDEF_AF_INET\n SYSDEF_AF_INET6\nC type: GLIB_SYSDEF_AF_INET6\n SYSDEF_AF_UNIX\nC type: GLIB_SYSDEF_AF_UNIX\n SYSDEF_MSG_DONTROUTE\nC type: GLIB_SYSDEF_MSG_DONTROUTE\n SYSDEF_MSG_OOB\nC type: GLIB_SYSDEF_MSG_OOB\n SYSDEF_MSG_PEEK\nC type: GLIB_SYSDEF_MSG_PEEK\n TIME_SPAN_DAY\nEvaluates to a time span of one day.\nC type: G_TIME_SPAN_DAY\nsince 2.26\n TIME_SPAN_HOUR\nEvaluates to a time span of one hour.\nC type: G_TIME_SPAN_HOUR\nsince 2.26\n TIME_SPAN_MILLISECOND\nEvaluates to a time span of one millisecond.\nC type: G_TIME_SPAN_MILLISECOND\nsince 2.26\n TIME_SPAN_MINUTE\nEvaluates to a time span of one minute.\nC type: G_TIME_SPAN_MINUTE\nsince 2.26\n TIME_SPAN_SECOND\nEvaluates to a time span of one second.\nC type: G_TIME_SPAN_SECOND\nsince 2.26\n UNICHAR_MAX_DECOMPOSITION_LENGTH\nThe maximum length (in codepoints) of a compatibility or canonical decomposition of a single Unicode character.\nThis is as defined by Unicode 6.1.\nC type: G_UNICHAR_MAX_DECOMPOSITION_LENGTH\nsince 2.32\n URI_RESERVED_CHARS_GENERIC_DELIMITERS\nGeneric delimiters characters as defined in RFC 3986. Includes \u0026ldquo;:/?#[]@\u0026ldquo;.\nC type: G_URI_RESERVED_CHARS_GENERIC_DELIMITERS\n URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS\nSubcomponent delimiter characters as defined in RFC 3986. Includes \u0026ldquo;!$\u0026amp;\u0026lsquo;()*+,;=\u0026ldquo;.\nC type: G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS\n USEC_PER_SEC\nNumber of microseconds in one second (1 million). This macro is provided for code readability.\nC type: G_USEC_PER_SEC\n VA_COPY_AS_ARRAY\nC type: G_VA_COPY_AS_ARRAY\n VERSION_MIN_REQUIRED\nA macro that should be defined by the user prior to including the glib.h header. The definition should be one of the predefined GLib version macros: %GLIB_VERSION_2_26, %GLIB_VERSION_2_28,\u0026hellip;\nThis macro defines the earliest version of GLib that the package is required to be able to compile against.\nIf the compiler is configured to warn about the use of deprecated functions, then using functions that were deprecated in version %GLIB_VERSION_MIN_REQUIRED or earlier will cause warnings (but using functions deprecated in later releases will not).\nC type: GLIB_VERSION_MIN_REQUIRED\nsince 2.32\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gobject/constants/",
	"title": "constants",
	"tags": [],
	"description": "",
	"content": "PARAM_MASK\nMask containing the bits of #GParamSpec.flags which are reserved for GLib.\nC type: G_PARAM_MASK\n PARAM_STATIC_STRINGS\n#GParamFlags value alias for %G_PARAM_STATIC_NAME | %G_PARAM_STATIC_NICK | %G_PARAM_STATIC_BLURB.\nSince 2.13.0\nC type: G_PARAM_STATIC_STRINGS\n PARAM_USER_SHIFT\nMinimum shift count to be used for user defined flags, to be stored in #GParamSpec.flags. The maximum allowed is 10.\nC type: G_PARAM_USER_SHIFT\n SIGNAL_FLAGS_MASK\nA mask for all #GSignalFlags bits.\nC type: G_SIGNAL_FLAGS_MASK\n SIGNAL_MATCH_MASK\nA mask for all #GSignalMatchType bits.\nC type: G_SIGNAL_MATCH_MASK\n TYPE_FLAG_RESERVED_ID_BIT\nA bit in the type number that\u0026rsquo;s supposed to be left untouched.\nC type: G_TYPE_FLAG_RESERVED_ID_BIT\n TYPE_FUNDAMENTAL_MAX\nAn integer constant that represents the number of identifiers reserved for types that are assigned at compile-time.\nC type: G_TYPE_FUNDAMENTAL_MAX\n TYPE_FUNDAMENTAL_SHIFT\nShift value used in converting numbers to type IDs.\nC type: G_TYPE_FUNDAMENTAL_SHIFT\n TYPE_RESERVED_BSE_FIRST\nFirst fundamental type number to create a new fundamental type id with G_TYPE_MAKE_FUNDAMENTAL() reserved for BSE.\nC type: G_TYPE_RESERVED_BSE_FIRST\n TYPE_RESERVED_BSE_LAST\nLast fundamental type number reserved for BSE.\nC type: G_TYPE_RESERVED_BSE_LAST\n TYPE_RESERVED_GLIB_FIRST\nFirst fundamental type number to create a new fundamental type id with G_TYPE_MAKE_FUNDAMENTAL() reserved for GLib.\nC type: G_TYPE_RESERVED_GLIB_FIRST\n TYPE_RESERVED_GLIB_LAST\nLast fundamental type number reserved for GLib.\nC type: G_TYPE_RESERVED_GLIB_LAST\n TYPE_RESERVED_USER_FIRST\nFirst available fundamental type number to create new fundamental type id with G_TYPE_MAKE_FUNDAMENTAL().\nC type: G_TYPE_RESERVED_USER_FIRST\n VALUE_NOCOPY_CONTENTS\nIf passed to G_VALUE_COLLECT(), allocated data won\u0026rsquo;t be copied but used verbatim. This does not affect ref-counted types like objects.\nC type: G_VALUE_NOCOPY_CONTENTS\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gtk/constants/",
	"title": "constants",
	"tags": [],
	"description": "",
	"content": "BINARY_AGE\nLike gtk_get_binary_age(), but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: GTK_BINARY_AGE\n INPUT_ERROR\nConstant to return from a signal handler for the #GtkSpinButton::input signal in case of conversion failure.\nC type: GTK_INPUT_ERROR\n INTERFACE_AGE\nLike gtk_get_interface_age(), but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: GTK_INTERFACE_AGE\n LEVEL_BAR_OFFSET_FULL\nThe name used for the stock full offset included by #GtkLevelBar.\nC type: GTK_LEVEL_BAR_OFFSET_FULL\nsince 3.20\n LEVEL_BAR_OFFSET_HIGH\nThe name used for the stock high offset included by #GtkLevelBar.\nC type: GTK_LEVEL_BAR_OFFSET_HIGH\nsince 3.6\n LEVEL_BAR_OFFSET_LOW\nThe name used for the stock low offset included by #GtkLevelBar.\nC type: GTK_LEVEL_BAR_OFFSET_LOW\nsince 3.6\n MAJOR_VERSION\nLike gtk_get_major_version(), but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: GTK_MAJOR_VERSION\n MAX_COMPOSE_LEN\nThe maximum length of sequences in compose tables.\nC type: GTK_MAX_COMPOSE_LEN\n MICRO_VERSION\nLike gtk_get_micro_version(), but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: GTK_MICRO_VERSION\n MINOR_VERSION\nLike gtk_get_minor_version(), but from the headers used at application compile time, rather than from the library linked against at application run time.\nC type: GTK_MINOR_VERSION\n PAPER_NAME_A3\nName for the A3 paper size.\nC type: GTK_PAPER_NAME_A3\n PAPER_NAME_A4\nName for the A4 paper size.\nC type: GTK_PAPER_NAME_A4\n PAPER_NAME_A5\nName for the A5 paper size.\nC type: GTK_PAPER_NAME_A5\n PAPER_NAME_B5\nName for the B5 paper size.\nC type: GTK_PAPER_NAME_B5\n PAPER_NAME_EXECUTIVE\nName for the Executive paper size.\nC type: GTK_PAPER_NAME_EXECUTIVE\n PAPER_NAME_LEGAL\nName for the Legal paper size.\nC type: GTK_PAPER_NAME_LEGAL\n PAPER_NAME_LETTER\nName for the Letter paper size.\nC type: GTK_PAPER_NAME_LETTER\n PATH_PRIO_MASK\nC type: GTK_PATH_PRIO_MASK\n PRINT_SETTINGS_COLLATE\nC type: GTK_PRINT_SETTINGS_COLLATE\n PRINT_SETTINGS_DEFAULT_SOURCE\nC type: GTK_PRINT_SETTINGS_DEFAULT_SOURCE\n PRINT_SETTINGS_DITHER\nC type: GTK_PRINT_SETTINGS_DITHER\n PRINT_SETTINGS_DUPLEX\nC type: GTK_PRINT_SETTINGS_DUPLEX\n PRINT_SETTINGS_FINISHINGS\nC type: GTK_PRINT_SETTINGS_FINISHINGS\n PRINT_SETTINGS_MEDIA_TYPE\nC type: GTK_PRINT_SETTINGS_MEDIA_TYPE\n PRINT_SETTINGS_NUMBER_UP\nC type: GTK_PRINT_SETTINGS_NUMBER_UP\n PRINT_SETTINGS_NUMBER_UP_LAYOUT\nC type: GTK_PRINT_SETTINGS_NUMBER_UP_LAYOUT\n PRINT_SETTINGS_N_COPIES\nC type: GTK_PRINT_SETTINGS_N_COPIES\n PRINT_SETTINGS_ORIENTATION\nC type: GTK_PRINT_SETTINGS_ORIENTATION\n PRINT_SETTINGS_OUTPUT_BASENAME\nThe key used by the “Print to file” printer to store the file name of the output without the path to the directory and the file extension.\nC type: GTK_PRINT_SETTINGS_OUTPUT_BASENAME\nsince 3.6\n PRINT_SETTINGS_OUTPUT_BIN\nC type: GTK_PRINT_SETTINGS_OUTPUT_BIN\n PRINT_SETTINGS_OUTPUT_DIR\nThe key used by the “Print to file” printer to store the directory to which the output should be written.\nC type: GTK_PRINT_SETTINGS_OUTPUT_DIR\nsince 3.6\n PRINT_SETTINGS_OUTPUT_FILE_FORMAT\nThe key used by the “Print to file” printer to store the format of the output. The supported values are “PS” and “PDF”.\nC type: GTK_PRINT_SETTINGS_OUTPUT_FILE_FORMAT\n PRINT_SETTINGS_OUTPUT_URI\nThe key used by the “Print to file” printer to store the URI to which the output should be written. GTK+ itself supports only “file://” URIs.\nC type: GTK_PRINT_SETTINGS_OUTPUT_URI\n PRINT_SETTINGS_PAGE_RANGES\nC type: GTK_PRINT_SETTINGS_PAGE_RANGES\n PRINT_SETTINGS_PAGE_SET\nC type: GTK_PRINT_SETTINGS_PAGE_SET\n PRINT_SETTINGS_PAPER_FORMAT\nC type: GTK_PRINT_SETTINGS_PAPER_FORMAT\n PRINT_SETTINGS_PAPER_HEIGHT\nC type: GTK_PRINT_SETTINGS_PAPER_HEIGHT\n PRINT_SETTINGS_PAPER_WIDTH\nC type: GTK_PRINT_SETTINGS_PAPER_WIDTH\n PRINT_SETTINGS_PRINTER\nC type: GTK_PRINT_SETTINGS_PRINTER\n PRINT_SETTINGS_PRINTER_LPI\nC type: GTK_PRINT_SETTINGS_PRINTER_LPI\n PRINT_SETTINGS_PRINT_PAGES\nC type: GTK_PRINT_SETTINGS_PRINT_PAGES\n PRINT_SETTINGS_QUALITY\nC type: GTK_PRINT_SETTINGS_QUALITY\n PRINT_SETTINGS_RESOLUTION\nC type: GTK_PRINT_SETTINGS_RESOLUTION\n PRINT_SETTINGS_RESOLUTION_X\nC type: GTK_PRINT_SETTINGS_RESOLUTION_X\n PRINT_SETTINGS_RESOLUTION_Y\nC type: GTK_PRINT_SETTINGS_RESOLUTION_Y\n PRINT_SETTINGS_REVERSE\nC type: GTK_PRINT_SETTINGS_REVERSE\n PRINT_SETTINGS_SCALE\nC type: GTK_PRINT_SETTINGS_SCALE\n PRINT_SETTINGS_USE_COLOR\nC type: GTK_PRINT_SETTINGS_USE_COLOR\n PRINT_SETTINGS_WIN32_DRIVER_EXTRA\nC type: GTK_PRINT_SETTINGS_WIN32_DRIVER_EXTRA\n PRINT_SETTINGS_WIN32_DRIVER_VERSION\nC type: GTK_PRINT_SETTINGS_WIN32_DRIVER_VERSION\n PRIORITY_RESIZE\nUse this priority for functionality related to size allocation.\nIt is used internally by GTK+ to compute the sizes of widgets. This priority is higher than %GDK_PRIORITY_REDRAW to avoid resizing a widget which was just redrawn.\nC type: GTK_PRIORITY_RESIZE\n STYLE_CLASS_ACCELERATOR\nA CSS class to match an accelerator.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_ACCELERATOR\n STYLE_CLASS_ARROW\nA CSS class used when rendering an arrow element.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_ARROW\n STYLE_CLASS_BACKGROUND\nA CSS class to match the window background.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_BACKGROUND\n STYLE_CLASS_BOTTOM\nA CSS class to indicate an area at the bottom of a widget.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_BOTTOM\n STYLE_CLASS_BUTTON\nA CSS class to match buttons.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_BUTTON\n STYLE_CLASS_CALENDAR\nA CSS class to match calendars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_CALENDAR\n STYLE_CLASS_CELL\nA CSS class to match content rendered in cell views.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_CELL\n STYLE_CLASS_CHECK\nA CSS class to match check boxes.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_CHECK\n STYLE_CLASS_COMBOBOX_ENTRY\nA CSS class to match combobox entries.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_COMBOBOX_ENTRY\n STYLE_CLASS_CONTEXT_MENU\nA CSS class to match context menus.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_CONTEXT_MENU\n STYLE_CLASS_CSD\nA CSS class that gets added to windows which have client-side decorations.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_CSD\nsince 3.14\n STYLE_CLASS_CURSOR_HANDLE\nA CSS class used when rendering a drag handle for text selection.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_CURSOR_HANDLE\n STYLE_CLASS_DEFAULT\nA CSS class to match the default widget.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_DEFAULT\n STYLE_CLASS_DESTRUCTIVE_ACTION\nA CSS class used when an action (usually a button) is one that is expected to remove or destroy something visible to the user.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_DESTRUCTIVE_ACTION\nsince 3.12\n STYLE_CLASS_DIM_LABEL\nA CSS class to match dimmed labels.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_DIM_LABEL\n STYLE_CLASS_DND\nA CSS class for a drag-and-drop indicator.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_DND\n STYLE_CLASS_DOCK\nA CSS class defining a dock area.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_DOCK\n STYLE_CLASS_ENTRY\nA CSS class to match text entries.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_ENTRY\n STYLE_CLASS_ERROR\nA CSS class for an area displaying an error message, such as those in infobars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_ERROR\n STYLE_CLASS_EXPANDER\nA CSS class defining an expander, such as those in treeviews.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_EXPANDER\n STYLE_CLASS_FLAT\nA CSS class that is added when widgets that usually have a frame or border (like buttons or entries) should appear without it.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_FLAT\nsince 3.14\n STYLE_CLASS_FRAME\nA CSS class defining a frame delimiting content, such as #GtkFrame or the scrolled window frame around the scrollable area.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_FRAME\n STYLE_CLASS_GRIP\nA CSS class defining a resize grip.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_GRIP\n STYLE_CLASS_HEADER\nA CSS class to match a header element.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_HEADER\n STYLE_CLASS_HIGHLIGHT\nA CSS class defining a highlighted area, such as headings in assistants and calendars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_HIGHLIGHT\n STYLE_CLASS_HORIZONTAL\nA CSS class for horizontally layered widgets.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_HORIZONTAL\n STYLE_CLASS_IMAGE\nA CSS class defining an image, such as the icon in an entry.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_IMAGE\n STYLE_CLASS_INFO\nA CSS class for an area displaying an informational message, such as those in infobars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_INFO\n STYLE_CLASS_INLINE_TOOLBAR\nA CSS class to match inline toolbars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_INLINE_TOOLBAR\n STYLE_CLASS_INSERTION_CURSOR\nA CSS class used when rendering a drag handle for the insertion cursor position.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_INSERTION_CURSOR\n STYLE_CLASS_LABEL\nA CSS class to match labels.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_LABEL\nsince 3.16\n STYLE_CLASS_LEFT\nA CSS class to indicate an area at the left of a widget.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_LEFT\n STYLE_CLASS_LEVEL_BAR\nA CSS class used when rendering a level indicator, such as a battery charge level, or a password strength.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_LEVEL_BAR\n STYLE_CLASS_LINKED\nA CSS class to match a linked area, such as a box containing buttons belonging to the same control.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_LINKED\n STYLE_CLASS_LIST\nA CSS class to match lists.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_LIST\n STYLE_CLASS_LIST_ROW\nA CSS class to match list rows.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_LIST_ROW\n STYLE_CLASS_MARK\nA CSS class defining marks in a widget, such as in scales.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_MARK\n STYLE_CLASS_MENU\nA CSS class to match menus.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_MENU\n STYLE_CLASS_MENUBAR\nA CSS class to menubars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_MENUBAR\n STYLE_CLASS_MENUITEM\nA CSS class to match menu items.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_MENUITEM\n STYLE_CLASS_MESSAGE_DIALOG\nA CSS class that is added to message dialogs.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_MESSAGE_DIALOG\nsince 3.14\n STYLE_CLASS_MONOSPACE\nA CSS class that is added to text view that should use a monospace font.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_MONOSPACE\nsince 3.16\n STYLE_CLASS_NEEDS_ATTENTION\nA CSS class used when an element needs the user attention, for instance a button in a stack switcher corresponding to a hidden page that changed state.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_NEEDS_ATTENTION\nsince 3.12\n STYLE_CLASS_NOTEBOOK\nA CSS class defining a notebook.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_NOTEBOOK\n STYLE_CLASS_OSD\nA CSS class used when rendering an OSD (On Screen Display) element, on top of another container.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_OSD\n STYLE_CLASS_OVERSHOOT\nA CSS class that is added on the visual hints that happen when scrolling is attempted past the limits of a scrollable area.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_OVERSHOOT\nsince 3.14\n STYLE_CLASS_PANE_SEPARATOR\nA CSS class for a pane separator, such as those in #GtkPaned.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_PANE_SEPARATOR\n STYLE_CLASS_PAPER\nA CSS class that is added to areas that should look like paper.\nThis is used in print previews and themes are encouraged to style it as black text on white background.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_PAPER\nsince 3.16\n STYLE_CLASS_POPOVER\nA CSS class that matches popovers.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_POPOVER\nsince 3.14\n STYLE_CLASS_POPUP\nA CSS class that is added to the toplevel windows used for menus.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_POPUP\nsince 3.14\n STYLE_CLASS_PRIMARY_TOOLBAR\nA CSS class to match primary toolbars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_PRIMARY_TOOLBAR\n STYLE_CLASS_PROGRESSBAR\nA CSS class to use when rendering activity as a progressbar.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_PROGRESSBAR\n STYLE_CLASS_PULSE\nA CSS class to use when rendering a pulse in an indeterminate progress bar.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_PULSE\n STYLE_CLASS_QUESTION\nA CSS class for an area displaying a question to the user, such as those in infobars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_QUESTION\n STYLE_CLASS_RADIO\nA CSS class to match radio buttons.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_RADIO\n STYLE_CLASS_RAISED\nA CSS class to match a raised control, such as a raised button on a toolbar.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_RAISED\n STYLE_CLASS_READ_ONLY\nA CSS class used to indicate a read-only state.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_READ_ONLY\n STYLE_CLASS_RIGHT\nA CSS class to indicate an area at the right of a widget.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_RIGHT\n STYLE_CLASS_RUBBERBAND\nA CSS class to match the rubberband selection rectangle.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_RUBBERBAND\n STYLE_CLASS_SCALE\nA CSS class to match scale widgets.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SCALE\n STYLE_CLASS_SCALE_HAS_MARKS_ABOVE\nA CSS class to match scale widgets with marks attached, all the marks are above for horizontal #GtkScale. left for vertical #GtkScale.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SCALE_HAS_MARKS_ABOVE\n STYLE_CLASS_SCALE_HAS_MARKS_BELOW\nA CSS class to match scale widgets with marks attached, all the marks are below for horizontal #GtkScale, right for vertical #GtkScale.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SCALE_HAS_MARKS_BELOW\n STYLE_CLASS_SCROLLBAR\nA CSS class to match scrollbars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SCROLLBAR\n STYLE_CLASS_SCROLLBARS_JUNCTION\nA CSS class to match the junction area between an horizontal and vertical scrollbar, when they’re both shown.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SCROLLBARS_JUNCTION\n STYLE_CLASS_SEPARATOR\nA CSS class for a separator.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SEPARATOR\n STYLE_CLASS_SIDEBAR\nA CSS class defining a sidebar, such as the left side in a file chooser.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SIDEBAR\n STYLE_CLASS_SLIDER\nA CSS class to match sliders.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SLIDER\n STYLE_CLASS_SPINBUTTON\nA CSS class defining an spinbutton.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SPINBUTTON\n STYLE_CLASS_SPINNER\nA CSS class to use when rendering activity as a “spinner”.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SPINNER\n STYLE_CLASS_STATUSBAR\nA CSS class to match statusbars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_STATUSBAR\nsince 3.16\n STYLE_CLASS_SUBTITLE\nA CSS class used for the subtitle label in a titlebar in a toplevel window.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SUBTITLE\nsince 3.14\n STYLE_CLASS_SUGGESTED_ACTION\nA CSS class used when an action (usually a button) is the primary suggested action in a specific context.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_SUGGESTED_ACTION\nsince 3.12\n STYLE_CLASS_TITLE\nA CSS class used for the title label in a titlebar in a toplevel window.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_TITLE\nsince 3.14\n STYLE_CLASS_TITLEBAR\nA CSS class used when rendering a titlebar in a toplevel window.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_TITLEBAR\n STYLE_CLASS_TOOLBAR\nA CSS class to match toolbars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_TOOLBAR\n STYLE_CLASS_TOOLTIP\nA CSS class to match tooltip windows.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_TOOLTIP\n STYLE_CLASS_TOP\nA CSS class to indicate an area at the top of a widget.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_TOP\n STYLE_CLASS_TOUCH_SELECTION\nA CSS class for touch selection popups on entries and text views.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_TOUCH_SELECTION\nsince 3.16\n STYLE_CLASS_TROUGH\nA CSS class to match troughs, as in scrollbars and progressbars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_TROUGH\n STYLE_CLASS_UNDERSHOOT\nA CSS class that is added on the visual hints that happen where content is \u0026lsquo;scrolled off\u0026rsquo; and can be made visible by scrolling.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_UNDERSHOOT\nsince 3.16\n STYLE_CLASS_VERTICAL\nA CSS class for vertically layered widgets.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_VERTICAL\n STYLE_CLASS_VIEW\nA CSS class defining a view, such as iconviews or treeviews.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_VIEW\n STYLE_CLASS_WARNING\nA CSS class for an area displaying a warning message, such as those in infobars.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_WARNING\n STYLE_CLASS_WIDE\nA CSS class to indicate that a UI element should be \u0026lsquo;wide\u0026rsquo;. Used by #GtkPaned.\nRefer to individual widget documentation for used style classes.\nC type: GTK_STYLE_CLASS_WIDE\nsince 3.16\n STYLE_PROPERTY_BACKGROUND_COLOR\nA property holding the background color of rendered elements as a #GdkRGBA.\nC type: GTK_STYLE_PROPERTY_BACKGROUND_COLOR\n STYLE_PROPERTY_BACKGROUND_IMAGE\nA property holding the element’s background as a #cairo_pattern_t.\nC type: GTK_STYLE_PROPERTY_BACKGROUND_IMAGE\n STYLE_PROPERTY_BORDER_COLOR\nA property holding the element’s border color as a #GdkRGBA.\nC type: GTK_STYLE_PROPERTY_BORDER_COLOR\n STYLE_PROPERTY_BORDER_RADIUS\nA property holding the rendered element’s border radius in pixels as a #gint.\nC type: GTK_STYLE_PROPERTY_BORDER_RADIUS\n STYLE_PROPERTY_BORDER_STYLE\nA property holding the element’s border style as a #GtkBorderStyle.\nC type: GTK_STYLE_PROPERTY_BORDER_STYLE\n STYLE_PROPERTY_BORDER_WIDTH\nA property holding the rendered element’s border width in pixels as a #GtkBorder. The border is the intermediary spacing property of the padding/border/margin series.\ngtk_render_frame() uses this property to find out the frame line width, so #GtkWidgets rendering frames may need to add up this padding when requesting size\nC type: GTK_STYLE_PROPERTY_BORDER_WIDTH\n STYLE_PROPERTY_COLOR\nA property holding the foreground color of rendered elements as a #GdkRGBA.\nC type: GTK_STYLE_PROPERTY_COLOR\n STYLE_PROPERTY_FONT\nA property holding the font properties used when rendering text as a #PangoFontDescription.\nC type: GTK_STYLE_PROPERTY_FONT\n STYLE_PROPERTY_MARGIN\nA property holding the rendered element’s margin as a #GtkBorder. The margin is defined as the spacing between the border of the element and its surrounding elements. It is external to #GtkWidget\u0026rsquo;s size allocations, and the most external spacing property of the padding/border/margin series.\nC type: GTK_STYLE_PROPERTY_MARGIN\n STYLE_PROPERTY_PADDING\nA property holding the rendered element’s padding as a #GtkBorder. The padding is defined as the spacing between the inner part of the element border and its child. It’s the innermost spacing property of the padding/border/margin series.\nC type: GTK_STYLE_PROPERTY_PADDING\n STYLE_PROVIDER_PRIORITY_APPLICATION\nA priority that can be used when adding a #GtkStyleProvider for application-specific style information.\nC type: GTK_STYLE_PROVIDER_PRIORITY_APPLICATION\n STYLE_PROVIDER_PRIORITY_FALLBACK\nThe priority used for default style information that is used in the absence of themes.\nNote that this is not very useful for providing default styling for custom style classes - themes are likely to override styling provided at this priority with catch-all * {...} rules.\nC type: GTK_STYLE_PROVIDER_PRIORITY_FALLBACK\n STYLE_PROVIDER_PRIORITY_SETTINGS\nThe priority used for style information provided via #GtkSettings.\nThis priority is higher than #GTK_STYLE_PROVIDER_PRIORITY_THEME to let settings override themes.\nC type: GTK_STYLE_PROVIDER_PRIORITY_SETTINGS\n STYLE_PROVIDER_PRIORITY_THEME\nThe priority used for style information provided by themes.\nC type: GTK_STYLE_PROVIDER_PRIORITY_THEME\n STYLE_PROVIDER_PRIORITY_USER\nThe priority used for the style information from ~/.gtk-3.0.css.\nYou should not use priorities higher than this, to give the user the last word.\nC type: GTK_STYLE_PROVIDER_PRIORITY_USER\n STYLE_REGION_COLUMN\nA widget region name to define a treeview column.\nC type: GTK_STYLE_REGION_COLUMN\n STYLE_REGION_COLUMN_HEADER\nA widget region name to define a treeview column header.\nC type: GTK_STYLE_REGION_COLUMN_HEADER\n STYLE_REGION_ROW\nA widget region name to define a treeview row.\nC type: GTK_STYLE_REGION_ROW\n STYLE_REGION_TAB\nA widget region name to define a notebook tab.\nC type: GTK_STYLE_REGION_TAB\n TEXT_VIEW_PRIORITY_VALIDATE\nThe priority at which the text view validates onscreen lines in an idle job in the background.\nC type: GTK_TEXT_VIEW_PRIORITY_VALIDATE\n TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID\nThe GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID can be used to make a #GtkTreeSortable use the default sort function.\nSee also gtk_tree_sortable_set_sort_column_id()\nC type: GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID\n TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID\nThe GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID can be used to make a #GtkTreeSortable use no sorting.\nSee also gtk_tree_sortable_set_sort_column_id()\nC type: GTK_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/pango/constants/",
	"title": "constants",
	"tags": [],
	"description": "",
	"content": "ANALYSIS_FLAG_CENTERED_BASELINE\nWhether the segment should be shifted to center around the baseline. Used in vertical writing directions mostly.\nC type: PANGO_ANALYSIS_FLAG_CENTERED_BASELINE\nsince 1.16\n ANALYSIS_FLAG_IS_ELLIPSIS\nThis flag is used to mark runs that hold ellipsized text, in an ellipsized layout.\nC type: PANGO_ANALYSIS_FLAG_IS_ELLIPSIS\nsince 1.36.7\n ATTR_INDEX_FROM_TEXT_BEGINNING\nThis value can be used to set the start_index member of a #PangoAttribute such that the attribute covers from the beginning of the text.\nC type: PANGO_ATTR_INDEX_FROM_TEXT_BEGINNING\nsince 1.24\n GLYPH_EMPTY\nThe %PANGO_GLYPH_EMPTY macro represents a #PangoGlyph value that has a special meaning, which is a zero-width empty glyph. This is useful for example in shaper modules, to use as the glyph for various zero-width Unicode characters (those passing pango_is_zero_width()).\nC type: PANGO_GLYPH_EMPTY\n GLYPH_INVALID_INPUT\nThe %PANGO_GLYPH_INVALID_INPUT macro represents a #PangoGlyph value that has a special meaning of invalid input. #PangoLayout produces one such glyph per invalid input UTF-8 byte and such a glyph is rendered as a crossed box.\nNote that this value is defined such that it has the %PANGO_GLYPH_UNKNOWN_FLAG on.\nC type: PANGO_GLYPH_INVALID_INPUT\nsince 1.20\n GLYPH_UNKNOWN_FLAG\nThe %PANGO_GLYPH_UNKNOWN_FLAG macro is a flag value that can be added to a #gunichar value of a valid Unicode character, to produce a #PangoGlyph value, representing an unknown-character glyph for the respective #gunichar.\nC type: PANGO_GLYPH_UNKNOWN_FLAG\n SCALE\nThe %PANGO_SCALE macro represents the scale between dimensions used for Pango distances and device units. (The definition of device units is dependent on the output device; it will typically be pixels for a screen, and points for a printer.) %PANGO_SCALE is currently 1024, but this may be changed in the future.\nWhen setting font sizes, device units are always considered to be points (as in \u0026ldquo;12 point font\u0026rdquo;), rather than pixels.\nC type: PANGO_SCALE\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/atk/enums/",
	"title": "enums",
	"tags": [],
	"description": "",
	"content": "CoordType\nSpecifies how xy coordinates are to be interpreted. Used by functions such as atk_component_get_position() and atk_text_get_character_extents()\n  ATK_XY_SCREEN 0 specifies xy coordinates relative to the screen   ATK_XY_WINDOW 1 specifies xy coordinates relative to the widget\u0026rsquo;s top-level window   C type: AtkCoordType\n KeyEventType\nSpecifies the type of a keyboard evemt.\n  ATK_KEY_EVENT_PRESS 0 specifies a key press event   ATK_KEY_EVENT_RELEASE 1 specifies a key release event   ATK_KEY_EVENT_LAST_DEFINED 2 Not a valid value; specifies end of enumeration   C type: AtkKeyEventType\n Layer\nDescribes the layer of a component\nThese enumerated \u0026ldquo;layer values\u0026rdquo; are used when determining which UI rendering layer a component is drawn into, which can help in making determinations of when components occlude one another.\n  ATK_LAYER_INVALID 0 The object does not have a layer   ATK_LAYER_BACKGROUND 1 This layer is reserved for the desktop background   ATK_LAYER_CANVAS 2 This layer is used for Canvas components   ATK_LAYER_WIDGET 3 This layer is normally used for components   ATK_LAYER_MDI 4 This layer is used for layered components   ATK_LAYER_POPUP 5 This layer is used for popup components, such as menus   ATK_LAYER_OVERLAY 6 This layer is reserved for future use.   ATK_LAYER_WINDOW 7 This layer is used for toplevel windows.   C type: AtkLayer\n RelationType\nDescribes the type of the relation\n  ATK_RELATION_NULL 0 Not used, represens \u0026ldquo;no relationship\u0026rdquo; or an error condition.   ATK_RELATION_CONTROLLED_BY 1 Indicates an object controlled by one or more target objects.   ATK_RELATION_CONTROLLER_FOR 2 Indicates an object is an controller for one or more target objects.   ATK_RELATION_LABEL_FOR 3 Indicates an object is a label for one or more target objects.   ATK_RELATION_LABELLED_BY 4 Indicates an object is labelled by one or more target objects.   ATK_RELATION_MEMBER_OF 5 Indicates an object is a member of a group of one or more target objects.   ATK_RELATION_NODE_CHILD_OF 6 Indicates an object is a cell in a treetable which is displayed because a cell in the same column is expanded and identifies that cell.   ATK_RELATION_FLOWS_TO 7 Indicates that the object has content that flows logically to another AtkObject in a sequential way, (for instance text-flow).   ATK_RELATION_FLOWS_FROM 8 Indicates that the object has content that flows logically from another AtkObject in a sequential way, (for instance text-flow).   ATK_RELATION_SUBWINDOW_OF 9 Indicates a subwindow attached to a component but otherwise has no connection in the UI heirarchy to that component.   ATK_RELATION_EMBEDS 10 Indicates that the object visually embeds another object\u0026rsquo;s content, i.e. this object\u0026rsquo;s content flows around another\u0026rsquo;s content.   ATK_RELATION_EMBEDDED_BY 11 Reciprocal of %ATK_RELATION_EMBEDS, indicates that this object\u0026rsquo;s content is visualy embedded in another object.   ATK_RELATION_POPUP_FOR 12 Indicates that an object is a popup for another object.   ATK_RELATION_PARENT_WINDOW_OF 13 Indicates that an object is a parent window of another object.   ATK_RELATION_DESCRIBED_BY 14 Reciprocal of %ATK_RELATION_DESCRIPTION_FOR. Indicates that one or more target objects provide descriptive information about this object. This relation type is most appropriate for information that is not essential as its presentation may be user-configurable and/or limited to an on-demand mechanism such as an assistive technology command. For brief, essential information such as can be found in a widget\u0026rsquo;s on-screen label, use %ATK_RELATION_LABELLED_BY. For an on-screen error message, use %ATK_RELATION_ERROR_MESSAGE. For lengthy extended descriptive information contained in an on-screen object, consider using %ATK_RELATION_DETAILS as assistive technologies may provide a means for the user to navigate to objects containing detailed descriptions so that their content can be more closely reviewed.   ATK_RELATION_DESCRIPTION_FOR 15 Reciprocal of %ATK_RELATION_DESCRIBED_BY. Indicates that this object provides descriptive information about the target object(s). See also %ATK_RELATION_DETAILS_FOR and %ATK_RELATION_ERROR_FOR.   ATK_RELATION_NODE_PARENT_OF 16 Indicates an object is a cell in a treetable and is expanded to display other cells in the same column.   ATK_RELATION_DETAILS 17 Reciprocal of %ATK_RELATION_DETAILS_FOR. Indicates that this object has a detailed or extended description, the contents of which can be found in the target object(s). This relation type is most appropriate for information that is sufficiently lengthy as to make navigation to the container of that information desirable. For less verbose information suitable for announcement only, see %ATK_RELATION_DESCRIBED_BY. If the detailed information describes an error condition, %ATK_RELATION_ERROR_FOR should be used instead. @Since: ATK-2.26.   ATK_RELATION_DETAILS_FOR 18 Reciprocal of %ATK_RELATION_DETAILS. Indicates that this object provides a detailed or extended description about the target object(s). See also %ATK_RELATION_DESCRIPTION_FOR and %ATK_RELATION_ERROR_FOR. @Since: ATK-2.26.   ATK_RELATION_ERROR_MESSAGE 19 Reciprocal of %ATK_RELATION_ERROR_FOR. Indicates that this object has one or more errors, the nature of which is described in the contents of the target object(s). Objects that have this relation type should also contain %ATK_STATE_INVALID_ENTRY in their #AtkStateSet. @Since: ATK-2.26.   ATK_RELATION_ERROR_FOR 20 Reciprocal of %ATK_RELATION_ERROR_MESSAGE. Indicates that this object contains an error message describing an invalid condition in the target object(s). @Since: ATK_2.26.   ATK_RELATION_LAST_DEFINED 21 Not used, this value indicates the end of the enumeration.   C type: AtkRelationType\n Role\nDescribes the role of an object\nThese are the built-in enumerated roles that UI components can have in ATK. Other roles may be added at runtime, so an AtkRole \u0026gt;= ATK_ROLE_LAST_DEFINED is not necessarily an error.\n  ATK_ROLE_INVALID 0 Invalid role   ATK_ROLE_ACCEL_LABEL 1 A label which represents an accelerator   ATK_ROLE_ALERT 2 An object which is an alert to the user. Assistive Technologies typically respond to ATK_ROLE_ALERT by reading the entire onscreen contents of containers advertising this role. Should be used for warning dialogs, etc.   ATK_ROLE_ANIMATION 3 An object which is an animated image   ATK_ROLE_ARROW 4 An arrow in one of the four cardinal directions   ATK_ROLE_CALENDAR 5 An object that displays a calendar and allows the user to select a date   ATK_ROLE_CANVAS 6 An object that can be drawn into and is used to trap events   ATK_ROLE_CHECK_BOX 7 A choice that can be checked or unchecked and provides a separate indicator for the current state   ATK_ROLE_CHECK_MENU_ITEM 8 A menu item with a check box   ATK_ROLE_COLOR_CHOOSER 9 A specialized dialog that lets the user choose a color   ATK_ROLE_COLUMN_HEADER 10 The header for a column of data   ATK_ROLE_COMBO_BOX 11 A collapsible list of choices the user can select from   ATK_ROLE_DATE_EDITOR 12 An object whose purpose is to allow a user to edit a date   ATK_ROLE_DESKTOP_ICON 13 An inconifed internal frame within a DESKTOP_PANE   ATK_ROLE_DESKTOP_FRAME 14 A pane that supports internal frames and iconified versions of those internal frames   ATK_ROLE_DIAL 15 An object whose purpose is to allow a user to set a value   ATK_ROLE_DIALOG 16 A top level window with title bar and a border   ATK_ROLE_DIRECTORY_PANE 17 A pane that allows the user to navigate through and select the contents of a directory   ATK_ROLE_DRAWING_AREA 18 An object used for drawing custom user interface elements   ATK_ROLE_FILE_CHOOSER 19 A specialized dialog that lets the user choose a file   ATK_ROLE_FILLER 20 A object that fills up space in a user interface   ATK_ROLE_FONT_CHOOSER 21 A specialized dialog that lets the user choose a font   ATK_ROLE_FRAME 22 A top level window with a title bar, border, menubar, etc.   ATK_ROLE_GLASS_PANE 23 A pane that is guaranteed to be painted on top of all panes beneath it   ATK_ROLE_HTML_CONTAINER 24 A document container for HTML, whose children represent the document content   ATK_ROLE_ICON 25 A small fixed size picture, typically used to decorate components   ATK_ROLE_IMAGE 26 An object whose primary purpose is to display an image   ATK_ROLE_INTERNAL_FRAME 27 A frame-like object that is clipped by a desktop pane   ATK_ROLE_LABEL 28 An object used to present an icon or short string in an interface   ATK_ROLE_LAYERED_PANE 29 A specialized pane that allows its children to be drawn in layers, providing a form of stacking order   ATK_ROLE_LIST 30 An object that presents a list of objects to the user and allows the user to select one or more of them   ATK_ROLE_LIST_ITEM 31 An object that represents an element of a list   ATK_ROLE_MENU 32 An object usually found inside a menu bar that contains a list of actions the user can choose from   ATK_ROLE_MENU_BAR 33 An object usually drawn at the top of the primary dialog box of an application that contains a list of menus the user can choose from   ATK_ROLE_MENU_ITEM 34 An object usually contained in a menu that presents an action the user can choose   ATK_ROLE_OPTION_PANE 35 A specialized pane whose primary use is inside a DIALOG   ATK_ROLE_PAGE_TAB 36 An object that is a child of a page tab list   ATK_ROLE_PAGE_TAB_LIST 37 An object that presents a series of panels (or page tabs), one at a time, through some mechanism provided by the object   ATK_ROLE_PANEL 38 A generic container that is often used to group objects   ATK_ROLE_PASSWORD_TEXT 39 A text object uses for passwords, or other places where the text content is not shown visibly to the user   ATK_ROLE_POPUP_MENU 40 A temporary window that is usually used to offer the user a list of choices, and then hides when the user selects one of those choices   ATK_ROLE_PROGRESS_BAR 41 An object used to indicate how much of a task has been completed   ATK_ROLE_PUSH_BUTTON 42 An object the user can manipulate to tell the application to do something   ATK_ROLE_RADIO_BUTTON 43 A specialized check box that will cause other radio buttons in the same group to become unchecked when this one is checked   ATK_ROLE_RADIO_MENU_ITEM 44 A check menu item which belongs to a group. At each instant exactly one of the radio menu items from a group is selected   ATK_ROLE_ROOT_PANE 45 A specialized pane that has a glass pane and a layered pane as its children   ATK_ROLE_ROW_HEADER 46 The header for a row of data   ATK_ROLE_SCROLL_BAR 47 An object usually used to allow a user to incrementally view a large amount of data.   ATK_ROLE_SCROLL_PANE 48 An object that allows a user to incrementally view a large amount of information   ATK_ROLE_SEPARATOR 49 An object usually contained in a menu to provide a visible and logical separation of the contents in a menu   ATK_ROLE_SLIDER 50 An object that allows the user to select from a bounded range   ATK_ROLE_SPLIT_PANE 51 A specialized panel that presents two other panels at the same time   ATK_ROLE_SPIN_BUTTON 52 An object used to get an integer or floating point number from the user   ATK_ROLE_STATUSBAR 53 An object which reports messages of minor importance to the user   ATK_ROLE_TABLE 54 An object used to represent information in terms of rows and columns   ATK_ROLE_TABLE_CELL 55 A cell in a table   ATK_ROLE_TABLE_COLUMN_HEADER 56 The header for a column of a table   ATK_ROLE_TABLE_ROW_HEADER 57 The header for a row of a table   ATK_ROLE_TEAR_OFF_MENU_ITEM 58 A menu item used to tear off and reattach its menu   ATK_ROLE_TERMINAL 59 An object that represents an accessible terminal. @Since: ATK-0.6   ATK_ROLE_TEXT 60 An interactive widget that supports multiple lines of text and optionally accepts user input, but whose purpose is not to solicit user input. Thus ATK_ROLE_TEXT is appropriate for the text view in a plain text editor but inappropriate for an input field in a dialog box or web form. For widgets whose purpose is to solicit input from the user, see ATK_ROLE_ENTRY and ATK_ROLE_PASSWORD_TEXT. For generic objects which display a brief amount of textual information, see ATK_ROLE_STATIC.   ATK_ROLE_TOGGLE_BUTTON 61 A specialized push button that can be checked or unchecked, but does not provide a separate indicator for the current state   ATK_ROLE_TOOL_BAR 62 A bar or palette usually composed of push buttons or toggle buttons   ATK_ROLE_TOOL_TIP 63 An object that provides information about another object   ATK_ROLE_TREE 64 An object used to represent hierarchical information to the user   ATK_ROLE_TREE_TABLE 65 An object capable of expanding and collapsing rows as well as showing multiple columns of data. @Since: ATK-0.7   ATK_ROLE_UNKNOWN 66 The object contains some Accessible information, but its role is not known   ATK_ROLE_VIEWPORT 67 An object usually used in a scroll pane   ATK_ROLE_WINDOW 68 A top level window with no title or border.   ATK_ROLE_HEADER 69 An object that serves as a document header. @Since: ATK-1.1.1   ATK_ROLE_FOOTER 70 An object that serves as a document footer. @Since: ATK-1.1.1   ATK_ROLE_PARAGRAPH 71 An object which is contains a paragraph of text content. @Since: ATK-1.1.1   ATK_ROLE_RULER 72 An object which describes margins and tab stops, etc. for text objects which it controls (should have CONTROLLER_FOR relation to such). @Since: ATK-1.1.1   ATK_ROLE_APPLICATION 73 The object is an application object, which may contain @ATK_ROLE_FRAME objects or other types of accessibles. The root accessible of any application\u0026rsquo;s ATK hierarchy should have ATK_ROLE_APPLICATION. @Since: ATK-1.1.4   ATK_ROLE_AUTOCOMPLETE 74 The object is a dialog or list containing items for insertion into an entry widget, for instance a list of words for completion of a text entry. @Since: ATK-1.3   ATK_ROLE_EDITBAR 75 The object is an editable text object in a toolbar. @Since: ATK-1.5   ATK_ROLE_EMBEDDED 76 The object is an embedded container within a document or panel. This role is a grouping \u0026ldquo;hint\u0026rdquo; indicating that the contained objects share a context. @Since: ATK-1.7.2   ATK_ROLE_ENTRY 77 The object is a component whose textual content may be entered or modified by the user, provided @ATK_STATE_EDITABLE is present. @Since: ATK-1.11   ATK_ROLE_CHART 78 The object is a graphical depiction of quantitative data. It may contain multiple subelements whose attributes and/or description may be queried to obtain both the quantitative data and information about how the data is being presented. The LABELLED_BY relation is particularly important in interpreting objects of this type, as is the accessible-description property. @Since: ATK-1.11   ATK_ROLE_CAPTION 79 The object contains descriptive information, usually textual, about another user interface element such as a table, chart, or image. @Since: ATK-1.11   ATK_ROLE_DOCUMENT_FRAME 80 The object is a visual frame or container which contains a view of document content. Document frames may occur within another Document instance, in which case the second document may be said to be embedded in the containing instance. HTML frames are often ROLE_DOCUMENT_FRAME. Either this object, or a singleton descendant, should implement the Document interface. @Since: ATK-1.11   ATK_ROLE_HEADING 81 The object serves as a heading for content which follows it in a document. The \u0026lsquo;heading level\u0026rsquo; of the heading, if availabe, may be obtained by querying the object\u0026rsquo;s attributes.   ATK_ROLE_PAGE 82 The object is a containing instance which encapsulates a page of information. @ATK_ROLE_PAGE is used in documents and content which support a paginated navigation model. @Since: ATK-1.11   ATK_ROLE_SECTION 83 The object is a containing instance of document content which constitutes a particular \u0026lsquo;logical\u0026rsquo; section of the document. The type of content within a section, and the nature of the section division itself, may be obtained by querying the object\u0026rsquo;s attributes. Sections may be nested. @Since: ATK-1.11   ATK_ROLE_REDUNDANT_OBJECT 84 The object is redundant with another object in the hierarchy, and is exposed for purely technical reasons. Objects of this role should normally be ignored by clients. @Since: ATK-1.11   ATK_ROLE_FORM 85 The object is a container for form controls, for instance as part of a web form or user-input form within a document. This role is primarily a tag/convenience for clients when navigating complex documents, it is not expected that ordinary GUI containers will always have ATK_ROLE_FORM. @Since: ATK-1.12.0   ATK_ROLE_LINK 86 The object is a hypertext anchor, i.e. a \u0026ldquo;link\u0026rdquo; in a hypertext document. Such objects are distinct from \u0026lsquo;inline\u0026rsquo; content which may also use the Hypertext/Hyperlink interfaces to indicate the range/location within a text object where an inline or embedded object lies. @Since: ATK-1.12.1   ATK_ROLE_INPUT_METHOD_WINDOW 87 The object is a window or similar viewport which is used to allow composition or input of a \u0026lsquo;complex character\u0026rsquo;, in other words it is an \u0026ldquo;input method window.\u0026rdquo; @Since: ATK-1.12.1   ATK_ROLE_TABLE_ROW 88 A row in a table. @Since: ATK-2.1.0   ATK_ROLE_TREE_ITEM 89 An object that represents an element of a tree. @Since: ATK-2.1.0   ATK_ROLE_DOCUMENT_SPREADSHEET 90 A document frame which contains a spreadsheet. @Since: ATK-2.1.0   ATK_ROLE_DOCUMENT_PRESENTATION 91 A document frame which contains a presentation or slide content. @Since: ATK-2.1.0   ATK_ROLE_DOCUMENT_TEXT 92 A document frame which contains textual content, such as found in a word processing application. @Since: ATK-2.1.0   ATK_ROLE_DOCUMENT_WEB 93 A document frame which contains HTML or other markup suitable for display in a web browser. @Since: ATK-2.1.0   ATK_ROLE_DOCUMENT_EMAIL 94 A document frame which contains email content to be displayed or composed either in plain text or HTML. @Since: ATK-2.1.0   ATK_ROLE_COMMENT 95 An object found within a document and designed to present a comment, note, or other annotation. In some cases, this object might not be visible until activated. @Since: ATK-2.1.0   ATK_ROLE_LIST_BOX 96 A non-collapsible list of choices the user can select from. @Since: ATK-2.1.0   ATK_ROLE_GROUPING 97 A group of related widgets. This group typically has a label. @Since: ATK-2.1.0   ATK_ROLE_IMAGE_MAP 98 An image map object. Usually a graphic with multiple hotspots, where each hotspot can be activated resulting in the loading of another document or section of a document. @Since: ATK-2.1.0   ATK_ROLE_NOTIFICATION 99 A transitory object designed to present a message to the user, typically at the desktop level rather than inside a particular application. @Since: ATK-2.1.0   ATK_ROLE_INFO_BAR 100 An object designed to present a message to the user within an existing window. @Since: ATK-2.1.0   ATK_ROLE_LEVEL_BAR 101 A bar that serves as a level indicator to, for instance, show the strength of a password or the state of a battery. @Since: ATK-2.7.3   ATK_ROLE_TITLE_BAR 102 A bar that serves as the title of a window or a dialog. @Since: ATK-2.12   ATK_ROLE_BLOCK_QUOTE 103 An object which contains a text section that is quoted from another source. @Since: ATK-2.12   ATK_ROLE_AUDIO 104 An object which represents an audio element. @Since: ATK-2.12   ATK_ROLE_VIDEO 105 An object which represents a video element. @Since: ATK-2.12   ATK_ROLE_DEFINITION 106 A definition of a term or concept. @Since: ATK-2.12   ATK_ROLE_ARTICLE 107 A section of a page that consists of a composition that forms an independent part of a document, page, or site. Examples: A blog entry, a news story, a forum post. @Since: ATK-2.12   ATK_ROLE_LANDMARK 108 A region of a web page intended as a navigational landmark. This is designed to allow Assistive Technologies to provide quick navigation among key regions within a document. @Since: ATK-2.12   ATK_ROLE_LOG 109 A text widget or container holding log content, such as chat history and error logs. In this role there is a relationship between the arrival of new items in the log and the reading order. The log contains a meaningful sequence and new information is added only to the end of the log, not at arbitrary points. @Since: ATK-2.12   ATK_ROLE_MARQUEE 110 A container where non-essential information changes frequently. Common usages of marquee include stock tickers and ad banners. The primary difference between a marquee and a log is that logs usually have a meaningful order or sequence of important content changes. @Since: ATK-2.12   ATK_ROLE_MATH 111 A text widget or container that holds a mathematical expression. @Since: ATK-2.12   ATK_ROLE_RATING 112 A widget whose purpose is to display a rating, such as the number of stars associated with a song in a media player. Objects of this role should also implement AtkValue. @Since: ATK-2.12   ATK_ROLE_TIMER 113 An object containing a numerical counter which indicates an amount of elapsed time from a start point, or the time remaining until an end point. @Since: ATK-2.12   ATK_ROLE_DESCRIPTION_LIST 114 An object that represents a list of term-value groups. A term-value group represents a individual description and consist of one or more names (ATK_ROLE_DESCRIPTION_TERM) followed by one or more values (ATK_ROLE_DESCRIPTION_VALUE). For each list, there should not be more than one group with the same term name. @Since: ATK-2.12   ATK_ROLE_DESCRIPTION_TERM 115 An object that represents a term or phrase with a corresponding definition. @Since: ATK-2.12   ATK_ROLE_DESCRIPTION_VALUE 116 An object that represents the description, definition or value of a term. @Since: ATK-2.12   ATK_ROLE_STATIC 117 A generic non-container object whose purpose is to display a brief amount of information to the user and whose role is known by the implementor but lacks semantic value for the user. Examples in which ATK_ROLE_STATIC is appropriate include the message displayed in a message box and an image used as an alternative means to display text. ATK_ROLE_STATIC should not be applied to widgets which are traditionally interactive, objects which display a significant amount of content, or any object which has an accessible relation pointing to another object. Implementors should expose the displayed information through the accessible name of the object. If doing so seems inappropriate, it may indicate that a different role should be used. For labels which describe another widget, see ATK_ROLE_LABEL. For text views, see ATK_ROLE_TEXT. For generic containers, see ATK_ROLE_PANEL. For objects whose role is not known by the implementor, see ATK_ROLE_UNKNOWN. @Since: ATK-2.16.   ATK_ROLE_MATH_FRACTION 118 An object that represents a mathematical fraction.   ATK_ROLE_MATH_ROOT 119 An object that represents a mathematical expression displayed with a radical. @Since: ATK-2.16.   ATK_ROLE_SUBSCRIPT 120 An object that contains text that is displayed as a subscript. @Since: ATK-2.16.   ATK_ROLE_SUPERSCRIPT 121 An object that contains text that is displayed as a superscript. @Since: ATK-2.16.   ATK_ROLE_FOOTNOTE 122 An object that contains the text of a footnote. @Since: ATK-2.26.   ATK_ROLE_LAST_DEFINED 123 not a valid role, used for finding end of the enumeration   C type: AtkRole\n StateType\nThe possible types of states of an object\n  ATK_STATE_INVALID 0 Indicates an invalid state - probably an error condition.   ATK_STATE_ACTIVE 1 Indicates a window is currently the active window, or an object is the active subelement within a container or table. ATK_STATE_ACTIVE should not be used for objects which have ATK_STATE_FOCUSABLE or ATK_STATE_SELECTABLE: Those objects should use ATK_STATE_FOCUSED and ATK_STATE_SELECTED respectively. ATK_STATE_ACTIVE is a means to indicate that an object which is not focusable and not selectable is the currently-active item within its parent container.   ATK_STATE_ARMED 2 Indicates that the object is \u0026lsquo;armed\u0026rsquo;, i.e. will be activated by if a pointer button-release event occurs within its bounds. Buttons often enter this state when a pointer click occurs within their bounds, as a precursor to activation. ATK_STATE_ARMED has been deprecated since ATK-2.16 and should not be used in newly-written code.   ATK_STATE_BUSY 3 Indicates the current object is busy, i.e. onscreen representation is in the process of changing, or the object is temporarily unavailable for interaction due to activity already in progress. This state may be used by implementors of Document to indicate that content loading is underway. It also may indicate other \u0026lsquo;pending\u0026rsquo; conditions; clients may wish to interrogate this object when the ATK_STATE_BUSY flag is removed.   ATK_STATE_CHECKED 4 Indicates this object is currently checked, for instance a checkbox is \u0026lsquo;non-empty\u0026rsquo;.   ATK_STATE_DEFUNCT 5 Indicates that this object no longer has a valid backing widget (for instance, if its peer object has been destroyed)   ATK_STATE_EDITABLE 6 Indicates that this object can contain text, and that the user can change the textual contents of this object by editing those contents directly. For an object which is expected to be editable due to its type, but which cannot be edited due to the application or platform preventing the user from doing so, that object\u0026rsquo;s #AtkStateSet should lack ATK_STATE_EDITABLE and should contain ATK_STATE_READ_ONLY.   ATK_STATE_ENABLED 7 Indicates that this object is enabled, i.e. that it currently reflects some application state. Objects that are \u0026ldquo;greyed out\u0026rdquo; may lack this state, and may lack the STATE_SENSITIVE if direct user interaction cannot cause them to acquire STATE_ENABLED. See also: ATK_STATE_SENSITIVE   ATK_STATE_EXPANDABLE 8 Indicates this object allows progressive disclosure of its children   ATK_STATE_EXPANDED 9 Indicates this object its expanded - see ATK_STATE_EXPANDABLE above   ATK_STATE_FOCUSABLE 10 Indicates this object can accept keyboard focus, which means all events resulting from typing on the keyboard will normally be passed to it when it has focus   ATK_STATE_FOCUSED 11 Indicates this object currently has the keyboard focus   ATK_STATE_HORIZONTAL 12 Indicates the orientation of this object is horizontal; used, for instance, by objects of ATK_ROLE_SCROLL_BAR. For objects where vertical/horizontal orientation is especially meaningful.   ATK_STATE_ICONIFIED 13 Indicates this object is minimized and is represented only by an icon   ATK_STATE_MODAL 14 Indicates something must be done with this object before the user can interact with an object in a different window   ATK_STATE_MULTI_LINE 15 Indicates this (text) object can contain multiple lines of text   ATK_STATE_MULTISELECTABLE 16 Indicates this object allows more than one of its children to be selected at the same time, or in the case of text objects, that the object supports non-contiguous text selections.   ATK_STATE_OPAQUE 17 Indicates this object paints every pixel within its rectangular region.   ATK_STATE_PRESSED 18 Indicates this object is currently pressed.   ATK_STATE_RESIZABLE 19 Indicates the size of this object is not fixed   ATK_STATE_SELECTABLE 20 Indicates this object is the child of an object that allows its children to be selected and that this child is one of those children that can be selected   ATK_STATE_SELECTED 21 Indicates this object is the child of an object that allows its children to be selected and that this child is one of those children that has been selected   ATK_STATE_SENSITIVE 22 Indicates this object is sensitive, e.g. to user interaction. STATE_SENSITIVE usually accompanies STATE_ENABLED for user-actionable controls, but may be found in the absence of STATE_ENABLED if the current visible state of the control is \u0026ldquo;disconnected\u0026rdquo; from the application state. In such cases, direct user interaction can often result in the object gaining STATE_SENSITIVE, for instance if a user makes an explicit selection using an object whose current state is ambiguous or undefined. @see STATE_ENABLED, STATE_INDETERMINATE.   ATK_STATE_SHOWING 23 Indicates this object, the object\u0026rsquo;s parent, the object\u0026rsquo;s parent\u0026rsquo;s parent, and so on, are all \u0026lsquo;shown\u0026rsquo; to the end-user, i.e. subject to \u0026ldquo;exposure\u0026rdquo; if blocking or obscuring objects do not interpose between this object and the top of the window stack.   ATK_STATE_SINGLE_LINE 24 Indicates this (text) object can contain only a single line of text   ATK_STATE_STALE 25 Indicates that the information returned for this object may no longer be synchronized with the application state. This is implied if the object has STATE_TRANSIENT, and can also occur towards the end of the object peer\u0026rsquo;s lifecycle. It can also be used to indicate that the index associated with this object has changed since the user accessed the object (in lieu of \u0026ldquo;index-in-parent-changed\u0026rdquo; events).   ATK_STATE_TRANSIENT 26 Indicates this object is transient, i.e. a snapshot which may not emit events when its state changes. Data from objects with ATK_STATE_TRANSIENT should not be cached, since there may be no notification given when the cached data becomes obsolete.   ATK_STATE_VERTICAL 27 Indicates the orientation of this object is vertical   ATK_STATE_VISIBLE 28 Indicates this object is visible, e.g. has been explicitly marked for exposure to the user.   ATK_STATE_MANAGES_DESCENDANTS 29 Indicates that \u0026ldquo;active-descendant-changed\u0026rdquo; event is sent when children become \u0026lsquo;active\u0026rsquo; (i.e. are selected or navigated to onscreen). Used to prevent need to enumerate all children in very large containers, like tables. The presence of STATE_MANAGES_DESCENDANTS is an indication to the client. that the children should not, and need not, be enumerated by the client. Objects implementing this state are expected to provide relevant state notifications to listening clients, for instance notifications of visibility changes and activation of their contained child objects, without the client having previously requested references to those children.   ATK_STATE_INDETERMINATE 30 Indicates that the value, or some other quantifiable property, of this AtkObject cannot be fully determined. In the case of a large data set in which the total number of items in that set is unknown (e.g. 1 of 999+), implementors should expose the currently-known set size (999) along with this state. In the case of a check box, this state should be used to indicate that the check box is a tri-state check box which is currently neither checked nor unchecked.   ATK_STATE_TRUNCATED 31 Indicates that an object is truncated, e.g. a text value in a speradsheet cell.   ATK_STATE_REQUIRED 32 Indicates that explicit user interaction with an object is required by the user interface, e.g. a required field in a \u0026ldquo;web-form\u0026rdquo; interface.   ATK_STATE_INVALID_ENTRY 33 Indicates that the object has encountered an error condition due to failure of input validation. For instance, a form control may acquire this state in response to invalid or malformed user input.   ATK_STATE_SUPPORTS_AUTOCOMPLETION 34 Indicates that the object in question implements some form of ¨typeahead¨ or pre-selection behavior whereby entering the first character of one or more sub-elements causes those elements to scroll into view or become selected. Subsequent character input may narrow the selection further as long as one or more sub-elements match the string. This state is normally only useful and encountered on objects that implement Selection. In some cases the typeahead behavior may result in full or partial ¨completion¨ of the data in the input field, in which case these input events may trigger text-changed events from the AtkText interface. This state supplants @ATK_ROLE_AUTOCOMPLETE.   ATK_STATE_SELECTABLE_TEXT 35 Indicates that the object in question supports text selection. It should only be exposed on objects which implement the Text interface, in order to distinguish this state from @ATK_STATE_SELECTABLE, which infers that the object in question is a selectable child of an object which implements Selection. While similar, text selection and subelement selection are distinct operations.   ATK_STATE_DEFAULT 36 Indicates that the object is the \u0026ldquo;default\u0026rdquo; active component, i.e. the object which is activated by an end-user press of the \u0026ldquo;Enter\u0026rdquo; or \u0026ldquo;Return\u0026rdquo; key. Typically a \u0026ldquo;close\u0026rdquo; or \u0026ldquo;submit\u0026rdquo; button.   ATK_STATE_ANIMATED 37 Indicates that the object changes its appearance dynamically as an inherent part of its presentation. This state may come and go if an object is only temporarily animated on the way to a \u0026lsquo;final\u0026rsquo; onscreen presentation. @note some applications, notably content viewers, may not be able to detect all kinds of animated content. Therefore the absence of this state should not be taken as definitive evidence that the object\u0026rsquo;s visual representation is static; this state is advisory.   ATK_STATE_VISITED 38 Indicates that the object (typically a hyperlink) has already been \u0026lsquo;activated\u0026rsquo;, and/or its backing data has already been downloaded, rendered, or otherwise \u0026ldquo;visited\u0026rdquo;.   ATK_STATE_CHECKABLE 39 Indicates this object has the potential to be checked, such as a checkbox or toggle-able table cell. @Since: ATK-2.12   ATK_STATE_HAS_POPUP 40 Indicates that the object has a popup context menu or sub-level menu which may or may not be showing. This means that activation renders conditional content. Note that ordinary tooltips are not considered popups in this context. @Since: ATK-2.12   ATK_STATE_HAS_TOOLTIP 41 Indicates this object has a tooltip. @Since: ATK-2.16   ATK_STATE_READ_ONLY 42 Indicates that a widget which is ENABLED and SENSITIVE has a value which can be read, but not modified, by the user. Note that this state should only be applied to widget types whose value is normally directly user modifiable, such as check boxes, radio buttons, spin buttons, text input fields, and combo boxes, as a means to convey that the expected interaction with that widget is not possible. When the expected interaction with a widget does not include modification by the user, as is the case with labels and containers, ATK_STATE_READ_ONLY should not be applied. See also ATK_STATE_EDITABLE. @Since: ATK-2-16   ATK_STATE_LAST_DEFINED 43 Not a valid state, used for finding end of enumeration   C type: AtkStateType\n TextAttribute\nDescribes the text attributes supported\n  ATK_TEXT_ATTR_INVALID 0 Invalid attribute, like bad spelling or grammar.   ATK_TEXT_ATTR_LEFT_MARGIN 1 The pixel width of the left margin   ATK_TEXT_ATTR_RIGHT_MARGIN 2 The pixel width of the right margin   ATK_TEXT_ATTR_INDENT 3 The number of pixels that the text is indented   ATK_TEXT_ATTR_INVISIBLE 4 Either \u0026ldquo;true\u0026rdquo; or \u0026ldquo;false\u0026rdquo; indicating whether text is visible or not   ATK_TEXT_ATTR_EDITABLE 5 Either \u0026ldquo;true\u0026rdquo; or \u0026ldquo;false\u0026rdquo; indicating whether text is editable or not   ATK_TEXT_ATTR_PIXELS_ABOVE_LINES 6 Pixels of blank space to leave above each newline-terminated line.   ATK_TEXT_ATTR_PIXELS_BELOW_LINES 7 Pixels of blank space to leave below each newline-terminated line.   ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP 8 Pixels of blank space to leave between wrapped lines inside the same newline-terminated line (paragraph).   ATK_TEXT_ATTR_BG_FULL_HEIGHT 9 \u0026ldquo;true\u0026rdquo; or \u0026ldquo;false\u0026rdquo; whether to make the background color for each character the height of the highest font used on the current line, or the height of the font used for the current character.   ATK_TEXT_ATTR_RISE 10 Number of pixels that the characters are risen above the baseline   ATK_TEXT_ATTR_UNDERLINE 11 \u0026ldquo;none\u0026rdquo;, \u0026ldquo;single\u0026rdquo;, \u0026ldquo;double\u0026rdquo;, \u0026ldquo;low\u0026rdquo;, or \u0026ldquo;error\u0026rdquo;   ATK_TEXT_ATTR_STRIKETHROUGH 12 \u0026ldquo;true\u0026rdquo; or \u0026ldquo;false\u0026rdquo; whether the text is strikethrough   ATK_TEXT_ATTR_SIZE 13 The size of the characters in points. eg: 10   ATK_TEXT_ATTR_SCALE 14 The scale of the characters. The value is a string representation of a double   ATK_TEXT_ATTR_WEIGHT 15 The weight of the characters.   ATK_TEXT_ATTR_LANGUAGE 16 The language used   ATK_TEXT_ATTR_FAMILY_NAME 17 The font family name   ATK_TEXT_ATTR_BG_COLOR 18 The background color. The value is an RGB value of the format \u0026ldquo;%u,%u,%u\u0026rdquo;   ATK_TEXT_ATTR_FG_COLOR 19 The foreground color. The value is an RGB value of the format \u0026ldquo;%u,%u,%u\u0026rdquo;   ATK_TEXT_ATTR_BG_STIPPLE 20 \u0026ldquo;true\u0026rdquo; if a #GdkBitmap is set for stippling the background color.   ATK_TEXT_ATTR_FG_STIPPLE 21 \u0026ldquo;true\u0026rdquo; if a #GdkBitmap is set for stippling the foreground color.   ATK_TEXT_ATTR_WRAP_MODE 22 The wrap mode of the text, if any. Values are \u0026ldquo;none\u0026rdquo;, \u0026ldquo;char\u0026rdquo;, \u0026ldquo;word\u0026rdquo;, or \u0026ldquo;word_char\u0026rdquo;.   ATK_TEXT_ATTR_DIRECTION 23 The direction of the text, if set. Values are \u0026ldquo;none\u0026rdquo;, \u0026ldquo;ltr\u0026rdquo; or \u0026ldquo;rtl\u0026rdquo;   ATK_TEXT_ATTR_JUSTIFICATION 24 The justification of the text, if set. Values are \u0026ldquo;left\u0026rdquo;, \u0026ldquo;right\u0026rdquo;, \u0026ldquo;center\u0026rdquo; or \u0026ldquo;fill\u0026rdquo;   ATK_TEXT_ATTR_STRETCH 25 The stretch of the text, if set. Values are \u0026ldquo;ultra_condensed\u0026rdquo;, \u0026ldquo;extra_condensed\u0026rdquo;, \u0026ldquo;condensed\u0026rdquo;, \u0026ldquo;semi_condensed\u0026rdquo;, \u0026ldquo;normal\u0026rdquo;, \u0026ldquo;semi_expanded\u0026rdquo;, \u0026ldquo;expanded\u0026rdquo;, \u0026ldquo;extra_expanded\u0026rdquo; or \u0026ldquo;ultra_expanded\u0026rdquo;   ATK_TEXT_ATTR_VARIANT 26 The capitalization variant of the text, if set. Values are \u0026ldquo;normal\u0026rdquo; or \u0026ldquo;small_caps\u0026rdquo;   ATK_TEXT_ATTR_STYLE 27 The slant style of the text, if set. Values are \u0026ldquo;normal\u0026rdquo;, \u0026ldquo;oblique\u0026rdquo; or \u0026ldquo;italic\u0026rdquo;   ATK_TEXT_ATTR_LAST_DEFINED 28 not a valid text attribute, used for finding end of enumeration   C type: AtkTextAttribute\n TextBoundary\nText boundary types used for specifying boundaries for regions of text. This enumeration is deprecated since 2.9.4 and should not be used. Use AtkTextGranularity with #atk_text_get_string_at_offset instead.\n  ATK_TEXT_BOUNDARY_CHAR 0 Boundary is the boundary between characters (including non-printing characters)   ATK_TEXT_BOUNDARY_WORD_START 1 Boundary is the start (i.e. first character) of a word.   ATK_TEXT_BOUNDARY_WORD_END 2 Boundary is the end (i.e. last character) of a word.   ATK_TEXT_BOUNDARY_SENTENCE_START 3 Boundary is the first character in a sentence.   ATK_TEXT_BOUNDARY_SENTENCE_END 4 Boundary is the last (terminal) character in a sentence; in languages which use \u0026ldquo;sentence stop\u0026rdquo; punctuation such as English, the boundary is thus the \u0026lsquo;.\u0026rsquo;, \u0026lsquo;?\u0026rsquo;, or similar terminal punctuation character.   ATK_TEXT_BOUNDARY_LINE_START 5 Boundary is the initial character of the content or a character immediately following a newline, linefeed, or return character.   ATK_TEXT_BOUNDARY_LINE_END 6 Boundary is the linefeed, or return character.   C type: AtkTextBoundary\n TextClipType\nDescribes the type of clipping required.\n  ATK_TEXT_CLIP_NONE 0 No clipping to be done   ATK_TEXT_CLIP_MIN 1 Text clipped by min coordinate is omitted   ATK_TEXT_CLIP_MAX 2 Text clipped by max coordinate is omitted   ATK_TEXT_CLIP_BOTH 3 Only text fully within mix/max bound is retained   C type: AtkTextClipType\n TextGranularity\nText granularity types used for specifying the granularity of the region of text we are interested in.\n  ATK_TEXT_GRANULARITY_CHAR 0 Granularity is defined by the boundaries between characters (including non-printing characters)   ATK_TEXT_GRANULARITY_WORD 1 Granularity is defined by the boundaries of a word, starting at the beginning of the current word and finishing at the beginning of the following one, if present.   ATK_TEXT_GRANULARITY_SENTENCE 2 Granularity is defined by the boundaries of a sentence, starting at the beginning of the current sentence and finishing at the beginning of the following one, if present.   ATK_TEXT_GRANULARITY_LINE 3 Granularity is defined by the boundaries of a line, starting at the beginning of the current line and finishing at the beginning of the following one, if present.   ATK_TEXT_GRANULARITY_PARAGRAPH 4 Granularity is defined by the boundaries of a paragraph, starting at the beginning of the current paragraph and finishing at the beginning of the following one, if present.   C type: AtkTextGranularity\n ValueType\nDefault types for a given value. Those are defined in order to easily get localized strings to describe a given value or a given subrange, using atk_value_type_get_localized_name().\n  ATK_VALUE_VERY_WEAK 0   ATK_VALUE_WEAK 1   ATK_VALUE_ACCEPTABLE 2   ATK_VALUE_STRONG 3   ATK_VALUE_VERY_STRONG 4   ATK_VALUE_VERY_LOW 5   ATK_VALUE_LOW 6   ATK_VALUE_MEDIUM 7   ATK_VALUE_HIGH 8   ATK_VALUE_VERY_HIGH 9   ATK_VALUE_VERY_BAD 10   ATK_VALUE_BAD 11   ATK_VALUE_GOOD 12   ATK_VALUE_VERY_GOOD 13   ATK_VALUE_BEST 14   ATK_VALUE_LAST_DEFINED 15   C type: AtkValueType\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/cairo/enums/",
	"title": "enums",
	"tags": [],
	"description": "",
	"content": "Status\n  CAIRO_STATUS_SUCCESS 0   CAIRO_STATUS_NO_MEMORY 1   CAIRO_STATUS_INVALID_RESTORE 2   CAIRO_STATUS_INVALID_POP_GROUP 3   CAIRO_STATUS_NO_CURRENT_POINT 4   CAIRO_STATUS_INVALID_MATRIX 5   CAIRO_STATUS_INVALID_STATUS 6   CAIRO_STATUS_NULL_POINTER 7   CAIRO_STATUS_INVALID_STRING 8   CAIRO_STATUS_INVALID_PATH_DATA 9   CAIRO_STATUS_READ_ERROR 10   CAIRO_STATUS_WRITE_ERROR 11   CAIRO_STATUS_SURFACE_FINISHED 12   CAIRO_STATUS_SURFACE_TYPE_MISMATCH 13   CAIRO_STATUS_PATTERN_TYPE_MISMATCH 14   CAIRO_STATUS_INVALID_CONTENT 15   CAIRO_STATUS_INVALID_FORMAT 16   CAIRO_STATUS_INVALID_VISUAL 17   CAIRO_STATUS_FILE_NOT_FOUND 18   CAIRO_STATUS_INVALID_DASH 19   CAIRO_STATUS_INVALID_DSC_COMMENT 20   CAIRO_STATUS_INVALID_INDEX 21   CAIRO_STATUS_CLIP_NOT_REPRESENTABLE 22   CAIRO_STATUS_TEMP_FILE_ERROR 23   CAIRO_STATUS_INVALID_STRIDE 24   CAIRO_STATUS_FONT_TYPE_MISMATCH 25   CAIRO_STATUS_USER_FONT_IMMUTABLE 26   CAIRO_STATUS_USER_FONT_ERROR 27   CAIRO_STATUS_NEGATIVE_COUNT 28   CAIRO_STATUS_INVALID_CLUSTERS 29   CAIRO_STATUS_INVALID_SLANT 30   CAIRO_STATUS_INVALID_WEIGHT 31   CAIRO_STATUS_INVALID_SIZE 32   CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED 33   CAIRO_STATUS_DEVICE_TYPE_MISMATCH 34   CAIRO_STATUS_DEVICE_ERROR 35   CAIRO_STATUS_INVALID_MESH_CONSTRUCTION 36   CAIRO_STATUS_DEVICE_FINISHED 37   CAIRO_STATUS_JBIG2_GLOBAL_MISSING 38   C type: cairo_status_t\n Content\n  CAIRO_CONTENT_COLOR 4096   CAIRO_CONTENT_ALPHA 8192   CAIRO_CONTENT_COLOR_ALPHA 12288   C type: cairo_content_t\n Operator\n  CAIRO_OPERATOR_CLEAR 0   CAIRO_OPERATOR_SOURCE 1   CAIRO_OPERATOR_OVER 2   CAIRO_OPERATOR_IN 3   CAIRO_OPERATOR_OUT 4   CAIRO_OPERATOR_ATOP 5   CAIRO_OPERATOR_DEST 6   CAIRO_OPERATOR_DEST_OVER 7   CAIRO_OPERATOR_DEST_IN 8   CAIRO_OPERATOR_DEST_OUT 9   CAIRO_OPERATOR_DEST_ATOP 10   CAIRO_OPERATOR_XOR 11   CAIRO_OPERATOR_ADD 12   CAIRO_OPERATOR_SATURATE 13   CAIRO_OPERATOR_MULTIPLY 14   CAIRO_OPERATOR_SCREEN 15   CAIRO_OPERATOR_OVERLAY 16   CAIRO_OPERATOR_DARKEN 17   CAIRO_OPERATOR_LIGHTEN 18   CAIRO_OPERATOR_COLOR_DODGE 19   CAIRO_OPERATOR_COLOR_BURN 20   CAIRO_OPERATOR_HARD_LIGHT 21   CAIRO_OPERATOR_SOFT_LIGHT 22   CAIRO_OPERATOR_DIFFERENCE 23   CAIRO_OPERATOR_EXCLUSION 24   CAIRO_OPERATOR_HSL_HUE 25   CAIRO_OPERATOR_HSL_SATURATION 26   CAIRO_OPERATOR_HSL_COLOR 27   CAIRO_OPERATOR_HSL_LUMINOSITY 28   C type: cairo_operator_t\n Antialias\n  CAIRO_ANTIALIAS_DEFAULT 0   CAIRO_ANTIALIAS_NONE 1   CAIRO_ANTIALIAS_GRAY 2   CAIRO_ANTIALIAS_SUBPIXEL 3   CAIRO_ANTIALIAS_FAST 4   CAIRO_ANTIALIAS_GOOD 5   CAIRO_ANTIALIAS_BEST 6   C type: cairo_antialias_t\n FillRule\n  CAIRO_FILL_RULE_WINDING 0   CAIRO_FILL_RULE_EVEN_ODD 1   C type: cairo_fill_rule_t\n LineCap\n  CAIRO_LINE_CAP_BUTT 0   CAIRO_LINE_CAP_ROUND 1   CAIRO_LINE_CAP_SQUARE 2   C type: cairo_line_cap_t\n LineJoin\n  CAIRO_LINE_JOIN_MITER 0   CAIRO_LINE_JOIN_ROUND 1   CAIRO_LINE_JOIN_BEVEL 2   C type: cairo_line_join_t\n TextClusterFlags\n  CAIRO_TEXT_CLUSTER_FLAG_BACKWARD 1   C type: cairo_text_cluster_flags_t\n FontSlant\n  CAIRO_FONT_SLANT_NORMAL 0   CAIRO_FONT_SLANT_ITALIC 1   CAIRO_FONT_SLANT_OBLIQUE 2   C type: cairo_font_slant_t\n FontWeight\n  CAIRO_FONT_WEIGHT_NORMAL 0   CAIRO_FONT_WEIGHT_BOLD 1   C type: cairo_font_weight_t\n SubpixelOrder\n  CAIRO_SUBPIXEL_ORDER_DEFAULT 0   CAIRO_SUBPIXEL_ORDER_RGB 1   CAIRO_SUBPIXEL_ORDER_BGR 2   CAIRO_SUBPIXEL_ORDER_VRGB 3   CAIRO_SUBPIXEL_ORDER_VBGR 4   C type: cairo_subpixel_order_t\n HintStyle\n  CAIRO_HINT_STYLE_DEFAULT 0   CAIRO_HINT_STYLE_NONE 1   CAIRO_HINT_STYLE_SLIGHT 2   CAIRO_HINT_STYLE_MEDIUM 3   CAIRO_HINT_STYLE_FULL 4   C type: cairo_hint_style_t\n HintMetrics\n  CAIRO_HINT_METRICS_DEFAULT 0   CAIRO_HINT_METRICS_OFF 1   CAIRO_HINT_METRICS_ON 2   C type: cairo_hint_metrics_t\n FontType\n  CAIRO_FONT_TYPE_TOY 0   CAIRO_FONT_TYPE_FT 1   CAIRO_FONT_TYPE_WIN32 2   CAIRO_FONT_TYPE_QUARTZ 3   CAIRO_FONT_TYPE_USER 4   C type: cairo_font_type_t\n PathDataType\n  CAIRO_PATH_MOVE_TO 0   CAIRO_PATH_LINE_TO 1   CAIRO_PATH_CURVE_TO 2   CAIRO_PATH_CLOSE_PATH 3   C type: cairo_path_data_type_t\n DeviceType\n  CAIRO_DEVICE_TYPE_DRM 0   CAIRO_DEVICE_TYPE_GL 1   CAIRO_DEVICE_TYPE_SCRIPT 2   CAIRO_DEVICE_TYPE_XCB 3   CAIRO_DEVICE_TYPE_XLIB 4   CAIRO_DEVICE_TYPE_XML 5   CAIRO_DEVICE_TYPE_COGL 6   CAIRO_DEVICE_TYPE_WIN32 7   CAIRO_DEVICE_TYPE_INVALID -1   C type: cairo_device_type_t\n SurfaceType\n  CAIRO_SURFACE_TYPE_IMAGE 0   CAIRO_SURFACE_TYPE_PDF 1   CAIRO_SURFACE_TYPE_PS 2   CAIRO_SURFACE_TYPE_XLIB 3   CAIRO_SURFACE_TYPE_XCB 4   CAIRO_SURFACE_TYPE_GLITZ 5   CAIRO_SURFACE_TYPE_QUARTZ 6   CAIRO_SURFACE_TYPE_WIN32 7   CAIRO_SURFACE_TYPE_BEOS 8   CAIRO_SURFACE_TYPE_DIRECTFB 9   CAIRO_SURFACE_TYPE_SVG 10   CAIRO_SURFACE_TYPE_OS2 11   CAIRO_SURFACE_TYPE_WIN32_PRINTING 12   CAIRO_SURFACE_TYPE_QUARTZ_IMAGE 13   CAIRO_SURFACE_TYPE_SCRIPT 14   CAIRO_SURFACE_TYPE_QT 15   CAIRO_SURFACE_TYPE_RECORDING 16   CAIRO_SURFACE_TYPE_VG 17   CAIRO_SURFACE_TYPE_GL 18   CAIRO_SURFACE_TYPE_DRM 19   CAIRO_SURFACE_TYPE_TEE 20   CAIRO_SURFACE_TYPE_XML 21   CAIRO_SURFACE_TYPE_SKIA 22   CAIRO_SURFACE_TYPE_SUBSURFACE 23   CAIRO_SURFACE_TYPE_COGL 24   C type: cairo_surface_type_t\n Format\n  CAIRO_FORMAT_INVALID -1   CAIRO_FORMAT_ARGB32 0   CAIRO_FORMAT_RGB24 1   CAIRO_FORMAT_A8 2   CAIRO_FORMAT_A1 3   CAIRO_FORMAT_RGB16_565 4   CAIRO_FORMAT_RGB30 5   C type: cairo_format_t\n PatternType\n  CAIRO_PATTERN_TYPE_SOLID 0   CAIRO_PATTERN_TYPE_SURFACE 1   CAIRO_PATTERN_TYPE_LINEAR 2   CAIRO_PATTERN_TYPE_RADIAL 3   CAIRO_PATTERN_TYPE_MESH 4   CAIRO_PATTERN_TYPE_RASTER_SOURCE 5   C type: cairo_pattern_type_t\n Extend\n  CAIRO_EXTEND_NONE 0   CAIRO_EXTEND_REPEAT 1   CAIRO_EXTEND_REFLECT 2   CAIRO_EXTEND_PAD 3   C type: cairo_extend_t\n Filter\n  CAIRO_FILTER_FAST 0   CAIRO_FILTER_GOOD 1   CAIRO_FILTER_BEST 2   CAIRO_FILTER_NEAREST 3   CAIRO_FILTER_BILINEAR 4   CAIRO_FILTER_GAUSSIAN 5   C type: cairo_filter_t\n RegionOverlap\n  CAIRO_REGION_OVERLAP_IN 0   CAIRO_REGION_OVERLAP_OUT 1   CAIRO_REGION_OVERLAP_PART 2   C type: cairo_region_overlap_t\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gdk/enums/",
	"title": "enums",
	"tags": [],
	"description": "",
	"content": "AxisUse\nAn enumeration describing the way in which a device axis (valuator) maps onto the predefined valuator types that GTK+ understands.\nNote that the X and Y axes are not really needed; pointer devices report their location via the x/y members of events regardless. Whether X and Y are present as axes depends on the GDK backend.\n  GDK_AXIS_IGNORE 0 the axis is ignored.   GDK_AXIS_X 1 the axis is used as the x axis.   GDK_AXIS_Y 2 the axis is used as the y axis.   GDK_AXIS_PRESSURE 3 the axis is used for pressure information.   GDK_AXIS_XTILT 4 the axis is used for x tilt information.   GDK_AXIS_YTILT 5 the axis is used for y tilt information.   GDK_AXIS_WHEEL 6 the axis is used for wheel information.   GDK_AXIS_DISTANCE 7 the axis is used for pen/tablet distance information. (Since: 3.22)   GDK_AXIS_ROTATION 8 the axis is used for pen rotation information. (Since: 3.22)   GDK_AXIS_SLIDER 9 the axis is used for pen slider information. (Since: 3.22)   GDK_AXIS_LAST 10 a constant equal to the numerically highest axis value.   C type: GdkAxisUse\n ByteOrder\nA set of values describing the possible byte-orders for storing pixel values in memory.\n  GDK_LSB_FIRST 0 The values are stored with the least-significant byte first. For instance, the 32-bit value 0xffeecc would be stored in memory as 0xcc, 0xee, 0xff, 0x00.   GDK_MSB_FIRST 1 The values are stored with the most-significant byte first. For instance, the 32-bit value 0xffeecc would be stored in memory as 0x00, 0xff, 0xee, 0xcc.   C type: GdkByteOrder\n CrossingMode\nSpecifies the crossing mode for #GdkEventCrossing.\n  GDK_CROSSING_NORMAL 0 crossing because of pointer motion.   GDK_CROSSING_GRAB 1 crossing because a grab is activated.   GDK_CROSSING_UNGRAB 2 crossing because a grab is deactivated.   GDK_CROSSING_GTK_GRAB 3 crossing because a GTK+ grab is activated.   GDK_CROSSING_GTK_UNGRAB 4 crossing because a GTK+ grab is deactivated.   GDK_CROSSING_STATE_CHANGED 5 crossing because a GTK+ widget changed state (e.g. sensitivity).   GDK_CROSSING_TOUCH_BEGIN 6 crossing because a touch sequence has begun, this event is synthetic as the pointer might have not left the window.   GDK_CROSSING_TOUCH_END 7 crossing because a touch sequence has ended, this event is synthetic as the pointer might have not left the window.   GDK_CROSSING_DEVICE_SWITCH 8 crossing because of a device switch (i.e. a mouse taking control of the pointer after a touch device), this event is synthetic as the pointer didn’t leave the window.   C type: GdkCrossingMode\n CursorType\nPredefined cursors.\nNote that these IDs are directly taken from the X cursor font, and many of these cursors are either not useful, or are not available on other platforms.\nThe recommended way to create cursors is to use gdk_cursor_new_from_name().\n  GDK_X_CURSOR 0    GDK_ARROW 2    GDK_BASED_ARROW_DOWN 4    GDK_BASED_ARROW_UP 6    GDK_BOAT 8    GDK_BOGOSITY 10    GDK_BOTTOM_LEFT_CORNER 12    GDK_BOTTOM_RIGHT_CORNER 14    GDK_BOTTOM_SIDE 16    GDK_BOTTOM_TEE 18    GDK_BOX_SPIRAL 20    GDK_CENTER_PTR 22    GDK_CIRCLE 24    GDK_CLOCK 26    GDK_COFFEE_MUG 28    GDK_CROSS 30    GDK_CROSS_REVERSE 32    GDK_CROSSHAIR 34    GDK_DIAMOND_CROSS 36    GDK_DOT 38    GDK_DOTBOX 40    GDK_DOUBLE_ARROW 42    GDK_DRAFT_LARGE 44    GDK_DRAFT_SMALL 46    GDK_DRAPED_BOX 48    GDK_EXCHANGE 50    GDK_FLEUR 52    GDK_GOBBLER 54    GDK_GUMBY 56    GDK_HAND1 58    GDK_HAND2 60    GDK_HEART 62    GDK_ICON 64    GDK_IRON_CROSS 66    GDK_LEFT_PTR 68    GDK_LEFT_SIDE 70    GDK_LEFT_TEE 72    GDK_LEFTBUTTON 74    GDK_LL_ANGLE 76    GDK_LR_ANGLE 78    GDK_MAN 80    GDK_MIDDLEBUTTON 82    GDK_MOUSE 84    GDK_PENCIL 86    GDK_PIRATE 88    GDK_PLUS 90    GDK_QUESTION_ARROW 92    GDK_RIGHT_PTR 94    GDK_RIGHT_SIDE 96    GDK_RIGHT_TEE 98    GDK_RIGHTBUTTON 100    GDK_RTL_LOGO 102    GDK_SAILBOAT 104    GDK_SB_DOWN_ARROW 106    GDK_SB_H_DOUBLE_ARROW 108    GDK_SB_LEFT_ARROW 110    GDK_SB_RIGHT_ARROW 112    GDK_SB_UP_ARROW 114    GDK_SB_V_DOUBLE_ARROW 116    GDK_SHUTTLE 118    GDK_SIZING 120    GDK_SPIDER 122    GDK_SPRAYCAN 124    GDK_STAR 126    GDK_TARGET 128    GDK_TCROSS 130    GDK_TOP_LEFT_ARROW 132    GDK_TOP_LEFT_CORNER 134    GDK_TOP_RIGHT_CORNER 136    GDK_TOP_SIDE 138    GDK_TOP_TEE 140    GDK_TREK 142    GDK_UL_ANGLE 144    GDK_UMBRELLA 146    GDK_UR_ANGLE 148    GDK_WATCH 150    GDK_XTERM 152    GDK_LAST_CURSOR 153 last cursor type   GDK_BLANK_CURSOR -2 Blank cursor. Since 2.16   GDK_CURSOR_IS_PIXMAP -1 type of cursors constructed with gdk_cursor_new_from_pixbuf()   C type: GdkCursorType\n DevicePadFeature\nA pad feature.\n  GDK_DEVICE_PAD_FEATURE_BUTTON 0 a button   GDK_DEVICE_PAD_FEATURE_RING 1 a ring-shaped interactive area   GDK_DEVICE_PAD_FEATURE_STRIP 2 a straight interactive area   since 3.22\nC type: GdkDevicePadFeature\n DeviceToolType\nIndicates the specific type of tool being used being a tablet. Such as an airbrush, pencil, etc.\n  GDK_DEVICE_TOOL_TYPE_UNKNOWN 0 Tool is of an unknown type.   GDK_DEVICE_TOOL_TYPE_PEN 1 Tool is a standard tablet stylus.   GDK_DEVICE_TOOL_TYPE_ERASER 2 Tool is standard tablet eraser.   GDK_DEVICE_TOOL_TYPE_BRUSH 3 Tool is a brush stylus.   GDK_DEVICE_TOOL_TYPE_PENCIL 4 Tool is a pencil stylus.   GDK_DEVICE_TOOL_TYPE_AIRBRUSH 5 Tool is an airbrush stylus.   GDK_DEVICE_TOOL_TYPE_MOUSE 6 Tool is a mouse.   GDK_DEVICE_TOOL_TYPE_LENS 7 Tool is a lens cursor.   since 3.22\nC type: GdkDeviceToolType\n DeviceType\nIndicates the device type. See [above][GdkDeviceManager.description] for more information about the meaning of these device types.\n  GDK_DEVICE_TYPE_MASTER 0 Device is a master (or virtual) device. There will be an associated focus indicator on the screen.   GDK_DEVICE_TYPE_SLAVE 1 Device is a slave (or physical) device.   GDK_DEVICE_TYPE_FLOATING 2 Device is a physical device, currently not attached to any virtual device.   C type: GdkDeviceType\n DragCancelReason\nUsed in #GdkDragContext to the reason of a cancelled DND operation.\n  GDK_DRAG_CANCEL_NO_TARGET 0 There is no suitable drop target.   GDK_DRAG_CANCEL_USER_CANCELLED 1 Drag cancelled by the user   GDK_DRAG_CANCEL_ERROR 2 Unspecified error.   since 3.20\nC type: GdkDragCancelReason\n DragProtocol\nUsed in #GdkDragContext to indicate the protocol according to which DND is done.\n  GDK_DRAG_PROTO_NONE 0 no protocol.   GDK_DRAG_PROTO_MOTIF 1 The Motif DND protocol. No longer supported   GDK_DRAG_PROTO_XDND 2 The Xdnd protocol.   GDK_DRAG_PROTO_ROOTWIN 3 An extension to the Xdnd protocol for unclaimed root window drops.   GDK_DRAG_PROTO_WIN32_DROPFILES 4 The simple WM_DROPFILES protocol.   GDK_DRAG_PROTO_OLE2 5 The complex OLE2 DND protocol (not implemented).   GDK_DRAG_PROTO_LOCAL 6 Intra-application DND.   GDK_DRAG_PROTO_WAYLAND 7 Wayland DND protocol.   C type: GdkDragProtocol\n EventType\nSpecifies the type of the event.\nDo not confuse these events with the signals that GTK+ widgets emit. Although many of these events result in corresponding signals being emitted, the events are often transformed or filtered along the way.\nIn some language bindings, the values %GDK_2BUTTON_PRESS and %GDK_3BUTTON_PRESS would translate into something syntactically invalid (eg Gdk.EventType.2ButtonPress, where a symbol is not allowed to start with a number). In that case, the aliases %GDK_DOUBLE_BUTTON_PRESS and %GDK_TRIPLE_BUTTON_PRESS can be used instead.\n  GDK_NOTHING -1 a special code to indicate a null event.   GDK_DELETE 0 the window manager has requested that the toplevel window be hidden or destroyed, usually when the user clicks on a special icon in the title bar.   GDK_DESTROY 1 the window has been destroyed.   GDK_EXPOSE 2 all or part of the window has become visible and needs to be redrawn.   GDK_MOTION_NOTIFY 3 the pointer (usually a mouse) has moved.   GDK_BUTTON_PRESS 4 a mouse button has been pressed.   GDK_2BUTTON_PRESS 5 a mouse button has been double-clicked (clicked twice within a short period of time). Note that each click also generates a %GDK_BUTTON_PRESS event.   GDK_DOUBLE_BUTTON_PRESS 5 alias for %GDK_2BUTTON_PRESS, added in 3.6.   GDK_3BUTTON_PRESS 6 a mouse button has been clicked 3 times in a short period of time. Note that each click also generates a %GDK_BUTTON_PRESS event.   GDK_TRIPLE_BUTTON_PRESS 6 alias for %GDK_3BUTTON_PRESS, added in 3.6.   GDK_BUTTON_RELEASE 7 a mouse button has been released.   GDK_KEY_PRESS 8 a key has been pressed.   GDK_KEY_RELEASE 9 a key has been released.   GDK_ENTER_NOTIFY 10 the pointer has entered the window.   GDK_LEAVE_NOTIFY 11 the pointer has left the window.   GDK_FOCUS_CHANGE 12 the keyboard focus has entered or left the window.   GDK_CONFIGURE 13 the size, position or stacking order of the window has changed. Note that GTK+ discards these events for %GDK_WINDOW_CHILD windows.   GDK_MAP 14 the window has been mapped.   GDK_UNMAP 15 the window has been unmapped.   GDK_PROPERTY_NOTIFY 16 a property on the window has been changed or deleted.   GDK_SELECTION_CLEAR 17 the application has lost ownership of a selection.   GDK_SELECTION_REQUEST 18 another application has requested a selection.   GDK_SELECTION_NOTIFY 19 a selection has been received.   GDK_PROXIMITY_IN 20 an input device has moved into contact with a sensing surface (e.g. a touchscreen or graphics tablet).   GDK_PROXIMITY_OUT 21 an input device has moved out of contact with a sensing surface.   GDK_DRAG_ENTER 22 the mouse has entered the window while a drag is in progress.   GDK_DRAG_LEAVE 23 the mouse has left the window while a drag is in progress.   GDK_DRAG_MOTION 24 the mouse has moved in the window while a drag is in progress.   GDK_DRAG_STATUS 25 the status of the drag operation initiated by the window has changed.   GDK_DROP_START 26 a drop operation onto the window has started.   GDK_DROP_FINISHED 27 the drop operation initiated by the window has completed.   GDK_CLIENT_EVENT 28 a message has been received from another application.   GDK_VISIBILITY_NOTIFY 29 the window visibility status has changed.   GDK_SCROLL 31 the scroll wheel was turned   GDK_WINDOW_STATE 32 the state of a window has changed. See #GdkWindowState for the possible window states   GDK_SETTING 33 a setting has been modified.   GDK_OWNER_CHANGE 34 the owner of a selection has changed. This event type was added in 2.6   GDK_GRAB_BROKEN 35 a pointer or keyboard grab was broken. This event type was added in 2.8.   GDK_DAMAGE 36 the content of the window has been changed. This event type was added in 2.14.   GDK_TOUCH_BEGIN 37 A new touch event sequence has just started. This event type was added in 3.4.   GDK_TOUCH_UPDATE 38 A touch event sequence has been updated. This event type was added in 3.4.   GDK_TOUCH_END 39 A touch event sequence has finished. This event type was added in 3.4.   GDK_TOUCH_CANCEL 40 A touch event sequence has been canceled. This event type was added in 3.4.   GDK_TOUCHPAD_SWIPE 41 A touchpad swipe gesture event, the current state is determined by its phase field. This event type was added in 3.18.   GDK_TOUCHPAD_PINCH 42 A touchpad pinch gesture event, the current state is determined by its phase field. This event type was added in 3.18.   GDK_PAD_BUTTON_PRESS 43 A tablet pad button press event. This event type was added in 3.22.   GDK_PAD_BUTTON_RELEASE 44 A tablet pad button release event. This event type was added in 3.22.   GDK_PAD_RING 45 A tablet pad axis event from a \u0026ldquo;ring\u0026rdquo;. This event type was added in 3.22.   GDK_PAD_STRIP 46 A tablet pad axis event from a \u0026ldquo;strip\u0026rdquo;. This event type was added in 3.22.   GDK_PAD_GROUP_MODE 47 A tablet pad group mode change. This event type was added in 3.22.   GDK_EVENT_LAST 48 marks the end of the GdkEventType enumeration. Added in 2.18   C type: GdkEventType\n FilterReturn\nSpecifies the result of applying a #GdkFilterFunc to a native event.\n  GDK_FILTER_CONTINUE 0 event not handled, continue processing.   GDK_FILTER_TRANSLATE 1 native event translated into a GDK event and stored in the event structure that was passed in.   GDK_FILTER_REMOVE 2 event handled, terminate processing.   C type: GdkFilterReturn\n FullscreenMode\nIndicates which monitor (in a multi-head setup) a window should span over when in fullscreen mode.\n  GDK_FULLSCREEN_ON_CURRENT_MONITOR 0 Fullscreen on current monitor only.   GDK_FULLSCREEN_ON_ALL_MONITORS 1 Span across all monitors when fullscreen.   since 3.8\nC type: GdkFullscreenMode\n GLError\nError enumeration for #GdkGLContext.\n  GDK_GL_ERROR_NOT_AVAILABLE 0 OpenGL support is not available   GDK_GL_ERROR_UNSUPPORTED_FORMAT 1 The requested visual format is not supported   GDK_GL_ERROR_UNSUPPORTED_PROFILE 2 The requested profile is not supported   since 3.16\nC type: GdkGLError\n GrabOwnership\nDefines how device grabs interact with other devices.\n  GDK_OWNERSHIP_NONE 0 All other devices’ events are allowed.   GDK_OWNERSHIP_WINDOW 1 Other devices’ events are blocked for the grab window.   GDK_OWNERSHIP_APPLICATION 2 Other devices’ events are blocked for the whole application.   C type: GdkGrabOwnership\n GrabStatus\nReturned by gdk_device_grab(), gdk_pointer_grab() and gdk_keyboard_grab() to indicate success or the reason for the failure of the grab attempt.\n  GDK_GRAB_SUCCESS 0 the resource was successfully grabbed.   GDK_GRAB_ALREADY_GRABBED 1 the resource is actively grabbed by another client.   GDK_GRAB_INVALID_TIME 2 the resource was grabbed more recently than the specified time.   GDK_GRAB_NOT_VIEWABLE 3 the grab window or the @confine_to window are not viewable.   GDK_GRAB_FROZEN 4 the resource is frozen by an active grab of another client.   GDK_GRAB_FAILED 5 the grab failed for some other reason. Since 3.16   C type: GdkGrabStatus\n Gravity\nDefines the reference point of a window and the meaning of coordinates passed to gtk_window_move(). See gtk_window_move() and the \u0026ldquo;implementation notes\u0026rdquo; section of the Extended Window Manager Hints specification for more details.\n  GDK_GRAVITY_NORTH_WEST 1 the reference point is at the top left corner.   GDK_GRAVITY_NORTH 2 the reference point is in the middle of the top edge.   GDK_GRAVITY_NORTH_EAST 3 the reference point is at the top right corner.   GDK_GRAVITY_WEST 4 the reference point is at the middle of the left edge.   GDK_GRAVITY_CENTER 5 the reference point is at the center of the window.   GDK_GRAVITY_EAST 6 the reference point is at the middle of the right edge.   GDK_GRAVITY_SOUTH_WEST 7 the reference point is at the lower left corner.   GDK_GRAVITY_SOUTH 8 the reference point is at the middle of the lower edge.   GDK_GRAVITY_SOUTH_EAST 9 the reference point is at the lower right corner.   GDK_GRAVITY_STATIC 10 the reference point is at the top left corner of the window itself, ignoring window manager decorations.   C type: GdkGravity\n InputMode\nAn enumeration that describes the mode of an input device.\n  GDK_MODE_DISABLED 0 the device is disabled and will not report any events.   GDK_MODE_SCREEN 1 the device is enabled. The device’s coordinate space maps to the entire screen.   GDK_MODE_WINDOW 2 the device is enabled. The device’s coordinate space is mapped to a single window. The manner in which this window is chosen is undefined, but it will typically be the same way in which the focus window for key events is determined.   C type: GdkInputMode\n InputSource\nAn enumeration describing the type of an input device in general terms.\n  GDK_SOURCE_MOUSE 0 the device is a mouse. (This will be reported for the core pointer, even if it is something else, such as a trackball.)   GDK_SOURCE_PEN 1 the device is a stylus of a graphics tablet or similar device.   GDK_SOURCE_ERASER 2 the device is an eraser. Typically, this would be the other end of a stylus on a graphics tablet.   GDK_SOURCE_CURSOR 3 the device is a graphics tablet “puck” or similar device.   GDK_SOURCE_KEYBOARD 4 the device is a keyboard.   GDK_SOURCE_TOUCHSCREEN 5 the device is a direct-input touch device, such as a touchscreen or tablet. This device type has been added in 3.4.   GDK_SOURCE_TOUCHPAD 6 the device is an indirect touch device, such as a touchpad. This device type has been added in 3.4.   GDK_SOURCE_TRACKPOINT 7 the device is a trackpoint. This device type has been added in 3.22   GDK_SOURCE_TABLET_PAD 8 the device is a \u0026ldquo;pad\u0026rdquo;, a collection of buttons, rings and strips found in drawing tablets. This device type has been added in 3.22.   C type: GdkInputSource\n ModifierIntent\nThis enum is used with gdk_keymap_get_modifier_mask() in order to determine what modifiers the currently used windowing system backend uses for particular purposes. For example, on X11/Windows, the Control key is used for invoking menu shortcuts (accelerators), whereas on Apple computers it’s the Command key (which correspond to %GDK_CONTROL_MASK and %GDK_MOD2_MASK, respectively).\n  GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR 0 the primary modifier used to invoke menu accelerators.   GDK_MODIFIER_INTENT_CONTEXT_MENU 1 the modifier used to invoke context menus. Note that mouse button 3 always triggers context menus. When this modifier is not 0, it additionally triggers context menus when used with mouse button 1.   GDK_MODIFIER_INTENT_EXTEND_SELECTION 2 the modifier used to extend selections using modifier-click or modifier-cursor-key   GDK_MODIFIER_INTENT_MODIFY_SELECTION 3 the modifier used to modify selections, which in most cases means toggling the clicked item into or out of the selection.   GDK_MODIFIER_INTENT_NO_TEXT_INPUT 4 when any of these modifiers is pressed, the key event cannot produce a symbol directly. This is meant to be used for input methods, and for use cases like typeahead search.   GDK_MODIFIER_INTENT_SHIFT_GROUP 5 the modifier that switches between keyboard groups (AltGr on X11/Windows and Option/Alt on OS X).   GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK 6 The set of modifier masks accepted as modifiers in accelerators. Needed because Command is mapped to MOD2 on OSX, which is widely used, but on X11 MOD2 is NumLock and using that for a mod key is problematic at best. Ref: https://bugzilla.gnome.org/show_bug.cgi?id=736125.   since 3.4\nC type: GdkModifierIntent\n NotifyType\nSpecifies the kind of crossing for #GdkEventCrossing.\nSee the X11 protocol specification of LeaveNotify for full details of crossing event generation.\n  GDK_NOTIFY_ANCESTOR 0 the window is entered from an ancestor or left towards an ancestor.   GDK_NOTIFY_VIRTUAL 1 the pointer moves between an ancestor and an inferior of the window.   GDK_NOTIFY_INFERIOR 2 the window is entered from an inferior or left towards an inferior.   GDK_NOTIFY_NONLINEAR 3 the window is entered from or left towards a window which is neither an ancestor nor an inferior.   GDK_NOTIFY_NONLINEAR_VIRTUAL 4 the pointer moves between two windows which are not ancestors of each other and the window is part of the ancestor chain between one of these windows and their least common ancestor.   GDK_NOTIFY_UNKNOWN 5 an unknown type of enter/leave event occurred.   C type: GdkNotifyType\n OwnerChange\nSpecifies why a selection ownership was changed.\n  GDK_OWNER_CHANGE_NEW_OWNER 0 some other app claimed the ownership   GDK_OWNER_CHANGE_DESTROY 1 the window was destroyed   GDK_OWNER_CHANGE_CLOSE 2 the client was closed   C type: GdkOwnerChange\n PropMode\nDescribes how existing data is combined with new data when using gdk_property_change().\n  GDK_PROP_MODE_REPLACE 0 the new data replaces the existing data.   GDK_PROP_MODE_PREPEND 1 the new data is prepended to the existing data.   GDK_PROP_MODE_APPEND 2 the new data is appended to the existing data.   C type: GdkPropMode\n PropertyState\nSpecifies the type of a property change for a #GdkEventProperty.\n  GDK_PROPERTY_NEW_VALUE 0 the property value was changed.   GDK_PROPERTY_DELETE 1 the property was deleted.   C type: guint\n ScrollDirection\nSpecifies the direction for #GdkEventScroll.\n  GDK_SCROLL_UP 0 the window is scrolled up.   GDK_SCROLL_DOWN 1 the window is scrolled down.   GDK_SCROLL_LEFT 2 the window is scrolled to the left.   GDK_SCROLL_RIGHT 3 the window is scrolled to the right.   GDK_SCROLL_SMOOTH 4 the scrolling is determined by the delta values in #GdkEventScroll. See gdk_event_get_scroll_deltas(). Since: 3.4   C type: GdkScrollDirection\n SettingAction\nSpecifies the kind of modification applied to a setting in a #GdkEventSetting.\n  GDK_SETTING_ACTION_NEW 0 a setting was added.   GDK_SETTING_ACTION_CHANGED 1 a setting was changed.   GDK_SETTING_ACTION_DELETED 2 a setting was deleted.   C type: GdkSettingAction\n Status\n  GDK_OK 0   GDK_ERROR -1   GDK_ERROR_PARAM -2   GDK_ERROR_FILE -3   GDK_ERROR_MEM -4   C type: GdkStatus\n SubpixelLayout\nThis enumeration describes how the red, green and blue components of physical pixels on an output device are laid out.\n  GDK_SUBPIXEL_LAYOUT_UNKNOWN 0 The layout is not known   GDK_SUBPIXEL_LAYOUT_NONE 1 Not organized in this way   GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB 2 The layout is horizontal, the order is RGB   GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR 3 The layout is horizontal, the order is BGR   GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB 4 The layout is vertical, the order is RGB   GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR 5 The layout is vertical, the order is BGR   since 3.22\nC type: GdkSubpixelLayout\n TouchpadGesturePhase\nSpecifies the current state of a touchpad gesture. All gestures are guaranteed to begin with an event with phase %GDK_TOUCHPAD_GESTURE_PHASE_BEGIN, followed by 0 or several events with phase %GDK_TOUCHPAD_GESTURE_PHASE_UPDATE.\nA finished gesture may have 2 possible outcomes, an event with phase %GDK_TOUCHPAD_GESTURE_PHASE_END will be emitted when the gesture is considered successful, this should be used as the hint to perform any permanent changes.\nCancelled gestures may be so for a variety of reasons, due to hardware or the compositor, or due to the gesture recognition layers hinting the gesture did not finish resolutely (eg. a 3rd finger being added during a pinch gesture). In these cases, the last event will report the phase %GDK_TOUCHPAD_GESTURE_PHASE_CANCEL, this should be used as a hint to undo any visible/permanent changes that were done throughout the progress of the gesture.\nSee also #GdkEventTouchpadSwipe and #GdkEventTouchpadPinch.\n  GDK_TOUCHPAD_GESTURE_PHASE_BEGIN 0 The gesture has begun.   GDK_TOUCHPAD_GESTURE_PHASE_UPDATE 1 The gesture has been updated.   GDK_TOUCHPAD_GESTURE_PHASE_END 2 The gesture was finished, changes should be permanently applied.   GDK_TOUCHPAD_GESTURE_PHASE_CANCEL 3 The gesture was cancelled, all changes should be undone.   C type: GdkTouchpadGesturePhase\n VisibilityState\nSpecifies the visiblity status of a window for a #GdkEventVisibility.\n  GDK_VISIBILITY_UNOBSCURED 0 the window is completely visible.   GDK_VISIBILITY_PARTIAL 1 the window is partially visible.   GDK_VISIBILITY_FULLY_OBSCURED 2 the window is not visible at all.   C type: GdkVisibilityState\n VisualType\nA set of values that describe the manner in which the pixel values for a visual are converted into RGB values for display.\n  GDK_VISUAL_STATIC_GRAY 0 Each pixel value indexes a grayscale value directly.   GDK_VISUAL_GRAYSCALE 1 Each pixel is an index into a color map that maps pixel values into grayscale values. The color map can be changed by an application.   GDK_VISUAL_STATIC_COLOR 2 Each pixel value is an index into a predefined, unmodifiable color map that maps pixel values into RGB values.   GDK_VISUAL_PSEUDO_COLOR 3 Each pixel is an index into a color map that maps pixel values into rgb values. The color map can be changed by an application.   GDK_VISUAL_TRUE_COLOR 4 Each pixel value directly contains red, green, and blue components. Use gdk_visual_get_red_pixel_details(), etc, to obtain information about how the components are assembled into a pixel value.   GDK_VISUAL_DIRECT_COLOR 5 Each pixel value contains red, green, and blue components as for %GDK_VISUAL_TRUE_COLOR, but the components are mapped via a color table into the final output table instead of being converted directly.   C type: GdkVisualType\n WindowEdge\nDetermines a window edge or corner.\n  GDK_WINDOW_EDGE_NORTH_WEST 0 the top left corner.   GDK_WINDOW_EDGE_NORTH 1 the top edge.   GDK_WINDOW_EDGE_NORTH_EAST 2 the top right corner.   GDK_WINDOW_EDGE_WEST 3 the left edge.   GDK_WINDOW_EDGE_EAST 4 the right edge.   GDK_WINDOW_EDGE_SOUTH_WEST 5 the lower left corner.   GDK_WINDOW_EDGE_SOUTH 6 the lower edge.   GDK_WINDOW_EDGE_SOUTH_EAST 7 the lower right corner.   C type: GdkWindowEdge\n WindowType\nDescribes the kind of window.\n  GDK_WINDOW_ROOT 0 root window; this window has no parent, covers the entire screen, and is created by the window system   GDK_WINDOW_TOPLEVEL 1 toplevel window (used to implement #GtkWindow)   GDK_WINDOW_CHILD 2 child window (used to implement e.g. #GtkEntry)   GDK_WINDOW_TEMP 3 override redirect temporary window (used to implement #GtkMenu)   GDK_WINDOW_FOREIGN 4 foreign window (see gdk_window_foreign_new())   GDK_WINDOW_OFFSCREEN 5 offscreen window (see [Offscreen Windows][OFFSCREEN-WINDOWS]). Since 2.18   GDK_WINDOW_SUBSURFACE 6 subsurface-based window; This window is visually tied to a toplevel, and is moved/stacked with it. Currently this window type is only implemented in Wayland. Since 3.14   C type: GdkWindowType\n WindowTypeHint\nThese are hints for the window manager that indicate what type of function the window has. The window manager can use this when determining decoration and behaviour of the window. The hint must be set before mapping the window.\nSee the Extended Window Manager Hints specification for more details about window types.\n  GDK_WINDOW_TYPE_HINT_NORMAL 0 Normal toplevel window.   GDK_WINDOW_TYPE_HINT_DIALOG 1 Dialog window.   GDK_WINDOW_TYPE_HINT_MENU 2 Window used to implement a menu; GTK+ uses this hint only for torn-off menus, see #GtkTearoffMenuItem.   GDK_WINDOW_TYPE_HINT_TOOLBAR 3 Window used to implement toolbars.   GDK_WINDOW_TYPE_HINT_SPLASHSCREEN 4 Window used to display a splash screen during application startup.   GDK_WINDOW_TYPE_HINT_UTILITY 5 Utility windows which are not detached toolbars or dialogs.   GDK_WINDOW_TYPE_HINT_DOCK 6 Used for creating dock or panel windows.   GDK_WINDOW_TYPE_HINT_DESKTOP 7 Used for creating the desktop background window.   GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU 8 A menu that belongs to a menubar.   GDK_WINDOW_TYPE_HINT_POPUP_MENU 9 A menu that does not belong to a menubar, e.g. a context menu.   GDK_WINDOW_TYPE_HINT_TOOLTIP 10 A tooltip.   GDK_WINDOW_TYPE_HINT_NOTIFICATION 11 A notification - typically a “bubble” that belongs to a status icon.   GDK_WINDOW_TYPE_HINT_COMBO 12 A popup from a combo box.   GDK_WINDOW_TYPE_HINT_DND 13 A window that is used to implement a DND cursor.   C type: GdkWindowTypeHint\n WindowWindowClass\n@GDK_INPUT_OUTPUT windows are the standard kind of window you might expect. Such windows receive events and are also displayed on screen. @GDK_INPUT_ONLY windows are invisible; they are usually placed above other windows in order to trap or filter the events. You can’t draw on @GDK_INPUT_ONLY windows.\n  GDK_INPUT_OUTPUT 0 window for graphics and events   GDK_INPUT_ONLY 1 window for events only   C type: GdkWindowWindowClass\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gdkpixbuf/enums/",
	"title": "enums",
	"tags": [],
	"description": "",
	"content": "Colorspace\nThis enumeration defines the color spaces that are supported by the gdk-pixbuf library. Currently only RGB is supported.\n  GDK_COLORSPACE_RGB 0 Indicates a red/green/blue additive color space.   C type: GdkColorspace\n InterpType\nThis enumeration describes the different interpolation modes that can be used with the scaling functions. @GDK_INTERP_NEAREST is the fastest scaling method, but has horrible quality when scaling down. @GDK_INTERP_BILINEAR is the best choice if you aren\u0026rsquo;t sure what to choose, it has a good speed/quality balance.\n Cubic filtering is missing from the list; hyperbolic interpolation is just as fast and results in higher quality. \n  GDK_INTERP_NEAREST 0 Nearest neighbor sampling; this is the fastest and lowest quality mode. Quality is normally unacceptable when scaling down, but may be OK when scaling up.   GDK_INTERP_TILES 1 This is an accurate simulation of the PostScript image operator without any interpolation enabled. Each pixel is rendered as a tiny parallelogram of solid color, the edges of which are implemented with antialiasing. It resembles nearest neighbor for enlargement, and bilinear for reduction.   GDK_INTERP_BILINEAR 2 Best quality/speed balance; use this mode by default. Bilinear interpolation. For enlargement, it is equivalent to point-sampling the ideal bilinear-interpolated image. For reduction, it is equivalent to laying down small tiles and integrating over the coverage area.   GDK_INTERP_HYPER 3 This is the slowest and highest quality reconstruction function. It is derived from the hyperbolic filters in Wolberg\u0026rsquo;s \u0026ldquo;Digital Image Warping\u0026rdquo;, and is formally defined as the hyperbolic-filter sampling the ideal hyperbolic-filter interpolated image (the filter is designed to be idempotent for 1:1 pixel mapping).   C type: GdkInterpType\n PixbufAlphaMode\nThese values can be passed to gdk_pixbuf_xlib_render_to_drawable_alpha() to control how the alpha channel of an image should be handled. This function can create a bilevel clipping mask (black and white) and use it while painting the image. In the future, when the X Window System gets an alpha channel extension, it will be possible to do full alpha compositing onto arbitrary drawables. For now both cases fall back to a bilevel clipping mask.\n  GDK_PIXBUF_ALPHA_BILEVEL 0 A bilevel clipping mask (black and white) will be created and used to draw the image. Pixels below 0.5 opacity will be considered fully transparent, and all others will be considered fully opaque.   GDK_PIXBUF_ALPHA_FULL 1 For now falls back to #GDK_PIXBUF_ALPHA_BILEVEL. In the future it will do full alpha compositing.   C type: GdkPixbufAlphaMode\n PixbufError\nAn error code in the #GDK_PIXBUF_ERROR domain. Many gdk-pixbuf operations can cause errors in this domain, or in the #G_FILE_ERROR domain.\n  GDK_PIXBUF_ERROR_CORRUPT_IMAGE 0 An image file was broken somehow.   GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY 1 Not enough memory.   GDK_PIXBUF_ERROR_BAD_OPTION 2 A bad option was passed to a pixbuf save module.   GDK_PIXBUF_ERROR_UNKNOWN_TYPE 3 Unknown image type.   GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION 4 Don\u0026rsquo;t know how to perform the given operation on the type of image at hand.   GDK_PIXBUF_ERROR_FAILED 5 Generic failure code, something went wrong.   GDK_PIXBUF_ERROR_INCOMPLETE_ANIMATION 6 Only part of the animation was loaded.   C type: GdkPixbufError\n PixbufRotation\nThe possible rotations which can be passed to gdk_pixbuf_rotate_simple(). To make them easier to use, their numerical values are the actual degrees.\n  GDK_PIXBUF_ROTATE_NONE 0 No rotation.   GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE 90 Rotate by 90 degrees.   GDK_PIXBUF_ROTATE_UPSIDEDOWN 180 Rotate by 180 degrees.   GDK_PIXBUF_ROTATE_CLOCKWISE 270 Rotate by 270 degrees.   C type: GdkPixbufRotation\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gio/enums/",
	"title": "enums",
	"tags": [],
	"description": "",
	"content": "BusType\nAn enumeration for well-known message buses.\n  BUS_TYPE_STARTER -1 An alias for the message bus that activated the process, if any.   BUS_TYPE_NONE 0 Not a message bus.   BUS_TYPE_SYSTEM 1 The system-wide message bus.   BUS_TYPE_SESSION 2 The login session message bus.   since 2.26\nC type: GBusType\n ConverterResult\nResults returned from g_converter_convert().\n  CONVERTER_ERROR 0 There was an error during conversion.   CONVERTER_CONVERTED 1 Some data was consumed or produced   CONVERTER_FINISHED 2 The conversion is finished   CONVERTER_FLUSHED 3 Flushing is finished   since 2.24\nC type: GConverterResult\n CredentialsType\nEnumeration describing different kinds of native credential types.\n  CREDENTIALS_TYPE_INVALID 0 Indicates an invalid native credential type.   CREDENTIALS_TYPE_LINUX_UCRED 1 The native credentials type is a struct ucred.   CREDENTIALS_TYPE_FREEBSD_CMSGCRED 2 The native credentials type is a struct cmsgcred.   CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED 3 The native credentials type is a struct sockpeercred. Added in 2.30.   CREDENTIALS_TYPE_SOLARIS_UCRED 4 The native credentials type is a ucred_t. Added in 2.40.   CREDENTIALS_TYPE_NETBSD_UNPCBID 5 The native credentials type is a struct unpcbid.   since 2.26\nC type: GCredentialsType\n DBusError\nError codes for the %G_DBUS_ERROR error domain.\n  DBUS_ERROR_FAILED 0 A generic error; \u0026ldquo;something went wrong\u0026rdquo; - see the error message for more.   DBUS_ERROR_NO_MEMORY 1 There was not enough memory to complete an operation.   DBUS_ERROR_SERVICE_UNKNOWN 2 The bus doesn\u0026rsquo;t know how to launch a service to supply the bus name you wanted.   DBUS_ERROR_NAME_HAS_NO_OWNER 3 The bus name you referenced doesn\u0026rsquo;t exist (i.e. no application owns it).   DBUS_ERROR_NO_REPLY 4 No reply to a message expecting one, usually means a timeout occurred.   DBUS_ERROR_IO_ERROR 5 Something went wrong reading or writing to a socket, for example.   DBUS_ERROR_BAD_ADDRESS 6 A D-Bus bus address was malformed.   DBUS_ERROR_NOT_SUPPORTED 7 Requested operation isn\u0026rsquo;t supported (like ENOSYS on UNIX).   DBUS_ERROR_LIMITS_EXCEEDED 8 Some limited resource is exhausted.   DBUS_ERROR_ACCESS_DENIED 9 Security restrictions don\u0026rsquo;t allow doing what you\u0026rsquo;re trying to do.   DBUS_ERROR_AUTH_FAILED 10 Authentication didn\u0026rsquo;t work.   DBUS_ERROR_NO_SERVER 11 Unable to connect to server (probably caused by ECONNREFUSED on a socket).   DBUS_ERROR_TIMEOUT 12 Certain timeout errors, possibly ETIMEDOUT on a socket. Note that %G_DBUS_ERROR_NO_REPLY is used for message reply timeouts. Warning: this is confusingly-named given that %G_DBUS_ERROR_TIMED_OUT also exists. We can\u0026rsquo;t fix it for compatibility reasons so just be careful.   DBUS_ERROR_NO_NETWORK 13 No network access (probably ENETUNREACH on a socket).   DBUS_ERROR_ADDRESS_IN_USE 14 Can\u0026rsquo;t bind a socket since its address is in use (i.e. EADDRINUSE).   DBUS_ERROR_DISCONNECTED 15 The connection is disconnected and you\u0026rsquo;re trying to use it.   DBUS_ERROR_INVALID_ARGS 16 Invalid arguments passed to a method call.   DBUS_ERROR_FILE_NOT_FOUND 17 Missing file.   DBUS_ERROR_FILE_EXISTS 18 Existing file and the operation you\u0026rsquo;re using does not silently overwrite.   DBUS_ERROR_UNKNOWN_METHOD 19 Method name you invoked isn\u0026rsquo;t known by the object you invoked it on.   DBUS_ERROR_TIMED_OUT 20 Certain timeout errors, e.g. while starting a service. Warning: this is confusingly-named given that %G_DBUS_ERROR_TIMEOUT also exists. We can\u0026rsquo;t fix it for compatibility reasons so just be careful.   DBUS_ERROR_MATCH_RULE_NOT_FOUND 21 Tried to remove or modify a match rule that didn\u0026rsquo;t exist.   DBUS_ERROR_MATCH_RULE_INVALID 22 The match rule isn\u0026rsquo;t syntactically valid.   DBUS_ERROR_SPAWN_EXEC_FAILED 23 While starting a new process, the exec() call failed.   DBUS_ERROR_SPAWN_FORK_FAILED 24 While starting a new process, the fork() call failed.   DBUS_ERROR_SPAWN_CHILD_EXITED 25 While starting a new process, the child exited with a status code.   DBUS_ERROR_SPAWN_CHILD_SIGNALED 26 While starting a new process, the child exited on a signal.   DBUS_ERROR_SPAWN_FAILED 27 While starting a new process, something went wrong.   DBUS_ERROR_SPAWN_SETUP_FAILED 28 We failed to setup the environment correctly.   DBUS_ERROR_SPAWN_CONFIG_INVALID 29 We failed to setup the config parser correctly.   DBUS_ERROR_SPAWN_SERVICE_INVALID 30 Bus name was not valid.   DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND 31 Service file not found in system-services directory.   DBUS_ERROR_SPAWN_PERMISSIONS_INVALID 32 Permissions are incorrect on the setuid helper.   DBUS_ERROR_SPAWN_FILE_INVALID 33 Service file invalid (Name, User or Exec missing).   DBUS_ERROR_SPAWN_NO_MEMORY 34 Tried to get a UNIX process ID and it wasn\u0026rsquo;t available.   DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN 35 Tried to get a UNIX process ID and it wasn\u0026rsquo;t available.   DBUS_ERROR_INVALID_SIGNATURE 36 A type signature is not valid.   DBUS_ERROR_INVALID_FILE_CONTENT 37 A file contains invalid syntax or is otherwise broken.   DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN 38 Asked for SELinux security context and it wasn\u0026rsquo;t available.   DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN 39 Asked for ADT audit data and it wasn\u0026rsquo;t available.   DBUS_ERROR_OBJECT_PATH_IN_USE 40 There\u0026rsquo;s already an object with the requested object path.   DBUS_ERROR_UNKNOWN_OBJECT 41 Object you invoked a method on isn\u0026rsquo;t known. Since 2.42   DBUS_ERROR_UNKNOWN_INTERFACE 42 Interface you invoked a method on isn\u0026rsquo;t known by the object. Since 2.42   DBUS_ERROR_UNKNOWN_PROPERTY 43 Property you tried to access isn\u0026rsquo;t known by the object. Since 2.42   DBUS_ERROR_PROPERTY_READ_ONLY 44 Property you tried to set is read-only. Since 2.42   since 2.26\nC type: GDBusError\n DBusMessageByteOrder\nEnumeration used to describe the byte order of a D-Bus message.\n  DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN 66 The byte order is big endian.   DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN 108 The byte order is little endian.   since 2.26\nC type: GDBusMessageByteOrder\n DBusMessageHeaderField\nHeader fields used in #GDBusMessage.\n  DBUS_MESSAGE_HEADER_FIELD_INVALID 0 Not a valid header field.   DBUS_MESSAGE_HEADER_FIELD_PATH 1 The object path.   DBUS_MESSAGE_HEADER_FIELD_INTERFACE 2 The interface name.   DBUS_MESSAGE_HEADER_FIELD_MEMBER 3 The method or signal name.   DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME 4 The name of the error that occurred.   DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL 5 The serial number the message is a reply to.   DBUS_MESSAGE_HEADER_FIELD_DESTINATION 6 The name the message is intended for.   DBUS_MESSAGE_HEADER_FIELD_SENDER 7 Unique name of the sender of the message (filled in by the bus).   DBUS_MESSAGE_HEADER_FIELD_SIGNATURE 8 The signature of the message body.   DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS 9 The number of UNIX file descriptors that accompany the message.   since 2.26\nC type: GDBusMessageHeaderField\n DBusMessageType\nMessage types used in #GDBusMessage.\n  DBUS_MESSAGE_TYPE_INVALID 0 Message is of invalid type.   DBUS_MESSAGE_TYPE_METHOD_CALL 1 Method call.   DBUS_MESSAGE_TYPE_METHOD_RETURN 2 Method reply.   DBUS_MESSAGE_TYPE_ERROR 3 Error reply.   DBUS_MESSAGE_TYPE_SIGNAL 4 Signal emission.   since 2.26\nC type: GDBusMessageType\n DataStreamByteOrder\n#GDataStreamByteOrder is used to ensure proper endianness of streaming data sources across various machine architectures.\n  DATA_STREAM_BYTE_ORDER_BIG_ENDIAN 0 Selects Big Endian byte order.   DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN 1 Selects Little Endian byte order.   DATA_STREAM_BYTE_ORDER_HOST_ENDIAN 2 Selects endianness based on host machine\u0026rsquo;s architecture.   C type: GDataStreamByteOrder\n DataStreamNewlineType\n#GDataStreamNewlineType is used when checking for or setting the line endings for a given file.\n  DATA_STREAM_NEWLINE_TYPE_LF 0 Selects \u0026ldquo;LF\u0026rdquo; line endings, common on most modern UNIX platforms.   DATA_STREAM_NEWLINE_TYPE_CR 1 Selects \u0026ldquo;CR\u0026rdquo; line endings.   DATA_STREAM_NEWLINE_TYPE_CR_LF 2 Selects \u0026ldquo;CR, LF\u0026rdquo; line ending, common on Microsoft Windows.   DATA_STREAM_NEWLINE_TYPE_ANY 3 Automatically try to handle any line ending type.   C type: GDataStreamNewlineType\n DriveStartStopType\nEnumeration describing how a drive can be started/stopped.\n  DRIVE_START_STOP_TYPE_UNKNOWN 0 Unknown or drive doesn\u0026rsquo;t support start/stop.   DRIVE_START_STOP_TYPE_SHUTDOWN 1 The stop method will physically shut down the drive and e.g. power down the port the drive is attached to.   DRIVE_START_STOP_TYPE_NETWORK 2 The start/stop methods are used for connecting/disconnect to the drive over the network.   DRIVE_START_STOP_TYPE_MULTIDISK 3 The start/stop methods will assemble/disassemble a virtual drive from several physical drives.   DRIVE_START_STOP_TYPE_PASSWORD 4 The start/stop methods will unlock/lock the disk (for example using the ATA SECURITY UNLOCK DEVICE command)   since 2.22\nC type: GDriveStartStopType\n EmblemOrigin\nGEmblemOrigin is used to add information about the origin of the emblem to #GEmblem.\n  EMBLEM_ORIGIN_UNKNOWN 0 Emblem of unknown origin   EMBLEM_ORIGIN_DEVICE 1 Emblem adds device-specific information   EMBLEM_ORIGIN_LIVEMETADATA 2 Emblem depicts live metadata, such as \u0026ldquo;readonly\u0026rdquo;   EMBLEM_ORIGIN_TAG 3 Emblem comes from a user-defined tag, e.g. set by nautilus (in the future)   since 2.18\nC type: GEmblemOrigin\n FileAttributeStatus\nUsed by g_file_set_attributes_from_info() when setting file attributes.\n  FILE_ATTRIBUTE_STATUS_UNSET 0 Attribute value is unset (empty).   FILE_ATTRIBUTE_STATUS_SET 1 Attribute value is set.   FILE_ATTRIBUTE_STATUS_ERROR_SETTING 2 Indicates an error in setting the value.   C type: GFileAttributeStatus\n FileAttributeType\nThe data types for file attributes.\n  FILE_ATTRIBUTE_TYPE_INVALID 0 indicates an invalid or uninitalized type.   FILE_ATTRIBUTE_TYPE_STRING 1 a null terminated UTF8 string.   FILE_ATTRIBUTE_TYPE_BYTE_STRING 2 a zero terminated string of non-zero bytes.   FILE_ATTRIBUTE_TYPE_BOOLEAN 3 a boolean value.   FILE_ATTRIBUTE_TYPE_UINT32 4 an unsigned 4-byte/32-bit integer.   FILE_ATTRIBUTE_TYPE_INT32 5 a signed 4-byte/32-bit integer.   FILE_ATTRIBUTE_TYPE_UINT64 6 an unsigned 8-byte/64-bit integer.   FILE_ATTRIBUTE_TYPE_INT64 7 a signed 8-byte/64-bit integer.   FILE_ATTRIBUTE_TYPE_OBJECT 8 a #GObject.   FILE_ATTRIBUTE_TYPE_STRINGV 9 a %NULL terminated char **. Since 2.22   C type: GFileAttributeType\n FileMonitorEvent\nSpecifies what type of event a monitor event is.\n  FILE_MONITOR_EVENT_CHANGED 0 a file changed.   FILE_MONITOR_EVENT_CHANGES_DONE_HINT 1 a hint that this was probably the last change in a set of changes.   FILE_MONITOR_EVENT_DELETED 2 a file was deleted.   FILE_MONITOR_EVENT_CREATED 3 a file was created.   FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED 4 a file attribute was changed.   FILE_MONITOR_EVENT_PRE_UNMOUNT 5 the file location will soon be unmounted.   FILE_MONITOR_EVENT_UNMOUNTED 6 the file location was unmounted.   FILE_MONITOR_EVENT_MOVED 7 the file was moved \u0026ndash; only sent if the (deprecated) %G_FILE_MONITOR_SEND_MOVED flag is set   FILE_MONITOR_EVENT_RENAMED 8 the file was renamed within the current directory \u0026ndash; only sent if the %G_FILE_MONITOR_WATCH_MOVES flag is set. Since: 2.46.   FILE_MONITOR_EVENT_MOVED_IN 9 the file was moved into the monitored directory from another location \u0026ndash; only sent if the %G_FILE_MONITOR_WATCH_MOVES flag is set. Since: 2.46.   FILE_MONITOR_EVENT_MOVED_OUT 10 the file was moved out of the monitored directory to another location \u0026ndash; only sent if the %G_FILE_MONITOR_WATCH_MOVES flag is set. Since: 2.46   C type: GFileMonitorEvent\n FileType\nIndicates the file\u0026rsquo;s on-disk type.\n  FILE_TYPE_UNKNOWN 0 File\u0026rsquo;s type is unknown.   FILE_TYPE_REGULAR 1 File handle represents a regular file.   FILE_TYPE_DIRECTORY 2 File handle represents a directory.   FILE_TYPE_SYMBOLIC_LINK 3 File handle represents a symbolic link (Unix systems).   FILE_TYPE_SPECIAL 4 File is a \u0026ldquo;special\u0026rdquo; file, such as a socket, fifo, block device, or character device.   FILE_TYPE_SHORTCUT 5 File is a shortcut (Windows systems).   FILE_TYPE_MOUNTABLE 6 File is a mountable location.   C type: GFileType\n FilesystemPreviewType\nIndicates a hint from the file system whether files should be previewed in a file manager. Returned as the value of the key #G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW.\n  FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS 0 Only preview files if user has explicitly requested it.   FILESYSTEM_PREVIEW_TYPE_IF_LOCAL 1 Preview files if user has requested preview of \u0026ldquo;local\u0026rdquo; files.   FILESYSTEM_PREVIEW_TYPE_NEVER 2 Never preview files.   C type: GFilesystemPreviewType\n IOErrorEnum\nError codes returned by GIO functions.\nNote that this domain may be extended in future GLib releases. In general, new error codes either only apply to new APIs, or else replace %G_IO_ERROR_FAILED in cases that were not explicitly distinguished before. You should therefore avoid writing code like |[if (g_error_matches (error, G_IO_ERROR, G_IO_ERROR_FAILED)) { // Assume that this is EPRINTERONFIRE \u0026hellip; } ]| but should instead treat all unrecognized error codes the same as #G_IO_ERROR_FAILED.\n  IO_ERROR_FAILED 0 Generic error condition for when an operation fails and no more specific #GIOErrorEnum value is defined.   IO_ERROR_NOT_FOUND 1 File not found.   IO_ERROR_EXISTS 2 File already exists.   IO_ERROR_IS_DIRECTORY 3 File is a directory.   IO_ERROR_NOT_DIRECTORY 4 File is not a directory.   IO_ERROR_NOT_EMPTY 5 File is a directory that isn\u0026rsquo;t empty.   IO_ERROR_NOT_REGULAR_FILE 6 File is not a regular file.   IO_ERROR_NOT_SYMBOLIC_LINK 7 File is not a symbolic link.   IO_ERROR_NOT_MOUNTABLE_FILE 8 File cannot be mounted.   IO_ERROR_FILENAME_TOO_LONG 9 Filename is too many characters.   IO_ERROR_INVALID_FILENAME 10 Filename is invalid or contains invalid characters.   IO_ERROR_TOO_MANY_LINKS 11 File contains too many symbolic links.   IO_ERROR_NO_SPACE 12 No space left on drive.   IO_ERROR_INVALID_ARGUMENT 13 Invalid argument.   IO_ERROR_PERMISSION_DENIED 14 Permission denied.   IO_ERROR_NOT_SUPPORTED 15 Operation (or one of its parameters) not supported   IO_ERROR_NOT_MOUNTED 16 File isn\u0026rsquo;t mounted.   IO_ERROR_ALREADY_MOUNTED 17 File is already mounted.   IO_ERROR_CLOSED 18 File was closed.   IO_ERROR_CANCELLED 19 Operation was cancelled. See #GCancellable.   IO_ERROR_PENDING 20 Operations are still pending.   IO_ERROR_READ_ONLY 21 File is read only.   IO_ERROR_CANT_CREATE_BACKUP 22 Backup couldn\u0026rsquo;t be created.   IO_ERROR_WRONG_ETAG 23 File\u0026rsquo;s Entity Tag was incorrect.   IO_ERROR_TIMED_OUT 24 Operation timed out.   IO_ERROR_WOULD_RECURSE 25 Operation would be recursive.   IO_ERROR_BUSY 26 File is busy.   IO_ERROR_WOULD_BLOCK 27 Operation would block.   IO_ERROR_HOST_NOT_FOUND 28 Host couldn\u0026rsquo;t be found (remote operations).   IO_ERROR_WOULD_MERGE 29 Operation would merge files.   IO_ERROR_FAILED_HANDLED 30 Operation failed and a helper program has already interacted with the user. Do not display any error dialog.   IO_ERROR_TOO_MANY_OPEN_FILES 31 The current process has too many files open and can\u0026rsquo;t open any more. Duplicate descriptors do count toward this limit. Since 2.20   IO_ERROR_NOT_INITIALIZED 32 The object has not been initialized. Since 2.22   IO_ERROR_ADDRESS_IN_USE 33 The requested address is already in use. Since 2.22   IO_ERROR_PARTIAL_INPUT 34 Need more input to finish operation. Since 2.24   IO_ERROR_INVALID_DATA 35 The input data was invalid. Since 2.24   IO_ERROR_DBUS_ERROR 36 A remote object generated an error that doesn\u0026rsquo;t correspond to a locally registered #GError error domain. Use g_dbus_error_get_remote_error() to extract the D-Bus error name and g_dbus_error_strip_remote_error() to fix up the message so it matches what was received on the wire. Since 2.26.   IO_ERROR_HOST_UNREACHABLE 37 Host unreachable. Since 2.26   IO_ERROR_NETWORK_UNREACHABLE 38 Network unreachable. Since 2.26   IO_ERROR_CONNECTION_REFUSED 39 Connection refused. Since 2.26   IO_ERROR_PROXY_FAILED 40 Connection to proxy server failed. Since 2.26   IO_ERROR_PROXY_AUTH_FAILED 41 Proxy authentication failed. Since 2.26   IO_ERROR_PROXY_NEED_AUTH 42 Proxy server needs authentication. Since 2.26   IO_ERROR_PROXY_NOT_ALLOWED 43 Proxy connection is not allowed by ruleset. Since 2.26   IO_ERROR_BROKEN_PIPE 44 Broken pipe. Since 2.36   IO_ERROR_CONNECTION_CLOSED 44 Connection closed by peer. Note that this is the same code as %G_IO_ERROR_BROKEN_PIPE; before 2.44 some \u0026ldquo;connection closed\u0026rdquo; errors returned %G_IO_ERROR_BROKEN_PIPE, but others returned %G_IO_ERROR_FAILED. Now they should all return the same value, which has this more logical name. Since 2.44.   IO_ERROR_NOT_CONNECTED 45 Transport endpoint is not connected. Since 2.44   IO_ERROR_MESSAGE_TOO_LARGE 46 Message too large. Since 2.48.   C type: GIOErrorEnum\n IOModuleScopeFlags\nFlags for use with g_io_module_scope_new().\n  IO_MODULE_SCOPE_NONE 0 No module scan flags   IO_MODULE_SCOPE_BLOCK_DUPLICATES 1 When using this scope to load or scan modules, automatically block a modules which has the same base basename as previously loaded module.   since 2.30\nC type: GIOModuleScopeFlags\n MountOperationResult\n#GMountOperationResult is returned as a result when a request for information is send by the mounting operation.\n  MOUNT_OPERATION_HANDLED 0 The request was fulfilled and the user specified data is now available   MOUNT_OPERATION_ABORTED 1 The user requested the mount operation to be aborted   MOUNT_OPERATION_UNHANDLED 2 The request was unhandled (i.e. not implemented)   C type: GMountOperationResult\n NetworkConnectivity\nThe host\u0026rsquo;s network connectivity state, as reported by #GNetworkMonitor.\n  NETWORK_CONNECTIVITY_LOCAL 1 The host is not configured with a route to the Internet; it may or may not be connected to a local network.   NETWORK_CONNECTIVITY_LIMITED 2 The host is connected to a network, but does not appear to be able to reach the full Internet, perhaps due to upstream network problems.   NETWORK_CONNECTIVITY_PORTAL 3 The host is behind a captive portal and cannot reach the full Internet.   NETWORK_CONNECTIVITY_FULL 4 The host is connected to a network, and appears to be able to reach the full Internet.   since 2.44\nC type: GNetworkConnectivity\n NotificationPriority\nPriority levels for #GNotifications.\n  NOTIFICATION_PRIORITY_NORMAL 0 the default priority, to be used for the majority of notifications (for example email messages, software updates, completed download/sync operations)   NOTIFICATION_PRIORITY_LOW 1 for notifications that do not require immediate attention - typically used for contextual background information, such as contact birthdays or local weather   NOTIFICATION_PRIORITY_HIGH 2 for events that require more attention, usually because responses are time-sensitive (for example chat and SMS messages or alarms)   NOTIFICATION_PRIORITY_URGENT 3 for urgent notifications, or notifications that require a response in a short space of time (for example phone calls or emergency warnings)   since 2.42\nC type: GNotificationPriority\n PasswordSave\n#GPasswordSave is used to indicate the lifespan of a saved password.\n#Gvfs stores passwords in the Gnome keyring when this flag allows it to, and later retrieves it again from there.\n  PASSWORD_SAVE_NEVER 0 never save a password.   PASSWORD_SAVE_FOR_SESSION 1 save a password for the session.   PASSWORD_SAVE_PERMANENTLY 2 save a password permanently.   C type: GPasswordSave\n ResolverError\nAn error code used with %G_RESOLVER_ERROR in a #GError returned from a #GResolver routine.\n  RESOLVER_ERROR_NOT_FOUND 0 the requested name/address/service was not found   RESOLVER_ERROR_TEMPORARY_FAILURE 1 the requested information could not be looked up due to a network error or similar problem   RESOLVER_ERROR_INTERNAL 2 unknown error   since 2.22\nC type: GResolverError\n ResolverRecordType\nThe type of record that g_resolver_lookup_records() or g_resolver_lookup_records_async() should retrieve. The records are returned as lists of #GVariant tuples. Each record type has different values in the variant tuples returned.\n%G_RESOLVER_RECORD_SRV records are returned as variants with the signature \u0026lsquo;(qqqs)\u0026rsquo;, containing a guint16 with the priority, a guint16 with the weight, a guint16 with the port, and a string of the hostname.\n%G_RESOLVER_RECORD_MX records are returned as variants with the signature \u0026lsquo;(qs)\u0026rsquo;, representing a guint16 with the preference, and a string containing the mail exchanger hostname.\n%G_RESOLVER_RECORD_TXT records are returned as variants with the signature \u0026lsquo;(as)\u0026rsquo;, representing an array of the strings in the text record.\n%G_RESOLVER_RECORD_SOA records are returned as variants with the signature \u0026lsquo;(ssuuuuu)\u0026rsquo;, representing a string containing the primary name server, a string containing the administrator, the serial as a guint32, the refresh interval as guint32, the retry interval as a guint32, the expire timeout as a guint32, and the ttl as a guint32.\n%G_RESOLVER_RECORD_NS records are returned as variants with the signature \u0026lsquo;(s)\u0026rsquo;, representing a string of the hostname of the name server.\n  RESOLVER_RECORD_SRV 1 lookup DNS SRV records for a domain   RESOLVER_RECORD_MX 2 lookup DNS MX records for a domain   RESOLVER_RECORD_TXT 3 lookup DNS TXT records for a name   RESOLVER_RECORD_SOA 4 lookup DNS SOA records for a zone   RESOLVER_RECORD_NS 5 lookup DNS NS records for a domain   since 2.34\nC type: GResolverRecordType\n ResourceError\nAn error code used with %G_RESOURCE_ERROR in a #GError returned from a #GResource routine.\n  RESOURCE_ERROR_NOT_FOUND 0 no file was found at the requested path   RESOURCE_ERROR_INTERNAL 1 unknown error   since 2.32\nC type: GResourceError\n SocketClientEvent\nDescribes an event occurring on a #GSocketClient. See the #GSocketClient::event signal for more details.\nAdditional values may be added to this type in the future.\n  SOCKET_CLIENT_RESOLVING 0 The client is doing a DNS lookup.   SOCKET_CLIENT_RESOLVED 1 The client has completed a DNS lookup.   SOCKET_CLIENT_CONNECTING 2 The client is connecting to a remote host (either a proxy or the destination server).   SOCKET_CLIENT_CONNECTED 3 The client has connected to a remote host.   SOCKET_CLIENT_PROXY_NEGOTIATING 4 The client is negotiating with a proxy to connect to the destination server.   SOCKET_CLIENT_PROXY_NEGOTIATED 5 The client has negotiated with the proxy server.   SOCKET_CLIENT_TLS_HANDSHAKING 6 The client is performing a TLS handshake.   SOCKET_CLIENT_TLS_HANDSHAKED 7 The client has performed a TLS handshake.   SOCKET_CLIENT_COMPLETE 8 The client is done with a particular #GSocketConnectable.   since 2.32\nC type: GSocketClientEvent\n SocketFamily\nThe protocol family of a #GSocketAddress. (These values are identical to the system defines %AF_INET, %AF_INET6 and %AF_UNIX, if available.)\n  SOCKET_FAMILY_INVALID 0 no address family   SOCKET_FAMILY_UNIX 1 the UNIX domain family   SOCKET_FAMILY_IPV4 2 the IPv4 family   SOCKET_FAMILY_IPV6 10 the IPv6 family   since 2.22\nC type: GSocketFamily\n SocketListenerEvent\nDescribes an event occurring on a #GSocketListener. See the #GSocketListener::event signal for more details.\nAdditional values may be added to this type in the future.\n  SOCKET_LISTENER_BINDING 0 The listener is about to bind a socket.   SOCKET_LISTENER_BOUND 1 The listener has bound a socket.   SOCKET_LISTENER_LISTENING 2 The listener is about to start listening on this socket.   SOCKET_LISTENER_LISTENED 3 The listener is now listening on this socket.   since 2.46\nC type: GSocketListenerEvent\n SocketProtocol\nA protocol identifier is specified when creating a #GSocket, which is a family/type specific identifier, where 0 means the default protocol for the particular family/type.\nThis enum contains a set of commonly available and used protocols. You can also pass any other identifiers handled by the platform in order to use protocols not listed here.\n  SOCKET_PROTOCOL_UNKNOWN -1 The protocol type is unknown   SOCKET_PROTOCOL_DEFAULT 0 The default protocol for the family/type   SOCKET_PROTOCOL_TCP 6 TCP over IP   SOCKET_PROTOCOL_UDP 17 UDP over IP   SOCKET_PROTOCOL_SCTP 132 SCTP over IP   since 2.22\nC type: GSocketProtocol\n SocketType\nFlags used when creating a #GSocket. Some protocols may not implement all the socket types.\n  SOCKET_TYPE_INVALID 0 Type unknown or wrong   SOCKET_TYPE_STREAM 1 Reliable connection-based byte streams (e.g. TCP).   SOCKET_TYPE_DATAGRAM 2 Connectionless, unreliable datagram passing. (e.g. UDP)   SOCKET_TYPE_SEQPACKET 3 Reliable connection-based passing of datagrams of fixed maximum length (e.g. SCTP).   since 2.22\nC type: GSocketType\n TlsAuthenticationMode\nThe client authentication mode for a #GTlsServerConnection.\n  TLS_AUTHENTICATION_NONE 0 client authentication not required   TLS_AUTHENTICATION_REQUESTED 1 client authentication is requested   TLS_AUTHENTICATION_REQUIRED 2 client authentication is required   since 2.28\nC type: GTlsAuthenticationMode\n TlsCertificateRequestFlags\nFlags for g_tls_interaction_request_certificate(), g_tls_interaction_request_certificate_async(), and g_tls_interaction_invoke_request_certificate().\n  TLS_CERTIFICATE_REQUEST_NONE 0 No flags   since 2.40\nC type: GTlsCertificateRequestFlags\n TlsDatabaseLookupFlags\nFlags for g_tls_database_lookup_certificate_for_handle(), g_tls_database_lookup_certificate_issuer(), and g_tls_database_lookup_certificates_issued_by().\n  TLS_DATABASE_LOOKUP_NONE 0 No lookup flags   TLS_DATABASE_LOOKUP_KEYPAIR 1 Restrict lookup to certificates that have a private key.   since 2.30\nC type: GTlsDatabaseLookupFlags\n TlsError\nAn error code used with %G_TLS_ERROR in a #GError returned from a TLS-related routine.\n  TLS_ERROR_UNAVAILABLE 0 No TLS provider is available   TLS_ERROR_MISC 1 Miscellaneous TLS error   TLS_ERROR_BAD_CERTIFICATE 2 A certificate could not be parsed   TLS_ERROR_NOT_TLS 3 The TLS handshake failed because the peer does not seem to be a TLS server.   TLS_ERROR_HANDSHAKE 4 The TLS handshake failed because the peer\u0026rsquo;s certificate was not acceptable.   TLS_ERROR_CERTIFICATE_REQUIRED 5 The TLS handshake failed because the server requested a client-side certificate, but none was provided. See g_tls_connection_set_certificate().   TLS_ERROR_EOF 6 The TLS connection was closed without proper notice, which may indicate an attack. See g_tls_connection_set_require_close_notify().   since 2.28\nC type: GTlsError\n TlsInteractionResult\n#GTlsInteractionResult is returned by various functions in #GTlsInteraction when finishing an interaction request.\n  TLS_INTERACTION_UNHANDLED 0 The interaction was unhandled (i.e. not implemented).   TLS_INTERACTION_HANDLED 1 The interaction completed, and resulting data is available.   TLS_INTERACTION_FAILED 2 The interaction has failed, or was cancelled. and the operation should be aborted.   since 2.30\nC type: GTlsInteractionResult\n TlsRehandshakeMode\nWhen to allow rehandshaking. See g_tls_connection_set_rehandshake_mode().\n  TLS_REHANDSHAKE_NEVER 0 Never allow rehandshaking   TLS_REHANDSHAKE_SAFELY 1 Allow safe rehandshaking only   TLS_REHANDSHAKE_UNSAFELY 2 Allow unsafe rehandshaking   since 2.28\nC type: GTlsRehandshakeMode\n UnixSocketAddressType\nThe type of name used by a #GUnixSocketAddress. %G_UNIX_SOCKET_ADDRESS_PATH indicates a traditional unix domain socket bound to a filesystem path. %G_UNIX_SOCKET_ADDRESS_ANONYMOUS indicates a socket not bound to any name (eg, a client-side socket, or a socket created with socketpair()).\nFor abstract sockets, there are two incompatible ways of naming them; the man pages suggest using the entire struct sockaddr_un as the name, padding the unused parts of the %sun_path field with zeroes; this corresponds to %G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED. However, many programs instead just use a portion of %sun_path, and pass an appropriate smaller length to bind() or connect(). This is %G_UNIX_SOCKET_ADDRESS_ABSTRACT.\n  UNIX_SOCKET_ADDRESS_INVALID 0 invalid   UNIX_SOCKET_ADDRESS_ANONYMOUS 1 anonymous   UNIX_SOCKET_ADDRESS_PATH 2 a filesystem path   UNIX_SOCKET_ADDRESS_ABSTRACT 3 an abstract name   UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED 4 an abstract name, 0-padded to the full length of a unix socket name   since 2.26\nC type: GUnixSocketAddressType\n ZlibCompressorFormat\nUsed to select the type of data format to use for #GZlibDecompressor and #GZlibCompressor.\n  ZLIB_COMPRESSOR_FORMAT_ZLIB 0 deflate compression with zlib header   ZLIB_COMPRESSOR_FORMAT_GZIP 1 gzip file format   ZLIB_COMPRESSOR_FORMAT_RAW 2 deflate compression with no header   since 2.24\nC type: GZlibCompressorFormat\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/glib/enums/",
	"title": "enums",
	"tags": [],
	"description": "",
	"content": "BookmarkFileError\nError codes returned by bookmark file parsing.\n  BOOKMARK_FILE_ERROR_INVALID_URI 0 URI was ill-formed   BOOKMARK_FILE_ERROR_INVALID_VALUE 1 a requested field was not found   BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED 2 a requested application did not register a bookmark   BOOKMARK_FILE_ERROR_URI_NOT_FOUND 3 a requested URI was not found   BOOKMARK_FILE_ERROR_READ 4 document was ill formed   BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING 5 the text being parsed was in an unknown encoding   BOOKMARK_FILE_ERROR_WRITE 6 an error occurred while writing   BOOKMARK_FILE_ERROR_FILE_NOT_FOUND 7 requested file was not found   C type: GBookmarkFileError\n ChecksumType\nThe hashing algorithm to be used by #GChecksum when performing the digest of some data.\nNote that the #GChecksumType enumeration may be extended at a later date to include new hashing algorithm types.\n  CHECKSUM_MD5 0 Use the MD5 hashing algorithm   CHECKSUM_SHA1 1 Use the SHA-1 hashing algorithm   CHECKSUM_SHA256 2 Use the SHA-256 hashing algorithm   CHECKSUM_SHA512 3 Use the SHA-512 hashing algorithm (Since: 2.36)   CHECKSUM_SHA384 4 Use the SHA-384 hashing algorithm (Since: 2.51)   since 2.16\nC type: GChecksumType\n ConvertError\nError codes returned by character set conversion routines.\n  CONVERT_ERROR_NO_CONVERSION 0 Conversion between the requested character sets is not supported.   CONVERT_ERROR_ILLEGAL_SEQUENCE 1 Invalid byte sequence in conversion input; or the character sequence could not be represented in the target character set.   CONVERT_ERROR_FAILED 2 Conversion failed for some reason.   CONVERT_ERROR_PARTIAL_INPUT 3 Partial character sequence at end of input.   CONVERT_ERROR_BAD_URI 4 URI is invalid.   CONVERT_ERROR_NOT_ABSOLUTE_PATH 5 Pathname is not an absolute path.   CONVERT_ERROR_NO_MEMORY 6 No memory available. Since: 2.40   CONVERT_ERROR_EMBEDDED_NUL 7 An embedded NUL character is present in conversion output where a NUL-terminated string is expected. Since: 2.56   C type: GConvertError\n DateDMY\nThis enumeration isn\u0026rsquo;t used in the API, but may be useful if you need to mark a number as a day, month, or year.\n  DATE_DAY 0 a day   DATE_MONTH 1 a month   DATE_YEAR 2 a year   C type: GDateDMY\n DateMonth\nEnumeration representing a month; values are #G_DATE_JANUARY, #G_DATE_FEBRUARY, etc. #G_DATE_BAD_MONTH is the invalid value.\n  DATE_BAD_MONTH 0 invalid value   DATE_JANUARY 1 January   DATE_FEBRUARY 2 February   DATE_MARCH 3 March   DATE_APRIL 4 April   DATE_MAY 5 May   DATE_JUNE 6 June   DATE_JULY 7 July   DATE_AUGUST 8 August   DATE_SEPTEMBER 9 September   DATE_OCTOBER 10 October   DATE_NOVEMBER 11 November   DATE_DECEMBER 12 December   C type: GDateMonth\n DateWeekday\nEnumeration representing a day of the week; #G_DATE_MONDAY, #G_DATE_TUESDAY, etc. #G_DATE_BAD_WEEKDAY is an invalid weekday.\n  DATE_BAD_WEEKDAY 0 invalid value   DATE_MONDAY 1 Monday   DATE_TUESDAY 2 Tuesday   DATE_WEDNESDAY 3 Wednesday   DATE_THURSDAY 4 Thursday   DATE_FRIDAY 5 Friday   DATE_SATURDAY 6 Saturday   DATE_SUNDAY 7 Sunday   C type: GDateWeekday\n ErrorType\nThe possible errors, used in the @v_error field of #GTokenValue, when the token is a %G_TOKEN_ERROR.\n  ERR_UNKNOWN 0 unknown error   ERR_UNEXP_EOF 1 unexpected end of file   ERR_UNEXP_EOF_IN_STRING 2 unterminated string constant   ERR_UNEXP_EOF_IN_COMMENT 3 unterminated comment   ERR_NON_DIGIT_IN_CONST 4 non-digit character in a number   ERR_DIGIT_RADIX 5 digit beyond radix in a number   ERR_FLOAT_RADIX 6 non-decimal floating point number   ERR_FLOAT_MALFORMED 7 malformed floating point number   C type: GErrorType\n FileError\nValues corresponding to @errno codes returned from file operations on UNIX. Unlike @errno codes, GFileError values are available on all systems, even Windows. The exact meaning of each code depends on what sort of file operation you were performing; the UNIX documentation gives more details. The following error code descriptions come from the GNU C Library manual, and are under the copyright of that manual.\nIt\u0026rsquo;s not very portable to make detailed assumptions about exactly which errors will be returned from a given operation. Some errors don\u0026rsquo;t occur on some systems, etc., sometimes there are subtle differences in when a system will report a given error, etc.\n  FILE_ERROR_EXIST 0 Operation not permitted; only the owner of the file (or other resource) or processes with special privileges can perform the operation.   FILE_ERROR_ISDIR 1 File is a directory; you cannot open a directory for writing, or create or remove hard links to it.   FILE_ERROR_ACCES 2 Permission denied; the file permissions do not allow the attempted operation.   FILE_ERROR_NAMETOOLONG 3 Filename too long.   FILE_ERROR_NOENT 4 No such file or directory. This is a \u0026ldquo;file doesn\u0026rsquo;t exist\u0026rdquo; error for ordinary files that are referenced in contexts where they are expected to already exist.   FILE_ERROR_NOTDIR 5 A file that isn\u0026rsquo;t a directory was specified when a directory is required.   FILE_ERROR_NXIO 6 No such device or address. The system tried to use the device represented by a file you specified, and it couldn\u0026rsquo;t find the device. This can mean that the device file was installed incorrectly, or that the physical device is missing or not correctly attached to the computer.   FILE_ERROR_NODEV 7 The underlying file system of the specified file does not support memory mapping.   FILE_ERROR_ROFS 8 The directory containing the new link can\u0026rsquo;t be modified because it\u0026rsquo;s on a read-only file system.   FILE_ERROR_TXTBSY 9 Text file busy.   FILE_ERROR_FAULT 10 You passed in a pointer to bad memory. (GLib won\u0026rsquo;t reliably return this, don\u0026rsquo;t pass in pointers to bad memory.)   FILE_ERROR_LOOP 11 Too many levels of symbolic links were encountered in looking up a file name. This often indicates a cycle of symbolic links.   FILE_ERROR_NOSPC 12 No space left on device; write operation on a file failed because the disk is full.   FILE_ERROR_NOMEM 13 No memory available. The system cannot allocate more virtual memory because its capacity is full.   FILE_ERROR_MFILE 14 The current process has too many files open and can\u0026rsquo;t open any more. Duplicate descriptors do count toward this limit.   FILE_ERROR_NFILE 15 There are too many distinct file openings in the entire system.   FILE_ERROR_BADF 16 Bad file descriptor; for example, I/O on a descriptor that has been closed or reading from a descriptor open only for writing (or vice versa).   FILE_ERROR_INVAL 17 Invalid argument. This is used to indicate various kinds of problems with passing the wrong argument to a library function.   FILE_ERROR_PIPE 18 Broken pipe; there is no process reading from the other end of a pipe. Every library function that returns this error code also generates a \u0026lsquo;SIGPIPE\u0026rsquo; signal; this signal terminates the program if not handled or blocked. Thus, your program will never actually see this code unless it has handled or blocked \u0026lsquo;SIGPIPE\u0026rsquo;.   FILE_ERROR_AGAIN 19 Resource temporarily unavailable; the call might work if you try again later.   FILE_ERROR_INTR 20 Interrupted function call; an asynchronous signal occurred and prevented completion of the call. When this happens, you should try the call again.   FILE_ERROR_IO 21 Input/output error; usually used for physical read or write errors. i.e. the disk or other physical device hardware is returning errors.   FILE_ERROR_PERM 22 Operation not permitted; only the owner of the file (or other resource) or processes with special privileges can perform the operation.   FILE_ERROR_NOSYS 23 Function not implemented; this indicates that the system is missing some functionality.   FILE_ERROR_FAILED 24 Does not correspond to a UNIX error code; this is the standard \u0026ldquo;failed for unspecified reason\u0026rdquo; error code present in all #GError error code enumerations. Returned if no specific code applies.   C type: GFileError\n IOChannelError\nError codes returned by #GIOChannel operations.\n  IO_CHANNEL_ERROR_FBIG 0 File too large.   IO_CHANNEL_ERROR_INVAL 1 Invalid argument.   IO_CHANNEL_ERROR_IO 2 IO error.   IO_CHANNEL_ERROR_ISDIR 3 File is a directory.   IO_CHANNEL_ERROR_NOSPC 4 No space left on device.   IO_CHANNEL_ERROR_NXIO 5 No such device or address.   IO_CHANNEL_ERROR_OVERFLOW 6 Value too large for defined datatype.   IO_CHANNEL_ERROR_PIPE 7 Broken pipe.   IO_CHANNEL_ERROR_FAILED 8 Some other error.   C type: GIOChannelError\n IOError\n#GIOError is only used by the deprecated functions g_io_channel_read(), g_io_channel_write(), and g_io_channel_seek().\n  IO_ERROR_NONE 0 no error   IO_ERROR_AGAIN 1 an EAGAIN error occurred   IO_ERROR_INVAL 2 an EINVAL error occurred   IO_ERROR_UNKNOWN 3 another error occurred   C type: GIOError\n IOStatus\nStati returned by most of the #GIOFuncs functions.\n  IO_STATUS_ERROR 0 An error occurred.   IO_STATUS_NORMAL 1 Success.   IO_STATUS_EOF 2 End of file.   IO_STATUS_AGAIN 3 Resource temporarily unavailable.   C type: GIOStatus\n KeyFileError\nError codes returned by key file parsing.\n  KEY_FILE_ERROR_UNKNOWN_ENCODING 0 the text being parsed was in an unknown encoding   KEY_FILE_ERROR_PARSE 1 document was ill-formed   KEY_FILE_ERROR_NOT_FOUND 2 the file was not found   KEY_FILE_ERROR_KEY_NOT_FOUND 3 a requested key was not found   KEY_FILE_ERROR_GROUP_NOT_FOUND 4 a requested group was not found   KEY_FILE_ERROR_INVALID_VALUE 5 a value could not be parsed   C type: GKeyFileError\n LogWriterOutput\nReturn values from #GLogWriterFuncs to indicate whether the given log entry was successfully handled by the writer, or whether there was an error in handling it (and hence a fallback writer should be used).\nIf a #GLogWriterFunc ignores a log entry, it should return %G_LOG_WRITER_HANDLED.\n  LOG_WRITER_HANDLED 1 Log writer has handled the log entry.   LOG_WRITER_UNHANDLED 0 Log writer could not handle the log entry.   since 2.50\nC type: GLogWriterOutput\n MarkupError\nError codes returned by markup parsing.\n  MARKUP_ERROR_BAD_UTF8 0 text being parsed was not valid UTF-8   MARKUP_ERROR_EMPTY 1 document contained nothing, or only whitespace   MARKUP_ERROR_PARSE 2 document was ill-formed   MARKUP_ERROR_UNKNOWN_ELEMENT 3 error should be set by #GMarkupParser functions; element wasn\u0026rsquo;t known   MARKUP_ERROR_UNKNOWN_ATTRIBUTE 4 error should be set by #GMarkupParser functions; attribute wasn\u0026rsquo;t known   MARKUP_ERROR_INVALID_CONTENT 5 error should be set by #GMarkupParser functions; content was invalid   MARKUP_ERROR_MISSING_ATTRIBUTE 6 error should be set by #GMarkupParser functions; a required attribute was missing   C type: GMarkupError\n NormalizeMode\nDefines how a Unicode string is transformed in a canonical form, standardizing such issues as whether a character with an accent is represented as a base character and combining accent or as a single precomposed character. Unicode strings should generally be normalized before comparing them.\n  NORMALIZE_DEFAULT 0 standardize differences that do not affect the text content, such as the above-mentioned accent representation   NORMALIZE_NFD 0 another name for %G_NORMALIZE_DEFAULT   NORMALIZE_DEFAULT_COMPOSE 1 like %G_NORMALIZE_DEFAULT, but with composed forms rather than a maximally decomposed form   NORMALIZE_NFC 1 another name for %G_NORMALIZE_DEFAULT_COMPOSE   NORMALIZE_ALL 2 beyond %G_NORMALIZE_DEFAULT also standardize the \u0026ldquo;compatibility\u0026rdquo; characters in Unicode, such as SUPERSCRIPT THREE to the standard forms (in this case DIGIT THREE). Formatting information may be lost but for most text operations such characters should be considered the same   NORMALIZE_NFKD 2 another name for %G_NORMALIZE_ALL   NORMALIZE_ALL_COMPOSE 3 like %G_NORMALIZE_ALL, but with composed forms rather than a maximally decomposed form   NORMALIZE_NFKC 3 another name for %G_NORMALIZE_ALL_COMPOSE   C type: GNormalizeMode\n NumberParserError\nError codes returned by functions converting a string to a number.\n  NUMBER_PARSER_ERROR_INVALID 0 String was not a valid number.   NUMBER_PARSER_ERROR_OUT_OF_BOUNDS 1 String was a number, but out of bounds.   since 2.54\nC type: GNumberParserError\n OnceStatus\nThe possible statuses of a one-time initialization function controlled by a #GOnce struct.\n  ONCE_STATUS_NOTCALLED 0 the function has not been called yet.   ONCE_STATUS_PROGRESS 1 the function call is currently in progress.   ONCE_STATUS_READY 2 the function has been called.   since 2.4\nC type: GOnceStatus\n OptionArg\nThe #GOptionArg enum values determine which type of extra argument the options expect to find. If an option expects an extra argument, it can be specified in several ways; with a short option: -x arg, with a long option: --name arg or combined in a single argument: --name=arg.\n  OPTION_ARG_NONE 0 No extra argument. This is useful for simple flags.   OPTION_ARG_STRING 1 The option takes a string argument.   OPTION_ARG_INT 2 The option takes an integer argument.   OPTION_ARG_CALLBACK 3 The option provides a callback (of type #GOptionArgFunc) to parse the extra argument.   OPTION_ARG_FILENAME 4 The option takes a filename as argument.   OPTION_ARG_STRING_ARRAY 5 The option takes a string argument, multiple uses of the option are collected into an array of strings.   OPTION_ARG_FILENAME_ARRAY 6 The option takes a filename as argument, multiple uses of the option are collected into an array of strings.   OPTION_ARG_DOUBLE 7 The option takes a double argument. The argument can be formatted either for the user\u0026rsquo;s locale or for the \u0026ldquo;C\u0026rdquo; locale. Since 2.12   OPTION_ARG_INT64 8 The option takes a 64-bit integer. Like %G_OPTION_ARG_INT but for larger numbers. The number can be in decimal base, or in hexadecimal (when prefixed with 0x, for example, 0xffffffff). Since 2.12   C type: GOptionArg\n OptionError\nError codes returned by option parsing.\n  OPTION_ERROR_UNKNOWN_OPTION 0 An option was not known to the parser. This error will only be reported, if the parser hasn\u0026rsquo;t been instructed to ignore unknown options, see g_option_context_set_ignore_unknown_options().   OPTION_ERROR_BAD_VALUE 1 A value couldn\u0026rsquo;t be parsed.   OPTION_ERROR_FAILED 2 A #GOptionArgFunc callback failed.   C type: GOptionError\n RegexError\nError codes returned by regular expressions functions.\n  REGEX_ERROR_COMPILE 0 Compilation of the regular expression failed.   REGEX_ERROR_OPTIMIZE 1 Optimization of the regular expression failed.   REGEX_ERROR_REPLACE 2 Replacement failed due to an ill-formed replacement string.   REGEX_ERROR_MATCH 3 The match process failed.   REGEX_ERROR_INTERNAL 4 Internal error of the regular expression engine. Since 2.16   REGEX_ERROR_STRAY_BACKSLASH 101 \u0026ldquo;\\\u0026rdquo; at end of pattern. Since 2.16   REGEX_ERROR_MISSING_CONTROL_CHAR 102 \u0026ldquo;\\c\u0026rdquo; at end of pattern. Since 2.16   REGEX_ERROR_UNRECOGNIZED_ESCAPE 103 Unrecognized character follows \u0026ldquo;\\\u0026rdquo;. Since 2.16   REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER 104 Numbers out of order in \u0026ldquo;{}\u0026rdquo; quantifier. Since 2.16   REGEX_ERROR_QUANTIFIER_TOO_BIG 105 Number too big in \u0026ldquo;{}\u0026rdquo; quantifier. Since 2.16   REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS 106 Missing terminating \u0026ldquo;]\u0026rdquo; for character class. Since 2.16   REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS 107 Invalid escape sequence in character class. Since 2.16   REGEX_ERROR_RANGE_OUT_OF_ORDER 108 Range out of order in character class. Since 2.16   REGEX_ERROR_NOTHING_TO_REPEAT 109 Nothing to repeat. Since 2.16   REGEX_ERROR_UNRECOGNIZED_CHARACTER 112 Unrecognized character after \u0026ldquo;(?\u0026rdquo;, \u0026ldquo;(?\u0026lt;\u0026rdquo; or \u0026ldquo;(?P\u0026rdquo;. Since 2.16   REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS 113 POSIX named classes are supported only within a class. Since 2.16   REGEX_ERROR_UNMATCHED_PARENTHESIS 114 Missing terminating \u0026ldquo;)\u0026rdquo; or \u0026ldquo;)\u0026rdquo; without opening \u0026ldquo;(\u0026rdquo;. Since 2.16   REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE 115 Reference to non-existent subpattern. Since 2.16   REGEX_ERROR_UNTERMINATED_COMMENT 118 Missing terminating \u0026ldquo;)\u0026rdquo; after comment. Since 2.16   REGEX_ERROR_EXPRESSION_TOO_LARGE 120 Regular expression too large. Since 2.16   REGEX_ERROR_MEMORY_ERROR 121 Failed to get memory. Since 2.16   REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND 125 Lookbehind assertion is not fixed length. Since 2.16   REGEX_ERROR_MALFORMED_CONDITION 126 Malformed number or name after \u0026ldquo;(?(\u0026rdquo;. Since 2.16   REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES 127 Conditional group contains more than two branches. Since 2.16   REGEX_ERROR_ASSERTION_EXPECTED 128 Assertion expected after \u0026ldquo;(?(\u0026rdquo;. Since 2.16   REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME 130 Unknown POSIX class name. Since 2.16   REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED 131 POSIX collating elements are not supported. Since 2.16   REGEX_ERROR_HEX_CODE_TOO_LARGE 134 Character value in \u0026ldquo;\\x{\u0026hellip;}\u0026rdquo; sequence is too large. Since 2.16   REGEX_ERROR_INVALID_CONDITION 135 Invalid condition \u0026ldquo;(?(0)\u0026rdquo;. Since 2.16   REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND 136 \\C not allowed in lookbehind assertion. Since 2.16   REGEX_ERROR_INFINITE_LOOP 140 Recursive call could loop indefinitely. Since 2.16   REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR 142 Missing terminator in subpattern name. Since 2.16   REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME 143 Two named subpatterns have the same name. Since 2.16   REGEX_ERROR_MALFORMED_PROPERTY 146 Malformed \u0026ldquo;\\P\u0026rdquo; or \u0026ldquo;\\p\u0026rdquo; sequence. Since 2.16   REGEX_ERROR_UNKNOWN_PROPERTY 147 Unknown property name after \u0026ldquo;\\P\u0026rdquo; or \u0026ldquo;\\p\u0026rdquo;. Since 2.16   REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG 148 Subpattern name is too long (maximum 32 characters). Since 2.16   REGEX_ERROR_TOO_MANY_SUBPATTERNS 149 Too many named subpatterns (maximum 10,000). Since 2.16   REGEX_ERROR_INVALID_OCTAL_VALUE 151 Octal value is greater than \u0026ldquo;\\377\u0026rdquo;. Since 2.16   REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE 154 \u0026ldquo;DEFINE\u0026rdquo; group contains more than one branch. Since 2.16   REGEX_ERROR_DEFINE_REPETION 155 Repeating a \u0026ldquo;DEFINE\u0026rdquo; group is not allowed. This error is never raised. Since: 2.16 Deprecated: 2.34   REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS 156 Inconsistent newline options. Since 2.16   REGEX_ERROR_MISSING_BACK_REFERENCE 157 \u0026ldquo;\\g\u0026rdquo; is not followed by a braced, angle-bracketed, or quoted name or number, or by a plain number. Since: 2.16   REGEX_ERROR_INVALID_RELATIVE_REFERENCE 158 relative reference must not be zero. Since: 2.34   REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN 159 the backtracing control verb used does not allow an argument. Since: 2.34   REGEX_ERROR_UNKNOWN_BACKTRACKING_CONTROL_VERB 160 unknown backtracing control verb. Since: 2.34   REGEX_ERROR_NUMBER_TOO_BIG 161 number is too big in escape sequence. Since: 2.34   REGEX_ERROR_MISSING_SUBPATTERN_NAME 162 Missing subpattern name. Since: 2.34   REGEX_ERROR_MISSING_DIGIT 163 Missing digit. Since 2.34   REGEX_ERROR_INVALID_DATA_CHARACTER 164 In JavaScript compatibility mode, \u0026ldquo;[\u0026rdquo; is an invalid data character. Since: 2.34   REGEX_ERROR_EXTRA_SUBPATTERN_NAME 165 different names for subpatterns of the same number are not allowed. Since: 2.34   REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED 166 the backtracing control verb requires an argument. Since: 2.34   REGEX_ERROR_INVALID_CONTROL_CHAR 168 \u0026ldquo;\\c\u0026rdquo; must be followed by an ASCII character. Since: 2.34   REGEX_ERROR_MISSING_NAME 169 \u0026ldquo;\\k\u0026rdquo; is not followed by a braced, angle-bracketed, or quoted name. Since: 2.34   REGEX_ERROR_NOT_SUPPORTED_IN_CLASS 171 \u0026ldquo;\\N\u0026rdquo; is not supported in a class. Since: 2.34   REGEX_ERROR_TOO_MANY_FORWARD_REFERENCES 172 too many forward references. Since: 2.34   REGEX_ERROR_NAME_TOO_LONG 175 the name is too long in \u0026ldquo;(*MARK)\u0026ldquo;, \u0026ldquo;(*PRUNE)\u0026ldquo;, \u0026ldquo;(*SKIP)\u0026ldquo;, or \u0026ldquo;(*THEN)\u0026ldquo;. Since: 2.34   REGEX_ERROR_CHARACTER_VALUE_TOO_LARGE 176 the character value in the \\u sequence is too large. Since: 2.34   since 2.14\nC type: GRegexError\n SeekType\nAn enumeration specifying the base position for a g_io_channel_seek_position() operation.\n  SEEK_CUR 0 the current position in the file.   SEEK_SET 1 the start of the file.   SEEK_END 2 the end of the file.   C type: GSeekType\n ShellError\nError codes returned by shell functions.\n  SHELL_ERROR_BAD_QUOTING 0 Mismatched or otherwise mangled quoting.   SHELL_ERROR_EMPTY_STRING 1 String to be parsed was empty.   SHELL_ERROR_FAILED 2 Some other error.   C type: GShellError\n SliceConfig\n  SLICE_CONFIG_ALWAYS_MALLOC 1   SLICE_CONFIG_BYPASS_MAGAZINES 2   SLICE_CONFIG_WORKING_SET_MSECS 3   SLICE_CONFIG_COLOR_INCREMENT 4   SLICE_CONFIG_CHUNK_SIZES 5   SLICE_CONFIG_CONTENTION_COUNTER 6   C type: GSliceConfig\n SpawnError\nError codes returned by spawning processes.\n  SPAWN_ERROR_FORK 0 Fork failed due to lack of memory.   SPAWN_ERROR_READ 1 Read or select on pipes failed.   SPAWN_ERROR_CHDIR 2 Changing to working directory failed.   SPAWN_ERROR_ACCES 3 execv() returned EACCES   SPAWN_ERROR_PERM 4 execv() returned EPERM   SPAWN_ERROR_TOO_BIG 5 execv() returned E2BIG   SPAWN_ERROR_2BIG 5 deprecated alias for %G_SPAWN_ERROR_TOO_BIG   SPAWN_ERROR_NOEXEC 6 execv() returned ENOEXEC   SPAWN_ERROR_NAMETOOLONG 7 execv() returned ENAMETOOLONG   SPAWN_ERROR_NOENT 8 execv() returned ENOENT   SPAWN_ERROR_NOMEM 9 execv() returned ENOMEM   SPAWN_ERROR_NOTDIR 10 execv() returned ENOTDIR   SPAWN_ERROR_LOOP 11 execv() returned ELOOP   SPAWN_ERROR_TXTBUSY 12 execv() returned ETXTBUSY   SPAWN_ERROR_IO 13 execv() returned EIO   SPAWN_ERROR_NFILE 14 execv() returned ENFILE   SPAWN_ERROR_MFILE 15 execv() returned EMFILE   SPAWN_ERROR_INVAL 16 execv() returned EINVAL   SPAWN_ERROR_ISDIR 17 execv() returned EISDIR   SPAWN_ERROR_LIBBAD 18 execv() returned ELIBBAD   SPAWN_ERROR_FAILED 19 Some other fatal failure, error-\u0026gt;message should explain.   C type: GSpawnError\n TestFileType\nThe type of file to return the filename for, when used with g_test_build_filename().\nThese two options correspond rather directly to the \u0026lsquo;dist\u0026rsquo; and \u0026lsquo;built\u0026rsquo; terminology that automake uses and are explicitly used to distinguish between the \u0026lsquo;srcdir\u0026rsquo; and \u0026lsquo;builddir\u0026rsquo; being separate. All files in your project should either be dist (in the EXTRA_DIST or dist_schema_DATA sense, in which case they will always be in the srcdir) or built (in the BUILT_SOURCES sense, in which case they will always be in the builddir).\nNote: as a general rule of automake, files that are generated only as part of the build-from-git process (but then are distributed with the tarball) always go in srcdir (even if doing a srcdir != builddir build from git) and are considered as distributed files.\n  TEST_DIST 0 a file that was included in the distribution tarball   TEST_BUILT 1 a file that was built on the compiling machine   since 2.38\nC type: GTestFileType\n TestLogType\n  TEST_LOG_NONE 0   TEST_LOG_ERROR 1   TEST_LOG_START_BINARY 2   TEST_LOG_LIST_CASE 3   TEST_LOG_SKIP_CASE 4   TEST_LOG_START_CASE 5   TEST_LOG_STOP_CASE 6   TEST_LOG_MIN_RESULT 7   TEST_LOG_MAX_RESULT 8   TEST_LOG_MESSAGE 9   TEST_LOG_START_SUITE 10   TEST_LOG_STOP_SUITE 11   C type: GTestLogType\n ThreadError\nPossible errors of thread related functions.\n  THREAD_ERROR_AGAIN 0 a thread couldn\u0026rsquo;t be created due to resource shortage. Try again later.   C type: GThreadError\n TimeType\nDisambiguates a given time in two ways.\nFirst, specifies if the given time is in universal or local time.\nSecond, if the time is in local time, specifies if it is local standard time or local daylight time. This is important for the case where the same local time occurs twice (during daylight savings time transitions, for example).\n  TIME_TYPE_STANDARD 0 the time is in local standard time   TIME_TYPE_DAYLIGHT 1 the time is in local daylight time   TIME_TYPE_UNIVERSAL 2 the time is in UTC   C type: GTimeType\n TokenType\nThe possible types of token returned from each g_scanner_get_next_token() call.\n  TOKEN_EOF 0 the end of the file   TOKEN_LEFT_PAREN 40 a \u0026lsquo;(\u0026rsquo; character   TOKEN_RIGHT_PAREN 41 a \u0026lsquo;)\u0026rsquo; character   TOKEN_LEFT_CURLY 123 a \u0026lsquo;{\u0026rsquo; character   TOKEN_RIGHT_CURLY 125 a \u0026lsquo;}\u0026rsquo; character   TOKEN_LEFT_BRACE 91 a \u0026lsquo;[\u0026rsquo; character   TOKEN_RIGHT_BRACE 93 a \u0026lsquo;]\u0026rsquo; character   TOKEN_EQUAL_SIGN 61 a \u0026lsquo;=\u0026rsquo; character   TOKEN_COMMA 44 a \u0026lsquo;,\u0026rsquo; character   TOKEN_NONE 256 not a token   TOKEN_ERROR 257 an error occurred   TOKEN_CHAR 258 a character   TOKEN_BINARY 259 a binary integer   TOKEN_OCTAL 260 an octal integer   TOKEN_INT 261 an integer   TOKEN_HEX 262 a hex integer   TOKEN_FLOAT 263 a floating point number   TOKEN_STRING 264 a string   TOKEN_SYMBOL 265 a symbol   TOKEN_IDENTIFIER 266 an identifier   TOKEN_IDENTIFIER_NULL 267 a null identifier   TOKEN_COMMENT_SINGLE 268 one line comment   TOKEN_COMMENT_MULTI 269 multi line comment   C type: GTokenType\n TraverseType\nSpecifies the type of traveral performed by g_tree_traverse(), g_node_traverse() and g_node_find(). The different orders are illustrated here: - In order: A, B, C, D, E, F, G, H, I - Pre order: F, B, A, D, C, E, G, I, H - Post order: A, C, E, D, B, H, I, G, F - Level order: F, B, G, A, D, I, C, E, H   IN_ORDER 0 vists a node\u0026rsquo;s left child first, then the node itself, then its right child. This is the one to use if you want the output sorted according to the compare function.   PRE_ORDER 1 visits a node, then its children.   POST_ORDER 2 visits the node\u0026rsquo;s children, then the node itself.   LEVEL_ORDER 3 is not implemented for [balanced binary trees][glib-Balanced-Binary-Trees]. For [n-ary trees][glib-N-ary-Trees], it vists the root node first, then its children, then its grandchildren, and so on. Note that this is less efficient than the other orders.   C type: GTraverseType\n UnicodeBreakType\nThese are the possible line break classifications.\nSince new unicode versions may add new types here, applications should be ready to handle unknown values. They may be regarded as %G_UNICODE_BREAK_UNKNOWN.\nSee Unicode Line Breaking Algorithm.\n  UNICODE_BREAK_MANDATORY 0 Mandatory Break (BK)   UNICODE_BREAK_CARRIAGE_RETURN 1 Carriage Return (CR)   UNICODE_BREAK_LINE_FEED 2 Line Feed (LF)   UNICODE_BREAK_COMBINING_MARK 3 Attached Characters and Combining Marks (CM)   UNICODE_BREAK_SURROGATE 4 Surrogates (SG)   UNICODE_BREAK_ZERO_WIDTH_SPACE 5 Zero Width Space (ZW)   UNICODE_BREAK_INSEPARABLE 6 Inseparable (IN)   UNICODE_BREAK_NON_BREAKING_GLUE 7 Non-breaking (\u0026ldquo;Glue\u0026rdquo;) (GL)   UNICODE_BREAK_CONTINGENT 8 Contingent Break Opportunity (CB)   UNICODE_BREAK_SPACE 9 Space (SP)   UNICODE_BREAK_AFTER 10 Break Opportunity After (BA)   UNICODE_BREAK_BEFORE 11 Break Opportunity Before (BB)   UNICODE_BREAK_BEFORE_AND_AFTER 12 Break Opportunity Before and After (B2)   UNICODE_BREAK_HYPHEN 13 Hyphen (HY)   UNICODE_BREAK_NON_STARTER 14 Nonstarter (NS)   UNICODE_BREAK_OPEN_PUNCTUATION 15 Opening Punctuation (OP)   UNICODE_BREAK_CLOSE_PUNCTUATION 16 Closing Punctuation (CL)   UNICODE_BREAK_QUOTATION 17 Ambiguous Quotation (QU)   UNICODE_BREAK_EXCLAMATION 18 Exclamation/Interrogation (EX)   UNICODE_BREAK_IDEOGRAPHIC 19 Ideographic (ID)   UNICODE_BREAK_NUMERIC 20 Numeric (NU)   UNICODE_BREAK_INFIX_SEPARATOR 21 Infix Separator (Numeric) (IS)   UNICODE_BREAK_SYMBOL 22 Symbols Allowing Break After (SY)   UNICODE_BREAK_ALPHABETIC 23 Ordinary Alphabetic and Symbol Characters (AL)   UNICODE_BREAK_PREFIX 24 Prefix (Numeric) (PR)   UNICODE_BREAK_POSTFIX 25 Postfix (Numeric) (PO)   UNICODE_BREAK_COMPLEX_CONTEXT 26 Complex Content Dependent (South East Asian) (SA)   UNICODE_BREAK_AMBIGUOUS 27 Ambiguous (Alphabetic or Ideographic) (AI)   UNICODE_BREAK_UNKNOWN 28 Unknown (XX)   UNICODE_BREAK_NEXT_LINE 29 Next Line (NL)   UNICODE_BREAK_WORD_JOINER 30 Word Joiner (WJ)   UNICODE_BREAK_HANGUL_L_JAMO 31 Hangul L Jamo (JL)   UNICODE_BREAK_HANGUL_V_JAMO 32 Hangul V Jamo (JV)   UNICODE_BREAK_HANGUL_T_JAMO 33 Hangul T Jamo (JT)   UNICODE_BREAK_HANGUL_LV_SYLLABLE 34 Hangul LV Syllable (H2)   UNICODE_BREAK_HANGUL_LVT_SYLLABLE 35 Hangul LVT Syllable (H3)   UNICODE_BREAK_CLOSE_PARANTHESIS 36 Closing Parenthesis (CP). Since 2.28   UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER 37 Conditional Japanese Starter (CJ). Since: 2.32   UNICODE_BREAK_HEBREW_LETTER 38 Hebrew Letter (HL). Since: 2.32   UNICODE_BREAK_REGIONAL_INDICATOR 39 Regional Indicator (RI). Since: 2.36   UNICODE_BREAK_EMOJI_BASE 40 Emoji Base (EB). Since: 2.50   UNICODE_BREAK_EMOJI_MODIFIER 41 Emoji Modifier (EM). Since: 2.50   UNICODE_BREAK_ZERO_WIDTH_JOINER 42 Zero Width Joiner (ZWJ). Since: 2.50   C type: GUnicodeBreakType\n UnicodeScript\nThe #GUnicodeScript enumeration identifies different writing systems. The values correspond to the names as defined in the Unicode standard. The enumeration has been added in GLib 2.14, and is interchangeable with #PangoScript.\nNote that new types may be added in the future. Applications should be ready to handle unknown values. See Unicode Standard Annex #24: Script names.\n  UNICODE_SCRIPT_INVALID_CODE -1 a value never returned from g_unichar_get_script()   UNICODE_SCRIPT_COMMON 0 a character used by multiple different scripts   UNICODE_SCRIPT_INHERITED 1 a mark glyph that takes its script from the base glyph to which it is attached   UNICODE_SCRIPT_ARABIC 2 Arabic   UNICODE_SCRIPT_ARMENIAN 3 Armenian   UNICODE_SCRIPT_BENGALI 4 Bengali   UNICODE_SCRIPT_BOPOMOFO 5 Bopomofo   UNICODE_SCRIPT_CHEROKEE 6 Cherokee   UNICODE_SCRIPT_COPTIC 7 Coptic   UNICODE_SCRIPT_CYRILLIC 8 Cyrillic   UNICODE_SCRIPT_DESERET 9 Deseret   UNICODE_SCRIPT_DEVANAGARI 10 Devanagari   UNICODE_SCRIPT_ETHIOPIC 11 Ethiopic   UNICODE_SCRIPT_GEORGIAN 12 Georgian   UNICODE_SCRIPT_GOTHIC 13 Gothic   UNICODE_SCRIPT_GREEK 14 Greek   UNICODE_SCRIPT_GUJARATI 15 Gujarati   UNICODE_SCRIPT_GURMUKHI 16 Gurmukhi   UNICODE_SCRIPT_HAN 17 Han   UNICODE_SCRIPT_HANGUL 18 Hangul   UNICODE_SCRIPT_HEBREW 19 Hebrew   UNICODE_SCRIPT_HIRAGANA 20 Hiragana   UNICODE_SCRIPT_KANNADA 21 Kannada   UNICODE_SCRIPT_KATAKANA 22 Katakana   UNICODE_SCRIPT_KHMER 23 Khmer   UNICODE_SCRIPT_LAO 24 Lao   UNICODE_SCRIPT_LATIN 25 Latin   UNICODE_SCRIPT_MALAYALAM 26 Malayalam   UNICODE_SCRIPT_MONGOLIAN 27 Mongolian   UNICODE_SCRIPT_MYANMAR 28 Myanmar   UNICODE_SCRIPT_OGHAM 29 Ogham   UNICODE_SCRIPT_OLD_ITALIC 30 Old Italic   UNICODE_SCRIPT_ORIYA 31 Oriya   UNICODE_SCRIPT_RUNIC 32 Runic   UNICODE_SCRIPT_SINHALA 33 Sinhala   UNICODE_SCRIPT_SYRIAC 34 Syriac   UNICODE_SCRIPT_TAMIL 35 Tamil   UNICODE_SCRIPT_TELUGU 36 Telugu   UNICODE_SCRIPT_THAANA 37 Thaana   UNICODE_SCRIPT_THAI 38 Thai   UNICODE_SCRIPT_TIBETAN 39 Tibetan   UNICODE_SCRIPT_CANADIAN_ABORIGINAL 40 Canadian Aboriginal   UNICODE_SCRIPT_YI 41 Yi   UNICODE_SCRIPT_TAGALOG 42 Tagalog   UNICODE_SCRIPT_HANUNOO 43 Hanunoo   UNICODE_SCRIPT_BUHID 44 Buhid   UNICODE_SCRIPT_TAGBANWA 45 Tagbanwa   UNICODE_SCRIPT_BRAILLE 46 Braille   UNICODE_SCRIPT_CYPRIOT 47 Cypriot   UNICODE_SCRIPT_LIMBU 48 Limbu   UNICODE_SCRIPT_OSMANYA 49 Osmanya   UNICODE_SCRIPT_SHAVIAN 50 Shavian   UNICODE_SCRIPT_LINEAR_B 51 Linear B   UNICODE_SCRIPT_TAI_LE 52 Tai Le   UNICODE_SCRIPT_UGARITIC 53 Ugaritic   UNICODE_SCRIPT_NEW_TAI_LUE 54 New Tai Lue   UNICODE_SCRIPT_BUGINESE 55 Buginese   UNICODE_SCRIPT_GLAGOLITIC 56 Glagolitic   UNICODE_SCRIPT_TIFINAGH 57 Tifinagh   UNICODE_SCRIPT_SYLOTI_NAGRI 58 Syloti Nagri   UNICODE_SCRIPT_OLD_PERSIAN 59 Old Persian   UNICODE_SCRIPT_KHAROSHTHI 60 Kharoshthi   UNICODE_SCRIPT_UNKNOWN 61 an unassigned code point   UNICODE_SCRIPT_BALINESE 62 Balinese   UNICODE_SCRIPT_CUNEIFORM 63 Cuneiform   UNICODE_SCRIPT_PHOENICIAN 64 Phoenician   UNICODE_SCRIPT_PHAGS_PA 65 Phags-pa   UNICODE_SCRIPT_NKO 66 N\u0026rsquo;Ko   UNICODE_SCRIPT_KAYAH_LI 67 Kayah Li. Since 2.16.3   UNICODE_SCRIPT_LEPCHA 68 Lepcha. Since 2.16.3   UNICODE_SCRIPT_REJANG 69 Rejang. Since 2.16.3   UNICODE_SCRIPT_SUNDANESE 70 Sundanese. Since 2.16.3   UNICODE_SCRIPT_SAURASHTRA 71 Saurashtra. Since 2.16.3   UNICODE_SCRIPT_CHAM 72 Cham. Since 2.16.3   UNICODE_SCRIPT_OL_CHIKI 73 Ol Chiki. Since 2.16.3   UNICODE_SCRIPT_VAI 74 Vai. Since 2.16.3   UNICODE_SCRIPT_CARIAN 75 Carian. Since 2.16.3   UNICODE_SCRIPT_LYCIAN 76 Lycian. Since 2.16.3   UNICODE_SCRIPT_LYDIAN 77 Lydian. Since 2.16.3   UNICODE_SCRIPT_AVESTAN 78 Avestan. Since 2.26   UNICODE_SCRIPT_BAMUM 79 Bamum. Since 2.26   UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS 80 Egyptian Hieroglpyhs. Since 2.26   UNICODE_SCRIPT_IMPERIAL_ARAMAIC 81 Imperial Aramaic. Since 2.26   UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI 82 Inscriptional Pahlavi. Since 2.26   UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN 83 Inscriptional Parthian. Since 2.26   UNICODE_SCRIPT_JAVANESE 84 Javanese. Since 2.26   UNICODE_SCRIPT_KAITHI 85 Kaithi. Since 2.26   UNICODE_SCRIPT_LISU 86 Lisu. Since 2.26   UNICODE_SCRIPT_MEETEI_MAYEK 87 Meetei Mayek. Since 2.26   UNICODE_SCRIPT_OLD_SOUTH_ARABIAN 88 Old South Arabian. Since 2.26   UNICODE_SCRIPT_OLD_TURKIC 89 Old Turkic. Since 2.28   UNICODE_SCRIPT_SAMARITAN 90 Samaritan. Since 2.26   UNICODE_SCRIPT_TAI_THAM 91 Tai Tham. Since 2.26   UNICODE_SCRIPT_TAI_VIET 92 Tai Viet. Since 2.26   UNICODE_SCRIPT_BATAK 93 Batak. Since 2.28   UNICODE_SCRIPT_BRAHMI 94 Brahmi. Since 2.28   UNICODE_SCRIPT_MANDAIC 95 Mandaic. Since 2.28   UNICODE_SCRIPT_CHAKMA 96 Chakma. Since: 2.32   UNICODE_SCRIPT_MEROITIC_CURSIVE 97 Meroitic Cursive. Since: 2.32   UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS 98 Meroitic Hieroglyphs. Since: 2.32   UNICODE_SCRIPT_MIAO 99 Miao. Since: 2.32   UNICODE_SCRIPT_SHARADA 100 Sharada. Since: 2.32   UNICODE_SCRIPT_SORA_SOMPENG 101 Sora Sompeng. Since: 2.32   UNICODE_SCRIPT_TAKRI 102 Takri. Since: 2.32   UNICODE_SCRIPT_BASSA_VAH 103 Bassa. Since: 2.42   UNICODE_SCRIPT_CAUCASIAN_ALBANIAN 104 Caucasian Albanian. Since: 2.42   UNICODE_SCRIPT_DUPLOYAN 105 Duployan. Since: 2.42   UNICODE_SCRIPT_ELBASAN 106 Elbasan. Since: 2.42   UNICODE_SCRIPT_GRANTHA 107 Grantha. Since: 2.42   UNICODE_SCRIPT_KHOJKI 108 Kjohki. Since: 2.42   UNICODE_SCRIPT_KHUDAWADI 109 Khudawadi, Sindhi. Since: 2.42   UNICODE_SCRIPT_LINEAR_A 110 Linear A. Since: 2.42   UNICODE_SCRIPT_MAHAJANI 111 Mahajani. Since: 2.42   UNICODE_SCRIPT_MANICHAEAN 112 Manichaean. Since: 2.42   UNICODE_SCRIPT_MENDE_KIKAKUI 113 Mende Kikakui. Since: 2.42   UNICODE_SCRIPT_MODI 114 Modi. Since: 2.42   UNICODE_SCRIPT_MRO 115 Mro. Since: 2.42   UNICODE_SCRIPT_NABATAEAN 116 Nabataean. Since: 2.42   UNICODE_SCRIPT_OLD_NORTH_ARABIAN 117 Old North Arabian. Since: 2.42   UNICODE_SCRIPT_OLD_PERMIC 118 Old Permic. Since: 2.42   UNICODE_SCRIPT_PAHAWH_HMONG 119 Pahawh Hmong. Since: 2.42   UNICODE_SCRIPT_PALMYRENE 120 Palmyrene. Since: 2.42   UNICODE_SCRIPT_PAU_CIN_HAU 121 Pau Cin Hau. Since: 2.42   UNICODE_SCRIPT_PSALTER_PAHLAVI 122 Psalter Pahlavi. Since: 2.42   UNICODE_SCRIPT_SIDDHAM 123 Siddham. Since: 2.42   UNICODE_SCRIPT_TIRHUTA 124 Tirhuta. Since: 2.42   UNICODE_SCRIPT_WARANG_CITI 125 Warang Citi. Since: 2.42   UNICODE_SCRIPT_AHOM 126 Ahom. Since: 2.48   UNICODE_SCRIPT_ANATOLIAN_HIEROGLYPHS 127 Anatolian Hieroglyphs. Since: 2.48   UNICODE_SCRIPT_HATRAN 128 Hatran. Since: 2.48   UNICODE_SCRIPT_MULTANI 129 Multani. Since: 2.48   UNICODE_SCRIPT_OLD_HUNGARIAN 130 Old Hungarian. Since: 2.48   UNICODE_SCRIPT_SIGNWRITING 131 Signwriting. Since: 2.48   UNICODE_SCRIPT_ADLAM 132 Adlam. Since: 2.50   UNICODE_SCRIPT_BHAIKSUKI 133 Bhaiksuki. Since: 2.50   UNICODE_SCRIPT_MARCHEN 134 Marchen. Since: 2.50   UNICODE_SCRIPT_NEWA 135 Newa. Since: 2.50   UNICODE_SCRIPT_OSAGE 136 Osage. Since: 2.50   UNICODE_SCRIPT_TANGUT 137 Tangut. Since: 2.50   UNICODE_SCRIPT_MASARAM_GONDI 138 Masaram Gondi. Since: 2.54   UNICODE_SCRIPT_NUSHU 139 Nushu. Since: 2.54   UNICODE_SCRIPT_SOYOMBO 140 Soyombo. Since: 2.54   UNICODE_SCRIPT_ZANABAZAR_SQUARE 141 Zanabazar Square. Since: 2.54   C type: GUnicodeScript\n UnicodeType\nThese are the possible character classifications from the Unicode specification. See Unicode Character Database.\n  UNICODE_CONTROL 0 General category \u0026ldquo;Other, Control\u0026rdquo; (Cc)   UNICODE_FORMAT 1 General category \u0026ldquo;Other, Format\u0026rdquo; (Cf)   UNICODE_UNASSIGNED 2 General category \u0026ldquo;Other, Not Assigned\u0026rdquo; (Cn)   UNICODE_PRIVATE_USE 3 General category \u0026ldquo;Other, Private Use\u0026rdquo; (Co)   UNICODE_SURROGATE 4 General category \u0026ldquo;Other, Surrogate\u0026rdquo; (Cs)   UNICODE_LOWERCASE_LETTER 5 General category \u0026ldquo;Letter, Lowercase\u0026rdquo; (Ll)   UNICODE_MODIFIER_LETTER 6 General category \u0026ldquo;Letter, Modifier\u0026rdquo; (Lm)   UNICODE_OTHER_LETTER 7 General category \u0026ldquo;Letter, Other\u0026rdquo; (Lo)   UNICODE_TITLECASE_LETTER 8 General category \u0026ldquo;Letter, Titlecase\u0026rdquo; (Lt)   UNICODE_UPPERCASE_LETTER 9 General category \u0026ldquo;Letter, Uppercase\u0026rdquo; (Lu)   UNICODE_SPACING_MARK 10 General category \u0026ldquo;Mark, Spacing\u0026rdquo; (Mc)   UNICODE_ENCLOSING_MARK 11 General category \u0026ldquo;Mark, Enclosing\u0026rdquo; (Me)   UNICODE_NON_SPACING_MARK 12 General category \u0026ldquo;Mark, Nonspacing\u0026rdquo; (Mn)   UNICODE_DECIMAL_NUMBER 13 General category \u0026ldquo;Number, Decimal Digit\u0026rdquo; (Nd)   UNICODE_LETTER_NUMBER 14 General category \u0026ldquo;Number, Letter\u0026rdquo; (Nl)   UNICODE_OTHER_NUMBER 15 General category \u0026ldquo;Number, Other\u0026rdquo; (No)   UNICODE_CONNECT_PUNCTUATION 16 General category \u0026ldquo;Punctuation, Connector\u0026rdquo; (Pc)   UNICODE_DASH_PUNCTUATION 17 General category \u0026ldquo;Punctuation, Dash\u0026rdquo; (Pd)   UNICODE_CLOSE_PUNCTUATION 18 General category \u0026ldquo;Punctuation, Close\u0026rdquo; (Pe)   UNICODE_FINAL_PUNCTUATION 19 General category \u0026ldquo;Punctuation, Final quote\u0026rdquo; (Pf)   UNICODE_INITIAL_PUNCTUATION 20 General category \u0026ldquo;Punctuation, Initial quote\u0026rdquo; (Pi)   UNICODE_OTHER_PUNCTUATION 21 General category \u0026ldquo;Punctuation, Other\u0026rdquo; (Po)   UNICODE_OPEN_PUNCTUATION 22 General category \u0026ldquo;Punctuation, Open\u0026rdquo; (Ps)   UNICODE_CURRENCY_SYMBOL 23 General category \u0026ldquo;Symbol, Currency\u0026rdquo; (Sc)   UNICODE_MODIFIER_SYMBOL 24 General category \u0026ldquo;Symbol, Modifier\u0026rdquo; (Sk)   UNICODE_MATH_SYMBOL 25 General category \u0026ldquo;Symbol, Math\u0026rdquo; (Sm)   UNICODE_OTHER_SYMBOL 26 General category \u0026ldquo;Symbol, Other\u0026rdquo; (So)   UNICODE_LINE_SEPARATOR 27 General category \u0026ldquo;Separator, Line\u0026rdquo; (Zl)   UNICODE_PARAGRAPH_SEPARATOR 28 General category \u0026ldquo;Separator, Paragraph\u0026rdquo; (Zp)   UNICODE_SPACE_SEPARATOR 29 General category \u0026ldquo;Separator, Space\u0026rdquo; (Zs)   C type: GUnicodeType\n UserDirectory\nThese are logical ids for special directories which are defined depending on the platform used. You should use g_get_user_special_dir() to retrieve the full path associated to the logical id.\nThe #GUserDirectory enumeration can be extended at later date. Not every platform has a directory for every logical id in this enumeration.\n  USER_DIRECTORY_DESKTOP 0 the user\u0026rsquo;s Desktop directory   USER_DIRECTORY_DOCUMENTS 1 the user\u0026rsquo;s Documents directory   USER_DIRECTORY_DOWNLOAD 2 the user\u0026rsquo;s Downloads directory   USER_DIRECTORY_MUSIC 3 the user\u0026rsquo;s Music directory   USER_DIRECTORY_PICTURES 4 the user\u0026rsquo;s Pictures directory   USER_DIRECTORY_PUBLIC_SHARE 5 the user\u0026rsquo;s shared directory   USER_DIRECTORY_TEMPLATES 6 the user\u0026rsquo;s Templates directory   USER_DIRECTORY_VIDEOS 7 the user\u0026rsquo;s Movies directory   USER_N_DIRECTORIES 8 the number of enum values   since 2.14\nC type: GUserDirectory\n VariantClass\nThe range of possible top-level types of #GVariant instances.\n  VARIANT_CLASS_BOOLEAN 98 The #GVariant is a boolean.   VARIANT_CLASS_BYTE 121 The #GVariant is a byte.   VARIANT_CLASS_INT16 110 The #GVariant is a signed 16 bit integer.   VARIANT_CLASS_UINT16 113 The #GVariant is an unsigned 16 bit integer.   VARIANT_CLASS_INT32 105 The #GVariant is a signed 32 bit integer.   VARIANT_CLASS_UINT32 117 The #GVariant is an unsigned 32 bit integer.   VARIANT_CLASS_INT64 120 The #GVariant is a signed 64 bit integer.   VARIANT_CLASS_UINT64 116 The #GVariant is an unsigned 64 bit integer.   VARIANT_CLASS_HANDLE 104 The #GVariant is a file handle index.   VARIANT_CLASS_DOUBLE 100 The #GVariant is a double precision floating point value.   VARIANT_CLASS_STRING 115 The #GVariant is a normal string.   VARIANT_CLASS_OBJECT_PATH 111 The #GVariant is a D-Bus object path string.   VARIANT_CLASS_SIGNATURE 103 The #GVariant is a D-Bus signature string.   VARIANT_CLASS_VARIANT 118 The #GVariant is a variant.   VARIANT_CLASS_MAYBE 109 The #GVariant is a maybe-typed value.   VARIANT_CLASS_ARRAY 97 The #GVariant is an array.   VARIANT_CLASS_TUPLE 40 The #GVariant is a tuple.   VARIANT_CLASS_DICT_ENTRY 123 The #GVariant is a dictionary entry.   since 2.24\nC type: GVariantClass\n VariantParseError\nError codes returned by parsing text-format GVariants.\n  VARIANT_PARSE_ERROR_FAILED 0 generic error (unused)   VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED 1 a non-basic #GVariantType was given where a basic type was expected   VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE 2 cannot infer the #GVariantType   VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED 3 an indefinite #GVariantType was given where a definite type was expected   VARIANT_PARSE_ERROR_INPUT_NOT_AT_END 4 extra data after parsing finished   VARIANT_PARSE_ERROR_INVALID_CHARACTER 5 invalid character in number or unicode escape   VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING 6 not a valid #GVariant format string   VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH 7 not a valid object path   VARIANT_PARSE_ERROR_INVALID_SIGNATURE 8 not a valid type signature   VARIANT_PARSE_ERROR_INVALID_TYPE_STRING 9 not a valid #GVariant type string   VARIANT_PARSE_ERROR_NO_COMMON_TYPE 10 could not find a common type for array entries   VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE 11 the numerical value is out of range of the given type   VARIANT_PARSE_ERROR_NUMBER_TOO_BIG 12 the numerical value is out of range for any type   VARIANT_PARSE_ERROR_TYPE_ERROR 13 cannot parse as variant of the specified type   VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN 14 an unexpected token was encountered   VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD 15 an unknown keyword was encountered   VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT 16 unterminated string constant   VARIANT_PARSE_ERROR_VALUE_EXPECTED 17 no value given   C type: GVariantParseError\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gobject/enums/",
	"title": "enums",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/gtk/enums/",
	"title": "enums",
	"tags": [],
	"description": "",
	"content": "Align\nControls how a widget deals with extra space in a single (x or y) dimension.\nAlignment only matters if the widget receives a “too large” allocation, for example if you packed the widget with the #GtkWidget:expand flag inside a #GtkBox, then the widget might get extra space. If you have for example a 16x16 icon inside a 32x32 space, the icon could be scaled and stretched, it could be centered, or it could be positioned to one side of the space.\nNote that in horizontal context @GTK_ALIGN_START and @GTK_ALIGN_END are interpreted relative to text direction.\nGTK_ALIGN_BASELINE support for it is optional for containers and widgets, and it is only supported for vertical alignment. When its not supported by a child or a container it is treated as @GTK_ALIGN_FILL.\n  GTK_ALIGN_FILL 0 stretch to fill all space if possible, center if no meaningful way to stretch   GTK_ALIGN_START 1 snap to left or top side, leaving space on right or bottom   GTK_ALIGN_END 2 snap to right or bottom side, leaving space on left or top   GTK_ALIGN_CENTER 3 center natural width of widget inside the allocation   GTK_ALIGN_BASELINE 4 align the widget according to the baseline. Since 3.10.   C type: GtkAlign\n ArrowPlacement\nUsed to specify the placement of scroll arrows in scrolling menus.\n  GTK_ARROWS_BOTH 0 Place one arrow on each end of the menu.   GTK_ARROWS_START 1 Place both arrows at the top of the menu.   GTK_ARROWS_END 2 Place both arrows at the bottom of the menu.   C type: GtkArrowPlacement\n ArrowType\nUsed to indicate the direction in which an arrow should point.\n  GTK_ARROW_UP 0 Represents an upward pointing arrow.   GTK_ARROW_DOWN 1 Represents a downward pointing arrow.   GTK_ARROW_LEFT 2 Represents a left pointing arrow.   GTK_ARROW_RIGHT 3 Represents a right pointing arrow.   GTK_ARROW_NONE 4 No arrow. Since 2.10.   C type: GtkArrowType\n AssistantPageType\nAn enum for determining the page role inside the #GtkAssistant. It\u0026rsquo;s used to handle buttons sensitivity and visibility.\nNote that an assistant needs to end its page flow with a page of type %GTK_ASSISTANT_PAGE_CONFIRM, %GTK_ASSISTANT_PAGE_SUMMARY or %GTK_ASSISTANT_PAGE_PROGRESS to be correct.\nThe Cancel button will only be shown if the page isn’t “committed”. See gtk_assistant_commit() for details.\n  GTK_ASSISTANT_PAGE_CONTENT 0 The page has regular contents. Both the Back and forward buttons will be shown.   GTK_ASSISTANT_PAGE_INTRO 1 The page contains an introduction to the assistant task. Only the Forward button will be shown if there is a next page.   GTK_ASSISTANT_PAGE_CONFIRM 2 The page lets the user confirm or deny the changes. The Back and Apply buttons will be shown.   GTK_ASSISTANT_PAGE_SUMMARY 3 The page informs the user of the changes done. Only the Close button will be shown.   GTK_ASSISTANT_PAGE_PROGRESS 4 Used for tasks that take a long time to complete, blocks the assistant until the page is marked as complete. Only the back button will be shown.   GTK_ASSISTANT_PAGE_CUSTOM 5 Used for when other page types are not appropriate. No buttons will be shown, and the application must add its own buttons through gtk_assistant_add_action_widget().   C type: GtkAssistantPageType\n BaselinePosition\nWhenever a container has some form of natural row it may align children in that row along a common typographical baseline. If the amount of verical space in the row is taller than the total requested height of the baseline-aligned children then it can use a #GtkBaselinePosition to select where to put the baseline inside the extra availible space.\n  GTK_BASELINE_POSITION_TOP 0 Align the baseline at the top   GTK_BASELINE_POSITION_CENTER 1 Center the baseline   GTK_BASELINE_POSITION_BOTTOM 2 Align the baseline at the bottom   since 3.10\nC type: GtkBaselinePosition\n BorderStyle\nDescribes how the border of a UI element should be rendered.\n  GTK_BORDER_STYLE_NONE 0 No visible border   GTK_BORDER_STYLE_SOLID 1 A single line segment   GTK_BORDER_STYLE_INSET 2 Looks as if the content is sunken into the canvas   GTK_BORDER_STYLE_OUTSET 3 Looks as if the content is coming out of the canvas   GTK_BORDER_STYLE_HIDDEN 4 Same as @GTK_BORDER_STYLE_NONE   GTK_BORDER_STYLE_DOTTED 5 A series of round dots   GTK_BORDER_STYLE_DASHED 6 A series of square-ended dashes   GTK_BORDER_STYLE_DOUBLE 7 Two parallel lines with some space between them   GTK_BORDER_STYLE_GROOVE 8 Looks as if it were carved in the canvas   GTK_BORDER_STYLE_RIDGE 9 Looks as if it were coming out of the canvas   C type: GtkBorderStyle\n BuilderError\nError codes that identify various errors that can occur while using #GtkBuilder.\n  GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION 0 A type-func attribute didn’t name a function that returns a #GType.   GTK_BUILDER_ERROR_UNHANDLED_TAG 1 The input contained a tag that #GtkBuilder can’t handle.   GTK_BUILDER_ERROR_MISSING_ATTRIBUTE 2 An attribute that is required by #GtkBuilder was missing.   GTK_BUILDER_ERROR_INVALID_ATTRIBUTE 3 #GtkBuilder found an attribute that it doesn’t understand.   GTK_BUILDER_ERROR_INVALID_TAG 4 #GtkBuilder found a tag that it doesn’t understand.   GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE 5 A required property value was missing.   GTK_BUILDER_ERROR_INVALID_VALUE 6 #GtkBuilder couldn’t parse some attribute value.   GTK_BUILDER_ERROR_VERSION_MISMATCH 7 The input file requires a newer version of GTK+.   GTK_BUILDER_ERROR_DUPLICATE_ID 8 An object id occurred twice.   GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED 9 A specified object type is of the same type or derived from the type of the composite class being extended with builder XML.   GTK_BUILDER_ERROR_TEMPLATE_MISMATCH 10 The wrong type was specified in a composite class’s template XML   GTK_BUILDER_ERROR_INVALID_PROPERTY 11 The specified property is unknown for the object class.   GTK_BUILDER_ERROR_INVALID_SIGNAL 12 The specified signal is unknown for the object class.   GTK_BUILDER_ERROR_INVALID_ID 13 An object id is unknown   C type: GtkBuilderError\n ButtonBoxStyle\nUsed to dictate the style that a #GtkButtonBox uses to layout the buttons it contains.\n  GTK_BUTTONBOX_SPREAD 1 Buttons are evenly spread across the box.   GTK_BUTTONBOX_EDGE 2 Buttons are placed at the edges of the box.   GTK_BUTTONBOX_START 3 Buttons are grouped towards the start of the box, (on the left for a HBox, or the top for a VBox).   GTK_BUTTONBOX_END 4 Buttons are grouped towards the end of the box, (on the right for a HBox, or the bottom for a VBox).   GTK_BUTTONBOX_CENTER 5 Buttons are centered in the box. Since 2.12.   GTK_BUTTONBOX_EXPAND 6 Buttons expand to fill the box. This entails giving buttons a \u0026ldquo;linked\u0026rdquo; appearance, making button sizes homogeneous, and setting spacing to 0 (same as calling gtk_box_set_homogeneous() and gtk_box_set_spacing() manually). Since 3.12.   C type: GtkButtonBoxStyle\n ButtonRole\nThe role specifies the desired appearance of a #GtkModelButton.\n  GTK_BUTTON_ROLE_NORMAL 0 A plain button   GTK_BUTTON_ROLE_CHECK 1 A check button   GTK_BUTTON_ROLE_RADIO 2 A radio button   C type: GtkButtonRole\n ButtonsType\nPrebuilt sets of buttons for the dialog. If none of these choices are appropriate, simply use %GTK_BUTTONS_NONE then call gtk_dialog_add_buttons().\n Please note that %GTK_BUTTONS_OK, %GTK_BUTTONS_YES_NO and %GTK_BUTTONS_OK_CANCEL are discouraged by the GNOME Human Interface Guidelines.\n  GTK_BUTTONS_NONE 0 no buttons at all   GTK_BUTTONS_OK 1 an OK button   GTK_BUTTONS_CLOSE 2 a Close button   GTK_BUTTONS_CANCEL 3 a Cancel button   GTK_BUTTONS_YES_NO 4 Yes and No buttons   GTK_BUTTONS_OK_CANCEL 5 OK and Cancel buttons   C type: GtkButtonsType\n CellRendererAccelMode\nDetermines if the edited accelerators are GTK+ accelerators. If they are, consumed modifiers are suppressed, only accelerators accepted by GTK+ are allowed, and the accelerators are rendered in the same way as they are in menus.\n  GTK_CELL_RENDERER_ACCEL_MODE_GTK 0 GTK+ accelerators mode   GTK_CELL_RENDERER_ACCEL_MODE_OTHER 1 Other accelerator mode GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP: Bare modifiers mode   GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP 2   C type: GtkCellRendererAccelMode\n CellRendererMode\nIdentifies how the user can interact with a particular cell.\n  GTK_CELL_RENDERER_MODE_INERT 0 The cell is just for display and cannot be interacted with. Note that this doesn’t mean that eg. the row being drawn can’t be selected \u0026ndash; just that a particular element of it cannot be individually modified.   GTK_CELL_RENDERER_MODE_ACTIVATABLE 1 The cell can be clicked.   GTK_CELL_RENDERER_MODE_EDITABLE 2 The cell can be edited or otherwise modified.   C type: GtkCellRendererMode\n CornerType\nSpecifies which corner a child widget should be placed in when packed into a #GtkScrolledWindow. This is effectively the opposite of where the scroll bars are placed.\n  GTK_CORNER_TOP_LEFT 0 Place the scrollbars on the right and bottom of the widget (default behaviour).   GTK_CORNER_BOTTOM_LEFT 1 Place the scrollbars on the top and right of the widget.   GTK_CORNER_TOP_RIGHT 2 Place the scrollbars on the left and bottom of the widget.   GTK_CORNER_BOTTOM_RIGHT 3 Place the scrollbars on the top and left of the widget.   C type: GtkCornerType\n CssProviderError\nError codes for %GTK_CSS_PROVIDER_ERROR.\n  GTK_CSS_PROVIDER_ERROR_FAILED 0 Failed.   GTK_CSS_PROVIDER_ERROR_SYNTAX 1 Syntax error.   GTK_CSS_PROVIDER_ERROR_IMPORT 2 Import error.   GTK_CSS_PROVIDER_ERROR_NAME 3 Name error.   GTK_CSS_PROVIDER_ERROR_DEPRECATED 4 Deprecation error.   GTK_CSS_PROVIDER_ERROR_UNKNOWN_VALUE 5 Unknown value.   C type: GtkCssProviderError\n CssSectionType\nThe different types of sections indicate parts of a CSS document as parsed by GTK’s CSS parser. They are oriented towards the CSS Grammar, but may contain extensions.\n More types might be added in the future as the parser incorporates more features.\n  GTK_CSS_SECTION_DOCUMENT 0 The section describes a complete document. This section time is the only one where gtk_css_section_get_parent() might return %NULL.   GTK_CSS_SECTION_IMPORT 1 The section defines an import rule.   GTK_CSS_SECTION_COLOR_DEFINITION 2 The section defines a color. This is a GTK extension to CSS.   GTK_CSS_SECTION_BINDING_SET 3 The section defines a binding set. This is a GTK extension to CSS.   GTK_CSS_SECTION_RULESET 4 The section defines a CSS ruleset.   GTK_CSS_SECTION_SELECTOR 5 The section defines a CSS selector.   GTK_CSS_SECTION_DECLARATION 6 The section defines the declaration of a CSS variable.   GTK_CSS_SECTION_VALUE 7 The section defines the value of a CSS declaration.   GTK_CSS_SECTION_KEYFRAMES 8 The section defines keyframes. See CSS Animations for details. Since 3.6   since 3.2\nC type: GtkCssSectionType\n DeleteType\nSee also: #GtkEntry::delete-from-cursor.\n  GTK_DELETE_CHARS 0 Delete characters.   GTK_DELETE_WORD_ENDS 1 Delete only the portion of the word to the left/right of cursor if we’re in the middle of a word.   GTK_DELETE_WORDS 2 Delete words.   GTK_DELETE_DISPLAY_LINES 3 Delete display-lines. Display-lines refers to the visible lines, with respect to to the current line breaks. As opposed to paragraphs, which are defined by line breaks in the input.   GTK_DELETE_DISPLAY_LINE_ENDS 4 Delete only the portion of the display-line to the left/right of cursor.   GTK_DELETE_PARAGRAPH_ENDS 5 Delete to the end of the paragraph. Like C-k in Emacs (or its reverse).   GTK_DELETE_PARAGRAPHS 6 Delete entire line. Like C-k in pico.   GTK_DELETE_WHITESPACE 7 Delete only whitespace. Like M-\\ in Emacs.   C type: GtkDeleteType\n DirectionType\nFocus movement types.\n  GTK_DIR_TAB_FORWARD 0 Move forward.   GTK_DIR_TAB_BACKWARD 1 Move backward.   GTK_DIR_UP 2 Move up.   GTK_DIR_DOWN 3 Move down.   GTK_DIR_LEFT 4 Move left.   GTK_DIR_RIGHT 5 Move right.   C type: GtkDirectionType\n DragResult\nGives an indication why a drag operation failed. The value can by obtained by connecting to the #GtkWidget::drag-failed signal.\n  GTK_DRAG_RESULT_SUCCESS 0 The drag operation was successful.   GTK_DRAG_RESULT_NO_TARGET 1 No suitable drag target.   GTK_DRAG_RESULT_USER_CANCELLED 2 The user cancelled the drag operation.   GTK_DRAG_RESULT_TIMEOUT_EXPIRED 3 The drag operation timed out.   GTK_DRAG_RESULT_GRAB_BROKEN 4 The pointer or keyboard grab used for the drag operation was broken.   GTK_DRAG_RESULT_ERROR 5 The drag operation failed due to some unspecified error.   C type: GtkDragResult\n EntryIconPosition\nSpecifies the side of the entry at which an icon is placed.\n  GTK_ENTRY_ICON_PRIMARY 0 At the beginning of the entry (depending on the text direction).   GTK_ENTRY_ICON_SECONDARY 1 At the end of the entry (depending on the text direction).   since 2.16\nC type: GtkEntryIconPosition\n EventSequenceState\nDescribes the state of a #GdkEventSequence in a #GtkGesture.\n  GTK_EVENT_SEQUENCE_NONE 0 The sequence is handled, but not grabbed.   GTK_EVENT_SEQUENCE_CLAIMED 1 The sequence is handled and grabbed.   GTK_EVENT_SEQUENCE_DENIED 2 The sequence is denied.   since 3.14\nC type: GtkEventSequenceState\n ExpanderStyle\nUsed to specify the style of the expanders drawn by a #GtkTreeView.\n  GTK_EXPANDER_COLLAPSED 0 The style used for a collapsed subtree.   GTK_EXPANDER_SEMI_COLLAPSED 1 Intermediate style used during animation.   GTK_EXPANDER_SEMI_EXPANDED 2 Intermediate style used during animation.   GTK_EXPANDER_EXPANDED 3 The style used for an expanded subtree.   C type: GtkExpanderStyle\n FileChooserAction\nDescribes whether a #GtkFileChooser is being used to open existing files or to save to a possibly new file.\n  GTK_FILE_CHOOSER_ACTION_OPEN 0 Indicates open mode. The file chooser will only let the user pick an existing file.   GTK_FILE_CHOOSER_ACTION_SAVE 1 Indicates save mode. The file chooser will let the user pick an existing file, or type in a new filename.   GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER 2 Indicates an Open mode for selecting folders. The file chooser will let the user pick an existing folder.   GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER 3 Indicates a mode for creating a new folder. The file chooser will let the user name an existing or new folder.   C type: GtkFileChooserAction\n FileChooserConfirmation\nUsed as a return value of handlers for the #GtkFileChooser::confirm-overwrite signal of a #GtkFileChooser. This value determines whether the file chooser will present the stock confirmation dialog, accept the user’s choice of a filename, or let the user choose another filename.\n  GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM 0 The file chooser will present its stock dialog to confirm about overwriting an existing file.   GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME 1 The file chooser will terminate and accept the user’s choice of a file name.   GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN 2 The file chooser will continue running, so as to let the user select another file name.   since 2.8\nC type: GtkFileChooserConfirmation\n FileChooserError\nThese identify the various errors that can occur while calling #GtkFileChooser functions.\n  GTK_FILE_CHOOSER_ERROR_NONEXISTENT 0 Indicates that a file does not exist.   GTK_FILE_CHOOSER_ERROR_BAD_FILENAME 1 Indicates a malformed filename.   GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS 2 Indicates a duplicate path (e.g. when adding a bookmark).   GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME 3 Indicates an incomplete hostname (e.g. \u0026ldquo;http://foo\u0026quot; without a slash after that).   C type: GtkFileChooserError\n IMPreeditStyle\nStyle for input method preedit. See also #GtkSettings:gtk-im-preedit-style\n  GTK_IM_PREEDIT_NOTHING 0 Deprecated   GTK_IM_PREEDIT_CALLBACK 1 Deprecated   GTK_IM_PREEDIT_NONE 2 Deprecated   C type: GtkIMPreeditStyle\n IMStatusStyle\nStyle for input method status. See also #GtkSettings:gtk-im-status-style\n  GTK_IM_STATUS_NOTHING 0 Deprecated   GTK_IM_STATUS_CALLBACK 1 Deprecated   GTK_IM_STATUS_NONE 2 Deprecated   C type: GtkIMStatusStyle\n IconSize\nBuilt-in stock icon sizes.\n  GTK_ICON_SIZE_INVALID 0 Invalid size.   GTK_ICON_SIZE_MENU 1 Size appropriate for menus (16px).   GTK_ICON_SIZE_SMALL_TOOLBAR 2 Size appropriate for small toolbars (16px).   GTK_ICON_SIZE_LARGE_TOOLBAR 3 Size appropriate for large toolbars (24px)   GTK_ICON_SIZE_BUTTON 4 Size appropriate for buttons (16px)   GTK_ICON_SIZE_DND 5 Size appropriate for drag and drop (32px)   GTK_ICON_SIZE_DIALOG 6 Size appropriate for dialogs (48px)   C type: GtkIconSize\n IconThemeError\nError codes for GtkIconTheme operations.\n  GTK_ICON_THEME_NOT_FOUND 0 The icon specified does not exist in the theme   GTK_ICON_THEME_FAILED 1 An unspecified error occurred.   C type: GtkIconThemeError\n IconViewDropPosition\nAn enum for determining where a dropped item goes.\n  GTK_ICON_VIEW_NO_DROP 0 no drop possible   GTK_ICON_VIEW_DROP_INTO 1 dropped item replaces the item   GTK_ICON_VIEW_DROP_LEFT 2 droppped item is inserted to the left   GTK_ICON_VIEW_DROP_RIGHT 3 dropped item is inserted to the right   GTK_ICON_VIEW_DROP_ABOVE 4 dropped item is inserted above   GTK_ICON_VIEW_DROP_BELOW 5 dropped item is inserted below   C type: GtkIconViewDropPosition\n ImageType\nDescribes the image data representation used by a #GtkImage. If you want to get the image from the widget, you can only get the currently-stored representation. e.g. if the gtk_image_get_storage_type() returns #GTK_IMAGE_PIXBUF, then you can call gtk_image_get_pixbuf() but not gtk_image_get_stock(). For empty images, you can request any storage type (call any of the \u0026ldquo;get\u0026rdquo; functions), but they will all return %NULL values.\n  GTK_IMAGE_EMPTY 0 there is no image displayed by the widget   GTK_IMAGE_PIXBUF 1 the widget contains a #GdkPixbuf   GTK_IMAGE_STOCK 2 the widget contains a [stock item name][gtkstock]   GTK_IMAGE_ICON_SET 3 the widget contains a #GtkIconSet   GTK_IMAGE_ANIMATION 4 the widget contains a #GdkPixbufAnimation   GTK_IMAGE_ICON_NAME 5 the widget contains a named icon. This image type was added in GTK+ 2.6   GTK_IMAGE_GICON 6 the widget contains a #GIcon. This image type was added in GTK+ 2.14   GTK_IMAGE_SURFACE 7 the widget contains a #cairo_surface_t. This image type was added in GTK+ 3.10   C type: GtkImageType\n InputPurpose\nDescribes primary purpose of the input widget. This information is useful for on-screen keyboards and similar input methods to decide which keys should be presented to the user.\nNote that the purpose is not meant to impose a totally strict rule about allowed characters, and does not replace input validation. It is fine for an on-screen keyboard to let the user override the character set restriction that is expressed by the purpose. The application is expected to validate the entry contents, even if it specified a purpose.\nThe difference between @GTK_INPUT_PURPOSE_DIGITS and @GTK_INPUT_PURPOSE_NUMBER is that the former accepts only digits while the latter also some punctuation (like commas or points, plus, minus) and “e” or “E” as in 3.14E+000.\nThis enumeration may be extended in the future; input methods should interpret unknown values as “free form”.\n  GTK_INPUT_PURPOSE_FREE_FORM 0 Allow any character   GTK_INPUT_PURPOSE_ALPHA 1 Allow only alphabetic characters   GTK_INPUT_PURPOSE_DIGITS 2 Allow only digits   GTK_INPUT_PURPOSE_NUMBER 3 Edited field expects numbers   GTK_INPUT_PURPOSE_PHONE 4 Edited field expects phone number   GTK_INPUT_PURPOSE_URL 5 Edited field expects URL   GTK_INPUT_PURPOSE_EMAIL 6 Edited field expects email address   GTK_INPUT_PURPOSE_NAME 7 Edited field expects the name of a person   GTK_INPUT_PURPOSE_PASSWORD 8 Like @GTK_INPUT_PURPOSE_FREE_FORM, but characters are hidden   GTK_INPUT_PURPOSE_PIN 9 Like @GTK_INPUT_PURPOSE_DIGITS, but characters are hidden   since 3.6\nC type: GtkInputPurpose\n Justification\nUsed for justifying the text inside a #GtkLabel widget. (See also #GtkAlignment).\n  GTK_JUSTIFY_LEFT 0 The text is placed at the left edge of the label.   GTK_JUSTIFY_RIGHT 1 The text is placed at the right edge of the label.   GTK_JUSTIFY_CENTER 2 The text is placed in the center of the label.   GTK_JUSTIFY_FILL 3 The text is placed is distributed across the label.   C type: GtkJustification\n LevelBarMode\nDescribes how #GtkLevelBar contents should be rendered. Note that this enumeration could be extended with additional modes in the future.\n  GTK_LEVEL_BAR_MODE_CONTINUOUS 0 the bar has a continuous mode   GTK_LEVEL_BAR_MODE_DISCRETE 1 the bar has a discrete mode   since 3.6\nC type: GtkLevelBarMode\n License\nThe type of license for an application.\nThis enumeration can be expanded at later date.\n  GTK_LICENSE_UNKNOWN 0 No license specified   GTK_LICENSE_CUSTOM 1 A license text is going to be specified by the developer   GTK_LICENSE_GPL_2_0 2 The GNU General Public License, version 2.0 or later   GTK_LICENSE_GPL_3_0 3 The GNU General Public License, version 3.0 or later   GTK_LICENSE_LGPL_2_1 4 The GNU Lesser General Public License, version 2.1 or later   GTK_LICENSE_LGPL_3_0 5 The GNU Lesser General Public License, version 3.0 or later   GTK_LICENSE_BSD 6 The BSD standard license   GTK_LICENSE_MIT_X11 7 The MIT/X11 standard license   GTK_LICENSE_ARTISTIC 8 The Artistic License, version 2.0   GTK_LICENSE_GPL_2_0_ONLY 9 The GNU General Public License, version 2.0 only. Since 3.12.   GTK_LICENSE_GPL_3_0_ONLY 10 The GNU General Public License, version 3.0 only. Since 3.12.   GTK_LICENSE_LGPL_2_1_ONLY 11 The GNU Lesser General Public License, version 2.1 only. Since 3.12.   GTK_LICENSE_LGPL_3_0_ONLY 12 The GNU Lesser General Public License, version 3.0 only. Since 3.12.   GTK_LICENSE_AGPL_3_0 13 The GNU Affero General Public License, version 3.0 or later. Since: 3.22.   GTK_LICENSE_AGPL_3_0_ONLY 14 The GNU Affero General Public License, version 3.0 only. Since: 3.22.27.   since 3.0\nC type: GtkLicense\n MenuDirectionType\nAn enumeration representing directional movements within a menu.\n  GTK_MENU_DIR_PARENT 0 To the parent menu shell   GTK_MENU_DIR_CHILD 1 To the submenu, if any, associated with the item   GTK_MENU_DIR_NEXT 2 To the next menu item   GTK_MENU_DIR_PREV 3 To the previous menu item   C type: GtkMenuDirectionType\n MessageType\nThe type of message being displayed in the dialog.\n  GTK_MESSAGE_INFO 0 Informational message   GTK_MESSAGE_WARNING 1 Non-fatal warning message   GTK_MESSAGE_QUESTION 2 Question requiring a choice   GTK_MESSAGE_ERROR 3 Fatal error message   GTK_MESSAGE_OTHER 4 None of the above   C type: GtkMessageType\n MovementStep\n  GTK_MOVEMENT_LOGICAL_POSITIONS 0 Move forward or back by graphemes   GTK_MOVEMENT_VISUAL_POSITIONS 1 Move left or right by graphemes   GTK_MOVEMENT_WORDS 2 Move forward or back by words   GTK_MOVEMENT_DISPLAY_LINES 3 Move up or down lines (wrapped lines)   GTK_MOVEMENT_DISPLAY_LINE_ENDS 4 Move to either end of a line   GTK_MOVEMENT_PARAGRAPHS 5 Move up or down paragraphs (newline-ended lines)   GTK_MOVEMENT_PARAGRAPH_ENDS 6 Move to either end of a paragraph   GTK_MOVEMENT_PAGES 7 Move by pages   GTK_MOVEMENT_BUFFER_ENDS 8 Move to ends of the buffer   GTK_MOVEMENT_HORIZONTAL_PAGES 9 Move horizontally by pages   C type: GtkMovementStep\n NotebookTab\n  GTK_NOTEBOOK_TAB_FIRST 0   GTK_NOTEBOOK_TAB_LAST 1   C type: GtkNotebookTab\n NumberUpLayout\nUsed to determine the layout of pages on a sheet when printing multiple pages per sheet.\n  GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM 0    GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP 1    GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM 2    GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP 3    GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT 4    GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT 5    GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT 6    GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT 7    C type: GtkNumberUpLayout\n Orientation\nRepresents the orientation of widgets and other objects which can be switched between horizontal and vertical orientation on the fly, like #GtkToolbar or #GtkGesturePan.\n  GTK_ORIENTATION_HORIZONTAL 0 The element is in horizontal orientation.   GTK_ORIENTATION_VERTICAL 1 The element is in vertical orientation.   C type: GtkOrientation\n PackDirection\nDetermines how widgets should be packed inside menubars and menuitems contained in menubars.\n  GTK_PACK_DIRECTION_LTR 0 Widgets are packed left-to-right   GTK_PACK_DIRECTION_RTL 1 Widgets are packed right-to-left   GTK_PACK_DIRECTION_TTB 2 Widgets are packed top-to-bottom   GTK_PACK_DIRECTION_BTT 3 Widgets are packed bottom-to-top   C type: GtkPackDirection\n PackType\nRepresents the packing location #GtkBox children. (See: #GtkVBox, #GtkHBox, and #GtkButtonBox).\n  GTK_PACK_START 0 The child is packed into the start of the box   GTK_PACK_END 1 The child is packed into the end of the box   C type: GtkPackType\n PadActionType\nThe type of a pad action.\n  GTK_PAD_ACTION_BUTTON 0 Action is triggered by a pad button   GTK_PAD_ACTION_RING 1 Action is triggered by a pad ring   GTK_PAD_ACTION_STRIP 2 Action is triggered by a pad strip   since 3.22\nC type: GtkPadActionType\n PageOrientation\nSee also gtk_print_settings_set_orientation().\n  GTK_PAGE_ORIENTATION_PORTRAIT 0 Portrait mode.   GTK_PAGE_ORIENTATION_LANDSCAPE 1 Landscape mode.   GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT 2 Reverse portrait mode.   GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE 3 Reverse landscape mode.   C type: GtkPageOrientation\n PageSet\nSee also gtk_print_job_set_page_set().\n  GTK_PAGE_SET_ALL 0 All pages.   GTK_PAGE_SET_EVEN 1 Even pages.   GTK_PAGE_SET_ODD 2 Odd pages.   C type: GtkPageSet\n PanDirection\nDescribes the panning direction of a #GtkGesturePan\n  GTK_PAN_DIRECTION_LEFT 0 panned towards the left   GTK_PAN_DIRECTION_RIGHT 1 panned towards the right   GTK_PAN_DIRECTION_UP 2 panned upwards   GTK_PAN_DIRECTION_DOWN 3 panned downwards   since 3.14\nC type: GtkPanDirection\n PathPriorityType\nPriorities for path lookups. See also gtk_binding_set_add_path().\n  GTK_PATH_PRIO_LOWEST 0 Deprecated   GTK_PATH_PRIO_GTK 4 Deprecated   GTK_PATH_PRIO_APPLICATION 8 Deprecated   GTK_PATH_PRIO_THEME 10 Deprecated   GTK_PATH_PRIO_RC 12 Deprecated   GTK_PATH_PRIO_HIGHEST 15 Deprecated   C type: GtkPathPriorityType\n PathType\nWidget path types. See also gtk_binding_set_add_path().\n  GTK_PATH_WIDGET 0 Deprecated   GTK_PATH_WIDGET_CLASS 1 Deprecated   GTK_PATH_CLASS 2 Deprecated   C type: GtkPathType\n PolicyType\nDetermines how the size should be computed to achieve the one of the visibility mode for the scrollbars.\n  GTK_POLICY_ALWAYS 0 The scrollbar is always visible. The view size is independent of the content.   GTK_POLICY_AUTOMATIC 1 The scrollbar will appear and disappear as necessary. For example, when all of a #GtkTreeView can not be seen.   GTK_POLICY_NEVER 2 The scrollbar should never appear. In this mode the content determines the size.   GTK_POLICY_EXTERNAL 3 Don\u0026rsquo;t show a scrollbar, but don\u0026rsquo;t force the size to follow the content. This can be used e.g. to make multiple scrolled windows share a scrollbar. Since: 3.16   C type: GtkPolicyType\n PopoverConstraint\nDescribes constraints to positioning of popovers. More values may be added to this enumeration in the future.\n  GTK_POPOVER_CONSTRAINT_NONE 0 Don\u0026rsquo;t constrain the popover position beyond what is imposed by the implementation   GTK_POPOVER_CONSTRAINT_WINDOW 1 Constrain the popover to the boundaries of the window that it is attached to   since 3.20\nC type: GtkPopoverConstraint\n PositionType\nDescribes which edge of a widget a certain feature is positioned at, e.g. the tabs of a #GtkNotebook, the handle of a #GtkHandleBox or the label of a #GtkScale.\n  GTK_POS_LEFT 0 The feature is at the left edge.   GTK_POS_RIGHT 1 The feature is at the right edge.   GTK_POS_TOP 2 The feature is at the top edge.   GTK_POS_BOTTOM 3 The feature is at the bottom edge.   C type: GtkPositionType\n PrintDuplex\nSee also gtk_print_settings_set_duplex().\n  GTK_PRINT_DUPLEX_SIMPLEX 0 No duplex.   GTK_PRINT_DUPLEX_HORIZONTAL 1 Horizontal duplex.   GTK_PRINT_DUPLEX_VERTICAL 2 Vertical duplex.   C type: GtkPrintDuplex\n PrintError\nError codes that identify various errors that can occur while using the GTK+ printing support.\n  GTK_PRINT_ERROR_GENERAL 0 An unspecified error occurred.   GTK_PRINT_ERROR_INTERNAL_ERROR 1 An internal error occurred.   GTK_PRINT_ERROR_NOMEM 2 A memory allocation failed.   GTK_PRINT_ERROR_INVALID_FILE 3 An error occurred while loading a page setup or paper size from a key file.   C type: GtkPrintError\n PrintOperationAction\nThe @action parameter to gtk_print_operation_run() determines what action the print operation should perform.\n  GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG 0 Show the print dialog.   GTK_PRINT_OPERATION_ACTION_PRINT 1 Start to print without showing the print dialog, based on the current print settings.   GTK_PRINT_OPERATION_ACTION_PREVIEW 2 Show the print preview.   GTK_PRINT_OPERATION_ACTION_EXPORT 3 Export to a file. This requires the export-filename property to be set.   C type: GtkPrintOperationAction\n PrintOperationResult\nA value of this type is returned by gtk_print_operation_run().\n  GTK_PRINT_OPERATION_RESULT_ERROR 0 An error has occurred.   GTK_PRINT_OPERATION_RESULT_APPLY 1 The print settings should be stored.   GTK_PRINT_OPERATION_RESULT_CANCEL 2 The print operation has been canceled, the print settings should not be stored.   GTK_PRINT_OPERATION_RESULT_IN_PROGRESS 3 The print operation is not complete yet. This value will only be returned when running asynchronously.   C type: GtkPrintOperationResult\n PrintPages\nSee also gtk_print_job_set_pages()\n  GTK_PRINT_PAGES_ALL 0 All pages.   GTK_PRINT_PAGES_CURRENT 1 Current page.   GTK_PRINT_PAGES_RANGES 2 Range of pages.   GTK_PRINT_PAGES_SELECTION 3 Selected pages.   C type: GtkPrintPages\n PrintQuality\nSee also gtk_print_settings_set_quality().\n  GTK_PRINT_QUALITY_LOW 0 Low quality.   GTK_PRINT_QUALITY_NORMAL 1 Normal quality.   GTK_PRINT_QUALITY_HIGH 2 High quality.   GTK_PRINT_QUALITY_DRAFT 3 Draft quality.   C type: GtkPrintQuality\n PrintStatus\nThe status gives a rough indication of the completion of a running print operation.\n  GTK_PRINT_STATUS_INITIAL 0 The printing has not started yet; this status is set initially, and while the print dialog is shown.   GTK_PRINT_STATUS_PREPARING 1 This status is set while the begin-print signal is emitted and during pagination.   GTK_PRINT_STATUS_GENERATING_DATA 2 This status is set while the pages are being rendered.   GTK_PRINT_STATUS_SENDING_DATA 3 The print job is being sent off to the printer.   GTK_PRINT_STATUS_PENDING 4 The print job has been sent to the printer, but is not printed for some reason, e.g. the printer may be stopped.   GTK_PRINT_STATUS_PENDING_ISSUE 5 Some problem has occurred during printing, e.g. a paper jam.   GTK_PRINT_STATUS_PRINTING 6 The printer is processing the print job.   GTK_PRINT_STATUS_FINISHED 7 The printing has been completed successfully.   GTK_PRINT_STATUS_FINISHED_ABORTED 8 The printing has been aborted.   C type: GtkPrintStatus\n PropagationPhase\nDescribes the stage at which events are fed into a #GtkEventController.\n  GTK_PHASE_NONE 0 Events are not delivered automatically. Those can be manually fed through gtk_event_controller_handle_event(). This should only be used when full control about when, or whether the controller handles the event is needed.   GTK_PHASE_CAPTURE 1 Events are delivered in the capture phase. The capture phase happens before the bubble phase, runs from the toplevel down to the event widget. This option should only be used on containers that might possibly handle events before their children do.   GTK_PHASE_BUBBLE 2 Events are delivered in the bubble phase. The bubble phase happens after the capture phase, and before the default handlers are run. This phase runs from the event widget, up to the toplevel.   GTK_PHASE_TARGET 3 Events are delivered in the default widget event handlers, note that widget implementations must chain up on button, motion, touch and grab broken handlers for controllers in this phase to be run.   since 3.14\nC type: GtkPropagationPhase\n RcTokenType\nThe #GtkRcTokenType enumeration represents the tokens in the RC file. It is exposed so that theme engines can reuse these tokens when parsing the theme-engine specific portions of a RC file.\n  GTK_RC_TOKEN_INVALID 270 Deprecated   GTK_RC_TOKEN_INCLUDE 271 Deprecated   GTK_RC_TOKEN_NORMAL 272 Deprecated   GTK_RC_TOKEN_ACTIVE 273 Deprecated   GTK_RC_TOKEN_PRELIGHT 274 Deprecated   GTK_RC_TOKEN_SELECTED 275 Deprecated   GTK_RC_TOKEN_INSENSITIVE 276 Deprecated   GTK_RC_TOKEN_FG 277 Deprecated   GTK_RC_TOKEN_BG 278 Deprecated   GTK_RC_TOKEN_TEXT 279 Deprecated   GTK_RC_TOKEN_BASE 280 Deprecated   GTK_RC_TOKEN_XTHICKNESS 281 Deprecated   GTK_RC_TOKEN_YTHICKNESS 282 Deprecated   GTK_RC_TOKEN_FONT 283 Deprecated   GTK_RC_TOKEN_FONTSET 284 Deprecated   GTK_RC_TOKEN_FONT_NAME 285 Deprecated   GTK_RC_TOKEN_BG_PIXMAP 286 Deprecated   GTK_RC_TOKEN_PIXMAP_PATH 287 Deprecated   GTK_RC_TOKEN_STYLE 288 Deprecated   GTK_RC_TOKEN_BINDING 289 Deprecated   GTK_RC_TOKEN_BIND 290 Deprecated   GTK_RC_TOKEN_WIDGET 291 Deprecated   GTK_RC_TOKEN_WIDGET_CLASS 292 Deprecated   GTK_RC_TOKEN_CLASS 293 Deprecated   GTK_RC_TOKEN_LOWEST 294 Deprecated   GTK_RC_TOKEN_GTK 295 Deprecated   GTK_RC_TOKEN_APPLICATION 296 Deprecated   GTK_RC_TOKEN_THEME 297 Deprecated   GTK_RC_TOKEN_RC 298 Deprecated   GTK_RC_TOKEN_HIGHEST 299 Deprecated   GTK_RC_TOKEN_ENGINE 300 Deprecated   GTK_RC_TOKEN_MODULE_PATH 301 Deprecated   GTK_RC_TOKEN_IM_MODULE_PATH 302 Deprecated   GTK_RC_TOKEN_IM_MODULE_FILE 303 Deprecated   GTK_RC_TOKEN_STOCK 304 Deprecated   GTK_RC_TOKEN_LTR 305 Deprecated   GTK_RC_TOKEN_RTL 306 Deprecated   GTK_RC_TOKEN_COLOR 307 Deprecated   GTK_RC_TOKEN_UNBIND 308 Deprecated   GTK_RC_TOKEN_LAST 309 Deprecated   C type: GtkRcTokenType\n RecentChooserError\nThese identify the various errors that can occur while calling #GtkRecentChooser functions.\n  GTK_RECENT_CHOOSER_ERROR_NOT_FOUND 0 Indicates that a file does not exist   GTK_RECENT_CHOOSER_ERROR_INVALID_URI 1 Indicates a malformed URI   since 2.10\nC type: GtkRecentChooserError\n RecentManagerError\nError codes for #GtkRecentManager operations\n  GTK_RECENT_MANAGER_ERROR_NOT_FOUND 0 the URI specified does not exists in the recently used resources list.   GTK_RECENT_MANAGER_ERROR_INVALID_URI 1 the URI specified is not valid.   GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING 2 the supplied string is not UTF-8 encoded.   GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED 3 no application has registered the specified item.   GTK_RECENT_MANAGER_ERROR_READ 4 failure while reading the recently used resources file.   GTK_RECENT_MANAGER_ERROR_WRITE 5 failure while writing the recently used resources file.   GTK_RECENT_MANAGER_ERROR_UNKNOWN 6 unspecified error.   since 2.10\nC type: GtkRecentManagerError\n RecentSortType\nUsed to specify the sorting method to be applyed to the recently used resource list.\n  GTK_RECENT_SORT_NONE 0 Do not sort the returned list of recently used resources.   GTK_RECENT_SORT_MRU 1 Sort the returned list with the most recently used items first.   GTK_RECENT_SORT_LRU 2 Sort the returned list with the least recently used items first.   GTK_RECENT_SORT_CUSTOM 3 Sort the returned list using a custom sorting function passed using gtk_recent_chooser_set_sort_func().   since 2.10\nC type: GtkRecentSortType\n ReliefStyle\nIndicated the relief to be drawn around a #GtkButton.\n  GTK_RELIEF_NORMAL 0 Draw a normal relief.   GTK_RELIEF_HALF 1 A half relief. Deprecated in 3.14, does the same as @GTK_RELIEF_NORMAL   GTK_RELIEF_NONE 2 No relief.   C type: GtkReliefStyle\n ResizeMode\n  GTK_RESIZE_PARENT 0 Pass resize request to the parent   GTK_RESIZE_QUEUE 1 Queue resizes on this widget   GTK_RESIZE_IMMEDIATE 2 Resize immediately. Deprecated.   C type: GtkResizeMode\n ResponseType\nPredefined values for use as response ids in gtk_dialog_add_button(). All predefined values are negative; GTK+ leaves values of 0 or greater for application-defined response ids.\n  GTK_RESPONSE_NONE -1 Returned if an action widget has no response id, or if the dialog gets programmatically hidden or destroyed   GTK_RESPONSE_REJECT -2 Generic response id, not used by GTK+ dialogs   GTK_RESPONSE_ACCEPT -3 Generic response id, not used by GTK+ dialogs   GTK_RESPONSE_DELETE_EVENT -4 Returned if the dialog is deleted   GTK_RESPONSE_OK -5 Returned by OK buttons in GTK+ dialogs   GTK_RESPONSE_CANCEL -6 Returned by Cancel buttons in GTK+ dialogs   GTK_RESPONSE_CLOSE -7 Returned by Close buttons in GTK+ dialogs   GTK_RESPONSE_YES -8 Returned by Yes buttons in GTK+ dialogs   GTK_RESPONSE_NO -9 Returned by No buttons in GTK+ dialogs   GTK_RESPONSE_APPLY -10 Returned by Apply buttons in GTK+ dialogs   GTK_RESPONSE_HELP -11 Returned by Help buttons in GTK+ dialogs   C type: GtkResponseType\n RevealerTransitionType\nThese enumeration values describe the possible transitions when the child of a #GtkRevealer widget is shown or hidden.\n  GTK_REVEALER_TRANSITION_TYPE_NONE 0 No transition   GTK_REVEALER_TRANSITION_TYPE_CROSSFADE 1 Fade in   GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT 2 Slide in from the left   GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT 3 Slide in from the right   GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP 4 Slide in from the bottom   GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN 5 Slide in from the top   C type: GtkRevealerTransitionType\n ScrollStep\n  GTK_SCROLL_STEPS 0 Scroll in steps.   GTK_SCROLL_PAGES 1 Scroll by pages.   GTK_SCROLL_ENDS 2 Scroll to ends.   GTK_SCROLL_HORIZONTAL_STEPS 3 Scroll in horizontal steps.   GTK_SCROLL_HORIZONTAL_PAGES 4 Scroll by horizontal pages.   GTK_SCROLL_HORIZONTAL_ENDS 5 Scroll to the horizontal ends.   C type: GtkScrollStep\n ScrollType\nScrolling types.\n  GTK_SCROLL_NONE 0 No scrolling.   GTK_SCROLL_JUMP 1 Jump to new location.   GTK_SCROLL_STEP_BACKWARD 2 Step backward.   GTK_SCROLL_STEP_FORWARD 3 Step forward.   GTK_SCROLL_PAGE_BACKWARD 4 Page backward.   GTK_SCROLL_PAGE_FORWARD 5 Page forward.   GTK_SCROLL_STEP_UP 6 Step up.   GTK_SCROLL_STEP_DOWN 7 Step down.   GTK_SCROLL_PAGE_UP 8 Page up.   GTK_SCROLL_PAGE_DOWN 9 Page down.   GTK_SCROLL_STEP_LEFT 10 Step to the left.   GTK_SCROLL_STEP_RIGHT 11 Step to the right.   GTK_SCROLL_PAGE_LEFT 12 Page to the left.   GTK_SCROLL_PAGE_RIGHT 13 Page to the right.   GTK_SCROLL_START 14 Scroll to start.   GTK_SCROLL_END 15 Scroll to end.   C type: GtkScrollType\n ScrollablePolicy\nDefines the policy to be used in a scrollable widget when updating the scrolled window adjustments in a given orientation.\n  GTK_SCROLL_MINIMUM 0 Scrollable adjustments are based on the minimum size   GTK_SCROLL_NATURAL 1 Scrollable adjustments are based on the natural size   C type: GtkScrollablePolicy\n SelectionMode\nUsed to control what selections users are allowed to make.\n  GTK_SELECTION_NONE 0 No selection is possible.   GTK_SELECTION_SINGLE 1 Zero or one element may be selected.   GTK_SELECTION_BROWSE 2 Exactly one element is selected. In some circumstances, such as initially or during a search operation, it’s possible for no element to be selected with %GTK_SELECTION_BROWSE. What is really enforced is that the user can’t deselect a currently selected element except by selecting another element.   GTK_SELECTION_MULTIPLE 3 Any number of elements may be selected. The Ctrl key may be used to enlarge the selection, and Shift key to select between the focus and the child pointed to. Some widgets may also allow Click-drag to select a range of elements.   C type: GtkSelectionMode\n SensitivityType\nDetermines how GTK+ handles the sensitivity of stepper arrows at the end of range widgets.\n  GTK_SENSITIVITY_AUTO 0 The arrow is made insensitive if the thumb is at the end   GTK_SENSITIVITY_ON 1 The arrow is always sensitive   GTK_SENSITIVITY_OFF 2 The arrow is always insensitive   C type: GtkSensitivityType\n ShadowType\nUsed to change the appearance of an outline typically provided by a #GtkFrame.\nNote that many themes do not differentiate the appearance of the various shadow types: Either their is no visible shadow (@GTK_SHADOW_NONE), or there is (any other value).\n  GTK_SHADOW_NONE 0 No outline.   GTK_SHADOW_IN 1 The outline is bevelled inwards.   GTK_SHADOW_OUT 2 The outline is bevelled outwards like a button.   GTK_SHADOW_ETCHED_IN 3 The outline has a sunken 3d appearance.   GTK_SHADOW_ETCHED_OUT 4 The outline has a raised 3d appearance.   C type: GtkShadowType\n ShortcutType\nGtkShortcutType specifies the kind of shortcut that is being described. More values may be added to this enumeration over time.\n  GTK_SHORTCUT_ACCELERATOR 0 The shortcut is a keyboard accelerator. The #GtkShortcutsShortcut:accelerator property will be used.   GTK_SHORTCUT_GESTURE_PINCH 1 The shortcut is a pinch gesture. GTK+ provides an icon and subtitle.   GTK_SHORTCUT_GESTURE_STRETCH 2 The shortcut is a stretch gesture. GTK+ provides an icon and subtitle.   GTK_SHORTCUT_GESTURE_ROTATE_CLOCKWISE 3 The shortcut is a clockwise rotation gesture. GTK+ provides an icon and subtitle.   GTK_SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE 4 The shortcut is a counterclockwise rotation gesture. GTK+ provides an icon and subtitle.   GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT 5 The shortcut is a two-finger swipe gesture. GTK+ provides an icon and subtitle.   GTK_SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT 6 The shortcut is a two-finger swipe gesture. GTK+ provides an icon and subtitle.   GTK_SHORTCUT_GESTURE 7 The shortcut is a gesture. The #GtkShortcutsShortcut:icon property will be used.   since 3.20\nC type: GtkShortcutType\n SizeGroupMode\nThe mode of the size group determines the directions in which the size group affects the requested sizes of its component widgets.\n  GTK_SIZE_GROUP_NONE 0 group has no effect   GTK_SIZE_GROUP_HORIZONTAL 1 group affects horizontal requisition   GTK_SIZE_GROUP_VERTICAL 2 group affects vertical requisition   GTK_SIZE_GROUP_BOTH 3 group affects both horizontal and vertical requisition   C type: GtkSizeGroupMode\n SizeRequestMode\nSpecifies a preference for height-for-width or width-for-height geometry management.\n  GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH 0 Prefer height-for-width geometry management   GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT 1 Prefer width-for-height geometry management   GTK_SIZE_REQUEST_CONSTANT_SIZE 2 Don’t trade height-for-width or width-for-height   C type: GtkSizeRequestMode\n SortType\nDetermines the direction of a sort.\n  GTK_SORT_ASCENDING 0 Sorting is in ascending order.   GTK_SORT_DESCENDING 1 Sorting is in descending order.   C type: GtkSortType\n SpinButtonUpdatePolicy\nThe spin button update policy determines whether the spin button displays values even if they are outside the bounds of its adjustment. See gtk_spin_button_set_update_policy().\n  GTK_UPDATE_ALWAYS 0 When refreshing your #GtkSpinButton, the value is always displayed   GTK_UPDATE_IF_VALID 1 When refreshing your #GtkSpinButton, the value is only displayed if it is valid within the bounds of the spin button\u0026rsquo;s adjustment   C type: GtkSpinButtonUpdatePolicy\n SpinType\nThe values of the GtkSpinType enumeration are used to specify the change to make in gtk_spin_button_spin().\n  GTK_SPIN_STEP_FORWARD 0 Increment by the adjustments step increment.   GTK_SPIN_STEP_BACKWARD 1 Decrement by the adjustments step increment.   GTK_SPIN_PAGE_FORWARD 2 Increment by the adjustments page increment.   GTK_SPIN_PAGE_BACKWARD 3 Decrement by the adjustments page increment.   GTK_SPIN_HOME 4 Go to the adjustments lower bound.   GTK_SPIN_END 5 Go to the adjustments upper bound.   GTK_SPIN_USER_DEFINED 6 Change by a specified amount.   C type: GtkSpinType\n StackTransitionType\nThese enumeration values describe the possible transitions between pages in a #GtkStack widget.\nNew values may be added to this enumeration over time.\n  GTK_STACK_TRANSITION_TYPE_NONE 0 No transition   GTK_STACK_TRANSITION_TYPE_CROSSFADE 1 A cross-fade   GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT 2 Slide from left to right   GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT 3 Slide from right to left   GTK_STACK_TRANSITION_TYPE_SLIDE_UP 4 Slide from bottom up   GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN 5 Slide from top down   GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT 6 Slide from left or right according to the children order   GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN 7 Slide from top down or bottom up according to the order   GTK_STACK_TRANSITION_TYPE_OVER_UP 8 Cover the old page by sliding up. Since 3.12   GTK_STACK_TRANSITION_TYPE_OVER_DOWN 9 Cover the old page by sliding down. Since: 3.12   GTK_STACK_TRANSITION_TYPE_OVER_LEFT 10 Cover the old page by sliding to the left. Since: 3.12   GTK_STACK_TRANSITION_TYPE_OVER_RIGHT 11 Cover the old page by sliding to the right. Since: 3.12   GTK_STACK_TRANSITION_TYPE_UNDER_UP 12 Uncover the new page by sliding up. Since 3.12   GTK_STACK_TRANSITION_TYPE_UNDER_DOWN 13 Uncover the new page by sliding down. Since: 3.12   GTK_STACK_TRANSITION_TYPE_UNDER_LEFT 14 Uncover the new page by sliding to the left. Since: 3.12   GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT 15 Uncover the new page by sliding to the right. Since: 3.12   GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN 16 Cover the old page sliding up or uncover the new page sliding down, according to order. Since: 3.12   GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP 17 Cover the old page sliding down or uncover the new page sliding up, according to order. Since: 3.14   GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT 18 Cover the old page sliding left or uncover the new page sliding right, according to order. Since: 3.14   GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT 19 Cover the old page sliding right or uncover the new page sliding left, according to order. Since: 3.14   C type: GtkStackTransitionType\n StateType\nThis type indicates the current state of a widget; the state determines how the widget is drawn. The #GtkStateType enumeration is also used to identify different colors in a #GtkStyle for drawing, so states can be used for subparts of a widget as well as entire widgets.\n  GTK_STATE_NORMAL 0 State during normal operation.   GTK_STATE_ACTIVE 1 State of a currently active widget, such as a depressed button.   GTK_STATE_PRELIGHT 2 State indicating that the mouse pointer is over the widget and the widget will respond to mouse clicks.   GTK_STATE_SELECTED 3 State of a selected item, such the selected row in a list.   GTK_STATE_INSENSITIVE 4 State indicating that the widget is unresponsive to user actions.   GTK_STATE_INCONSISTENT 5 The widget is inconsistent, such as checkbuttons or radiobuttons that aren’t either set to %TRUE nor %FALSE, or buttons requiring the user attention.   GTK_STATE_FOCUSED 6 The widget has the keyboard focus.   C type: GtkStateType\n TextBufferTargetInfo\nThese values are used as “info” for the targets contained in the lists returned by gtk_text_buffer_get_copy_target_list() and gtk_text_buffer_get_paste_target_list().\nThe values counts down from -1 to avoid clashes with application added drag destinations which usually start at 0.\n  GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS -1 Buffer contents   GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT -2 Rich text   GTK_TEXT_BUFFER_TARGET_INFO_TEXT -3 Text   C type: GtkTextBufferTargetInfo\n TextDirection\nReading directions for text.\n  GTK_TEXT_DIR_NONE 0 No direction.   GTK_TEXT_DIR_LTR 1 Left to right text direction.   GTK_TEXT_DIR_RTL 2 Right to left text direction.   C type: GtkTextDirection\n TextExtendSelection\nGranularity types that extend the text selection. Use the #GtkTextView::extend-selection signal to customize the selection.\n  GTK_TEXT_EXTEND_SELECTION_WORD 0 Selects the current word. It is triggered by a double-click for example.   GTK_TEXT_EXTEND_SELECTION_LINE 1 Selects the current line. It is triggered by a triple-click for example.   since 3.16\nC type: GtkTextExtendSelection\n TextViewLayer\nUsed to reference the layers of #GtkTextView for the purpose of customized drawing with the ::draw_layer vfunc.\n  GTK_TEXT_VIEW_LAYER_BELOW 0 Old deprecated layer, use %GTK_TEXT_VIEW_LAYER_BELOW_TEXT instead   GTK_TEXT_VIEW_LAYER_ABOVE 1 Old deprecated layer, use %GTK_TEXT_VIEW_LAYER_ABOVE_TEXT instead   GTK_TEXT_VIEW_LAYER_BELOW_TEXT 2 The layer rendered below the text (but above the background). Since: 3.20   GTK_TEXT_VIEW_LAYER_ABOVE_TEXT 3 The layer rendered above the text. Since: 3.20   C type: GtkTextViewLayer\n TextWindowType\nUsed to reference the parts of #GtkTextView.\n  GTK_TEXT_WINDOW_PRIVATE 0 Invalid value, used as a marker   GTK_TEXT_WINDOW_WIDGET 1 Window that floats over scrolling areas.   GTK_TEXT_WINDOW_TEXT 2 Scrollable text window.   GTK_TEXT_WINDOW_LEFT 3 Left side border window.   GTK_TEXT_WINDOW_RIGHT 4 Right side border window.   GTK_TEXT_WINDOW_TOP 5 Top border window.   GTK_TEXT_WINDOW_BOTTOM 6 Bottom border window.   C type: GtkTextWindowType\n ToolbarSpaceStyle\nWhether spacers are vertical lines or just blank.\n  GTK_TOOLBAR_SPACE_EMPTY 0 Use blank spacers.   GTK_TOOLBAR_SPACE_LINE 1 Use vertical lines for spacers.   C type: GtkToolbarSpaceStyle\n ToolbarStyle\nUsed to customize the appearance of a #GtkToolbar. Note that setting the toolbar style overrides the user’s preferences for the default toolbar style. Note that if the button has only a label set and GTK_TOOLBAR_ICONS is used, the label will be visible, and vice versa.\n  GTK_TOOLBAR_ICONS 0 Buttons display only icons in the toolbar.   GTK_TOOLBAR_TEXT 1 Buttons display only text labels in the toolbar.   GTK_TOOLBAR_BOTH 2 Buttons display text and icons in the toolbar.   GTK_TOOLBAR_BOTH_HORIZ 3 Buttons display icons and text alongside each other, rather than vertically stacked   C type: GtkToolbarStyle\n TreeViewColumnSizing\nThe sizing method the column uses to determine its width. Please note that @GTK_TREE_VIEW_COLUMN_AUTOSIZE are inefficient for large views, and can make columns appear choppy.\n  GTK_TREE_VIEW_COLUMN_GROW_ONLY 0 Columns only get bigger in reaction to changes in the model   GTK_TREE_VIEW_COLUMN_AUTOSIZE 1 Columns resize to be the optimal size everytime the model changes.   GTK_TREE_VIEW_COLUMN_FIXED 2 Columns are a fixed numbers of pixels wide.   C type: GtkTreeViewColumnSizing\n TreeViewDropPosition\nAn enum for determining where a dropped row goes.\n  GTK_TREE_VIEW_DROP_BEFORE 0 dropped row is inserted before   GTK_TREE_VIEW_DROP_AFTER 1 dropped row is inserted after   GTK_TREE_VIEW_DROP_INTO_OR_BEFORE 2 dropped row becomes a child or is inserted before   GTK_TREE_VIEW_DROP_INTO_OR_AFTER 3 dropped row becomes a child or is inserted after   C type: GtkTreeViewDropPosition\n TreeViewGridLines\nUsed to indicate which grid lines to draw in a tree view.\n  GTK_TREE_VIEW_GRID_LINES_NONE 0 No grid lines.   GTK_TREE_VIEW_GRID_LINES_HORIZONTAL 1 Horizontal grid lines.   GTK_TREE_VIEW_GRID_LINES_VERTICAL 2 Vertical grid lines.   GTK_TREE_VIEW_GRID_LINES_BOTH 3 Horizontal and vertical grid lines.   C type: GtkTreeViewGridLines\n Unit\nSee also gtk_print_settings_set_paper_width().\n  GTK_UNIT_NONE 0 No units.   GTK_UNIT_POINTS 1 Dimensions in points.   GTK_UNIT_INCH 2 Dimensions in inches.   GTK_UNIT_MM 3 Dimensions in millimeters   C type: GtkUnit\n WidgetHelpType\nKinds of widget-specific help. Used by the ::show-help signal.\n  GTK_WIDGET_HELP_TOOLTIP 0 Tooltip.   GTK_WIDGET_HELP_WHATS_THIS 1 What’s this.   C type: GtkWidgetHelpType\n WindowPosition\nWindow placement can be influenced using this enumeration. Note that using #GTK_WIN_POS_CENTER_ALWAYS is almost always a bad idea. It won’t necessarily work well with all window managers or on all windowing systems.\n  GTK_WIN_POS_NONE 0 No influence is made on placement.   GTK_WIN_POS_CENTER 1 Windows should be placed in the center of the screen.   GTK_WIN_POS_MOUSE 2 Windows should be placed at the current mouse position.   GTK_WIN_POS_CENTER_ALWAYS 3 Keep window centered as it changes size, etc.   GTK_WIN_POS_CENTER_ON_PARENT 4 Center the window on its transient parent (see gtk_window_set_transient_for()).   C type: GtkWindowPosition\n WindowType\nA #GtkWindow can be one of these types. Most things you’d consider a “window” should have type #GTK_WINDOW_TOPLEVEL; windows with this type are managed by the window manager and have a frame by default (call gtk_window_set_decorated() to toggle the frame). Windows with type #GTK_WINDOW_POPUP are ignored by the window manager; window manager keybindings won’t work on them, the window manager won’t decorate the window with a frame, many GTK+ features that rely on the window manager will not work (e.g. resize grips and maximization/minimization). #GTK_WINDOW_POPUP is used to implement widgets such as #GtkMenu or tooltips that you normally don’t think of as windows per se. Nearly all windows should be #GTK_WINDOW_TOPLEVEL. In particular, do not use #GTK_WINDOW_POPUP just to turn off the window borders; use gtk_window_set_decorated() for that.\n  GTK_WINDOW_TOPLEVEL 0 A regular window, such as a dialog.   GTK_WINDOW_POPUP 1 A special window such as a tooltip.   C type: GtkWindowType\n WrapMode\nDescribes a type of line wrapping.\n  GTK_WRAP_NONE 0 do not wrap lines; just make the text area wider   GTK_WRAP_CHAR 1 wrap text, breaking lines anywhere the cursor can appear (between characters, usually - if you want to be technical, between graphemes, see pango_get_log_attrs())   GTK_WRAP_WORD 2 wrap text, breaking lines in between words   GTK_WRAP_WORD_CHAR 3 wrap text, breaking lines in between words, or if that is not enough, also between graphemes   C type: GtkWrapMode\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/pango/enums/",
	"title": "enums",
	"tags": [],
	"description": "",
	"content": "Alignment\nA #PangoAlignment describes how to align the lines of a #PangoLayout within the available space. If the #PangoLayout is set to justify using pango_layout_set_justify(), this only has effect for partial lines.\n  PANGO_ALIGN_LEFT 0 Put all available space on the right   PANGO_ALIGN_CENTER 1 Center the line within the available space   PANGO_ALIGN_RIGHT 2 Put all available space on the left   C type: PangoAlignment\n AttrType\nThe #PangoAttrType distinguishes between different types of attributes. Along with the predefined values, it is possible to allocate additional values for custom attributes using pango_attr_type_register(). The predefined values are given below. The type of structure used to store the attribute is listed in parentheses after the description.\n  PANGO_ATTR_INVALID 0 does not happen   PANGO_ATTR_LANGUAGE 1 language (#PangoAttrLanguage)   PANGO_ATTR_FAMILY 2 font family name list (#PangoAttrString)   PANGO_ATTR_STYLE 3 font slant style (#PangoAttrInt)   PANGO_ATTR_WEIGHT 4 font weight (#PangoAttrInt)   PANGO_ATTR_VARIANT 5 font variant (normal or small caps) (#PangoAttrInt)   PANGO_ATTR_STRETCH 6 font stretch (#PangoAttrInt)   PANGO_ATTR_SIZE 7 font size in points scaled by %PANGO_SCALE (#PangoAttrInt)   PANGO_ATTR_FONT_DESC 8 font description (#PangoAttrFontDesc)   PANGO_ATTR_FOREGROUND 9 foreground color (#PangoAttrColor)   PANGO_ATTR_BACKGROUND 10 background color (#PangoAttrColor)   PANGO_ATTR_UNDERLINE 11 whether the text has an underline (#PangoAttrInt)   PANGO_ATTR_STRIKETHROUGH 12 whether the text is struck-through (#PangoAttrInt)   PANGO_ATTR_RISE 13 baseline displacement (#PangoAttrInt)   PANGO_ATTR_SHAPE 14 shape (#PangoAttrShape)   PANGO_ATTR_SCALE 15 font size scale factor (#PangoAttrFloat)   PANGO_ATTR_FALLBACK 16 whether fallback is enabled (#PangoAttrInt)   PANGO_ATTR_LETTER_SPACING 17 letter spacing (#PangoAttrInt)   PANGO_ATTR_UNDERLINE_COLOR 18 underline color (#PangoAttrColor)   PANGO_ATTR_STRIKETHROUGH_COLOR 19 strikethrough color (#PangoAttrColor)   PANGO_ATTR_ABSOLUTE_SIZE 20 font size in pixels scaled by %PANGO_SCALE (#PangoAttrInt)   PANGO_ATTR_GRAVITY 21 base text gravity (#PangoAttrInt)   PANGO_ATTR_GRAVITY_HINT 22 gravity hint (#PangoAttrInt)   PANGO_ATTR_FONT_FEATURES 23 OpenType font features (#PangoAttrString). Since 1.38   PANGO_ATTR_FOREGROUND_ALPHA 24 foreground alpha (#PangoAttrInt). Since 1.38   PANGO_ATTR_BACKGROUND_ALPHA 25 background alpha (#PangoAttrInt). Since 1.38   C type: PangoAttrType\n BidiType\nThe #PangoBidiType type represents the bidirectional character type of a Unicode character as specified by the Unicode bidirectional algorithm.\n  PANGO_BIDI_TYPE_L 0 Left-to-Right   PANGO_BIDI_TYPE_LRE 1 Left-to-Right Embedding   PANGO_BIDI_TYPE_LRO 2 Left-to-Right Override   PANGO_BIDI_TYPE_R 3 Right-to-Left   PANGO_BIDI_TYPE_AL 4 Right-to-Left Arabic   PANGO_BIDI_TYPE_RLE 5 Right-to-Left Embedding   PANGO_BIDI_TYPE_RLO 6 Right-to-Left Override   PANGO_BIDI_TYPE_PDF 7 Pop Directional Format   PANGO_BIDI_TYPE_EN 8 European Number   PANGO_BIDI_TYPE_ES 9 European Number Separator   PANGO_BIDI_TYPE_ET 10 European Number Terminator   PANGO_BIDI_TYPE_AN 11 Arabic Number   PANGO_BIDI_TYPE_CS 12 Common Number Separator   PANGO_BIDI_TYPE_NSM 13 Nonspacing Mark   PANGO_BIDI_TYPE_BN 14 Boundary Neutral   PANGO_BIDI_TYPE_B 15 Paragraph Separator   PANGO_BIDI_TYPE_S 16 Segment Separator   PANGO_BIDI_TYPE_WS 17 Whitespace   PANGO_BIDI_TYPE_ON 18 Other Neutrals   since 1.22\nC type: PangoBidiType\n CoverageLevel\nUsed to indicate how well a font can represent a particular Unicode character point for a particular script.\n  PANGO_COVERAGE_NONE 0 The character is not representable with the font.   PANGO_COVERAGE_FALLBACK 1 The character is represented in a way that may be comprehensible but is not the correct graphical form. For instance, a Hangul character represented as a a sequence of Jamos, or a Latin transliteration of a Cyrillic word.   PANGO_COVERAGE_APPROXIMATE 2 The character is represented as basically the correct graphical form, but with a stylistic variant inappropriate for the current script.   PANGO_COVERAGE_EXACT 3 The character is represented as the correct graphical form.   C type: PangoCoverageLevel\n Direction\nThe #PangoDirection type represents a direction in the Unicode bidirectional algorithm; not every value in this enumeration makes sense for every usage of #PangoDirection; for example, the return value of pango_unichar_direction() and pango_find_base_dir() cannot be %PANGO_DIRECTION_WEAK_LTR or %PANGO_DIRECTION_WEAK_RTL, since every character is either neutral or has a strong direction; on the other hand %PANGO_DIRECTION_NEUTRAL doesn\u0026rsquo;t make sense to pass to pango_itemize_with_base_dir().\nThe %PANGO_DIRECTION_TTB_LTR, %PANGO_DIRECTION_TTB_RTL values come from an earlier interpretation of this enumeration as the writing direction of a block of text and are no longer used; See #PangoGravity for how vertical text is handled in Pango.\n  PANGO_DIRECTION_LTR 0 A strong left-to-right direction   PANGO_DIRECTION_RTL 1 A strong right-to-left direction   PANGO_DIRECTION_TTB_LTR 2 Deprecated value; treated the same as %PANGO_DIRECTION_RTL.   PANGO_DIRECTION_TTB_RTL 3 Deprecated value; treated the same as %PANGO_DIRECTION_LTR   PANGO_DIRECTION_WEAK_LTR 4 A weak left-to-right direction   PANGO_DIRECTION_WEAK_RTL 5 A weak right-to-left direction   PANGO_DIRECTION_NEUTRAL 6 No direction specified   C type: PangoDirection\n EllipsizeMode\nThe #PangoEllipsizeMode type describes what sort of (if any) ellipsization should be applied to a line of text. In the ellipsization process characters are removed from the text in order to make it fit to a given width and replaced with an ellipsis.\n  PANGO_ELLIPSIZE_NONE 0 No ellipsization   PANGO_ELLIPSIZE_START 1 Omit characters at the start of the text   PANGO_ELLIPSIZE_MIDDLE 2 Omit characters in the middle of the text   PANGO_ELLIPSIZE_END 3 Omit characters at the end of the text   C type: PangoEllipsizeMode\n Gravity\nThe #PangoGravity type represents the orientation of glyphs in a segment of text. This is useful when rendering vertical text layouts. In those situations, the layout is rotated using a non-identity PangoMatrix, and then glyph orientation is controlled using #PangoGravity. Not every value in this enumeration makes sense for every usage of #PangoGravity; for example, %PANGO_GRAVITY_AUTO only can be passed to pango_context_set_base_gravity() and can only be returned by pango_context_get_base_gravity().\nSee also: #PangoGravityHint\n  PANGO_GRAVITY_SOUTH 0 Glyphs stand upright (default)   PANGO_GRAVITY_EAST 1 Glyphs are rotated 90 degrees clockwise   PANGO_GRAVITY_NORTH 2 Glyphs are upside-down   PANGO_GRAVITY_WEST 3 Glyphs are rotated 90 degrees counter-clockwise   PANGO_GRAVITY_AUTO 4 Gravity is resolved from the context matrix   since 1.16\nC type: PangoGravity\n GravityHint\nThe #PangoGravityHint defines how horizontal scripts should behave in a vertical context. That is, English excerpt in a vertical paragraph for example.\nSee #PangoGravity.\n  PANGO_GRAVITY_HINT_NATURAL 0 scripts will take their natural gravity based on the base gravity and the script. This is the default.   PANGO_GRAVITY_HINT_STRONG 1 always use the base gravity set, regardless of the script.   PANGO_GRAVITY_HINT_LINE 2 for scripts not in their natural direction (eg. Latin in East gravity), choose per-script gravity such that every script respects the line progression. This means, Latin and Arabic will take opposite gravities and both flow top-to-bottom for example.   since 1.16\nC type: PangoGravityHint\n RenderPart\n#PangoRenderPart defines different items to render for such purposes as setting colors.\n  PANGO_RENDER_PART_FOREGROUND 0 the text itself   PANGO_RENDER_PART_BACKGROUND 1 the area behind the text   PANGO_RENDER_PART_UNDERLINE 2 underlines   PANGO_RENDER_PART_STRIKETHROUGH 3 strikethrough lines   since 1.8\nC type: PangoRenderPart\n Script\nThe #PangoScript enumeration identifies different writing systems. The values correspond to the names as defined in the Unicode standard. Note that new types may be added in the future. Applications should be ready to handle unknown values. This enumeration is interchangeable with #GUnicodeScript. See Unicode Standard Annex #24: Script names.\n  PANGO_SCRIPT_INVALID_CODE -1 a value never returned from pango_script_for_unichar()   PANGO_SCRIPT_COMMON 0 a character used by multiple different scripts   PANGO_SCRIPT_INHERITED 1 a mark glyph that takes its script from the base glyph to which it is attached   PANGO_SCRIPT_ARABIC 2 Arabic   PANGO_SCRIPT_ARMENIAN 3 Armenian   PANGO_SCRIPT_BENGALI 4 Bengali   PANGO_SCRIPT_BOPOMOFO 5 Bopomofo   PANGO_SCRIPT_CHEROKEE 6 Cherokee   PANGO_SCRIPT_COPTIC 7 Coptic   PANGO_SCRIPT_CYRILLIC 8 Cyrillic   PANGO_SCRIPT_DESERET 9 Deseret   PANGO_SCRIPT_DEVANAGARI 10 Devanagari   PANGO_SCRIPT_ETHIOPIC 11 Ethiopic   PANGO_SCRIPT_GEORGIAN 12 Georgian   PANGO_SCRIPT_GOTHIC 13 Gothic   PANGO_SCRIPT_GREEK 14 Greek   PANGO_SCRIPT_GUJARATI 15 Gujarati   PANGO_SCRIPT_GURMUKHI 16 Gurmukhi   PANGO_SCRIPT_HAN 17 Han   PANGO_SCRIPT_HANGUL 18 Hangul   PANGO_SCRIPT_HEBREW 19 Hebrew   PANGO_SCRIPT_HIRAGANA 20 Hiragana   PANGO_SCRIPT_KANNADA 21 Kannada   PANGO_SCRIPT_KATAKANA 22 Katakana   PANGO_SCRIPT_KHMER 23 Khmer   PANGO_SCRIPT_LAO 24 Lao   PANGO_SCRIPT_LATIN 25 Latin   PANGO_SCRIPT_MALAYALAM 26 Malayalam   PANGO_SCRIPT_MONGOLIAN 27 Mongolian   PANGO_SCRIPT_MYANMAR 28 Myanmar   PANGO_SCRIPT_OGHAM 29 Ogham   PANGO_SCRIPT_OLD_ITALIC 30 Old Italic   PANGO_SCRIPT_ORIYA 31 Oriya   PANGO_SCRIPT_RUNIC 32 Runic   PANGO_SCRIPT_SINHALA 33 Sinhala   PANGO_SCRIPT_SYRIAC 34 Syriac   PANGO_SCRIPT_TAMIL 35 Tamil   PANGO_SCRIPT_TELUGU 36 Telugu   PANGO_SCRIPT_THAANA 37 Thaana   PANGO_SCRIPT_THAI 38 Thai   PANGO_SCRIPT_TIBETAN 39 Tibetan   PANGO_SCRIPT_CANADIAN_ABORIGINAL 40 Canadian Aboriginal   PANGO_SCRIPT_YI 41 Yi   PANGO_SCRIPT_TAGALOG 42 Tagalog   PANGO_SCRIPT_HANUNOO 43 Hanunoo   PANGO_SCRIPT_BUHID 44 Buhid   PANGO_SCRIPT_TAGBANWA 45 Tagbanwa   PANGO_SCRIPT_BRAILLE 46 Braille   PANGO_SCRIPT_CYPRIOT 47 Cypriot   PANGO_SCRIPT_LIMBU 48 Limbu   PANGO_SCRIPT_OSMANYA 49 Osmanya   PANGO_SCRIPT_SHAVIAN 50 Shavian   PANGO_SCRIPT_LINEAR_B 51 Linear B   PANGO_SCRIPT_TAI_LE 52 Tai Le   PANGO_SCRIPT_UGARITIC 53 Ugaritic   PANGO_SCRIPT_NEW_TAI_LUE 54 New Tai Lue. Since 1.10   PANGO_SCRIPT_BUGINESE 55 Buginese. Since 1.10   PANGO_SCRIPT_GLAGOLITIC 56 Glagolitic. Since 1.10   PANGO_SCRIPT_TIFINAGH 57 Tifinagh. Since 1.10   PANGO_SCRIPT_SYLOTI_NAGRI 58 Syloti Nagri. Since 1.10   PANGO_SCRIPT_OLD_PERSIAN 59 Old Persian. Since 1.10   PANGO_SCRIPT_KHAROSHTHI 60 Kharoshthi. Since 1.10   PANGO_SCRIPT_UNKNOWN 61 an unassigned code point. Since 1.14   PANGO_SCRIPT_BALINESE 62 Balinese. Since 1.14   PANGO_SCRIPT_CUNEIFORM 63 Cuneiform. Since 1.14   PANGO_SCRIPT_PHOENICIAN 64 Phoenician. Since 1.14   PANGO_SCRIPT_PHAGS_PA 65 Phags-pa. Since 1.14   PANGO_SCRIPT_NKO 66 N\u0026rsquo;Ko. Since 1.14   PANGO_SCRIPT_KAYAH_LI 67 Kayah Li. Since 1.20.1   PANGO_SCRIPT_LEPCHA 68 Lepcha. Since 1.20.1   PANGO_SCRIPT_REJANG 69 Rejang. Since 1.20.1   PANGO_SCRIPT_SUNDANESE 70 Sundanese. Since 1.20.1   PANGO_SCRIPT_SAURASHTRA 71 Saurashtra. Since 1.20.1   PANGO_SCRIPT_CHAM 72 Cham. Since 1.20.1   PANGO_SCRIPT_OL_CHIKI 73 Ol Chiki. Since 1.20.1   PANGO_SCRIPT_VAI 74 Vai. Since 1.20.1   PANGO_SCRIPT_CARIAN 75 Carian. Since 1.20.1   PANGO_SCRIPT_LYCIAN 76 Lycian. Since 1.20.1   PANGO_SCRIPT_LYDIAN 77 Lydian. Since 1.20.1   PANGO_SCRIPT_BATAK 78 Batak. Since 1.32   PANGO_SCRIPT_BRAHMI 79 Brahmi. Since 1.32   PANGO_SCRIPT_MANDAIC 80 Mandaic. Since 1.32   PANGO_SCRIPT_CHAKMA 81 Chakma. Since: 1.32   PANGO_SCRIPT_MEROITIC_CURSIVE 82 Meroitic Cursive. Since: 1.32   PANGO_SCRIPT_MEROITIC_HIEROGLYPHS 83 Meroitic Hieroglyphs. Since: 1.32   PANGO_SCRIPT_MIAO 84 Miao. Since: 1.32   PANGO_SCRIPT_SHARADA 85 Sharada. Since: 1.32   PANGO_SCRIPT_SORA_SOMPENG 86 Sora Sompeng. Since: 1.32   PANGO_SCRIPT_TAKRI 87 Takri. Since: 1.32   PANGO_SCRIPT_BASSA_VAH 88 Bassa. Since: 1.40   PANGO_SCRIPT_CAUCASIAN_ALBANIAN 89 Caucasian Albanian. Since: 1.40   PANGO_SCRIPT_DUPLOYAN 90 Duployan. Since: 1.40   PANGO_SCRIPT_ELBASAN 91 Elbasan. Since: 1.40   PANGO_SCRIPT_GRANTHA 92 Grantha. Since: 1.40   PANGO_SCRIPT_KHOJKI 93 Kjohki. Since: 1.40   PANGO_SCRIPT_KHUDAWADI 94 Khudawadi, Sindhi. Since: 1.40   PANGO_SCRIPT_LINEAR_A 95 Linear A. Since: 1.40   PANGO_SCRIPT_MAHAJANI 96 Mahajani. Since: 1.40   PANGO_SCRIPT_MANICHAEAN 97 Manichaean. Since: 1.40   PANGO_SCRIPT_MENDE_KIKAKUI 98 Mende Kikakui. Since: 1.40   PANGO_SCRIPT_MODI 99 Modi. Since: 1.40   PANGO_SCRIPT_MRO 100 Mro. Since: 1.40   PANGO_SCRIPT_NABATAEAN 101 Nabataean. Since: 1.40   PANGO_SCRIPT_OLD_NORTH_ARABIAN 102 Old North Arabian. Since: 1.40   PANGO_SCRIPT_OLD_PERMIC 103 Old Permic. Since: 1.40   PANGO_SCRIPT_PAHAWH_HMONG 104 Pahawh Hmong. Since: 1.40   PANGO_SCRIPT_PALMYRENE 105 Palmyrene. Since: 1.40   PANGO_SCRIPT_PAU_CIN_HAU 106 Pau Cin Hau. Since: 1.40   PANGO_SCRIPT_PSALTER_PAHLAVI 107 Psalter Pahlavi. Since: 1.40   PANGO_SCRIPT_SIDDHAM 108 Siddham. Since: 1.40   PANGO_SCRIPT_TIRHUTA 109 Tirhuta. Since: 1.40   PANGO_SCRIPT_WARANG_CITI 110 Warang Citi. Since: 1.40   PANGO_SCRIPT_AHOM 111 Ahom. Since: 1.40   PANGO_SCRIPT_ANATOLIAN_HIEROGLYPHS 112 Anatolian Hieroglyphs. Since: 1.40   PANGO_SCRIPT_HATRAN 113 Hatran. Since: 1.40   PANGO_SCRIPT_MULTANI 114 Multani. Since: 1.40   PANGO_SCRIPT_OLD_HUNGARIAN 115 Old Hungarian. Since: 1.40   PANGO_SCRIPT_SIGNWRITING 116 Signwriting. Since: 1.40   C type: PangoScript\n Stretch\nAn enumeration specifying the width of the font relative to other designs within a family.\n  PANGO_STRETCH_ULTRA_CONDENSED 0 ultra condensed width   PANGO_STRETCH_EXTRA_CONDENSED 1 extra condensed width   PANGO_STRETCH_CONDENSED 2 condensed width   PANGO_STRETCH_SEMI_CONDENSED 3 semi condensed width   PANGO_STRETCH_NORMAL 4 the normal width   PANGO_STRETCH_SEMI_EXPANDED 5 semi expanded width   PANGO_STRETCH_EXPANDED 6 expanded width   PANGO_STRETCH_EXTRA_EXPANDED 7 extra expanded width   PANGO_STRETCH_ULTRA_EXPANDED 8 ultra expanded width   C type: PangoStretch\n Style\nAn enumeration specifying the various slant styles possible for a font.\n  PANGO_STYLE_NORMAL 0 the font is upright.   PANGO_STYLE_OBLIQUE 1 the font is slanted, but in a roman style.   PANGO_STYLE_ITALIC 2 the font is slanted in an italic style.   C type: PangoStyle\n TabAlign\nA #PangoTabAlign specifies where a tab stop appears relative to the text.\n  PANGO_TAB_LEFT 0 the tab stop appears to the left of the text.   C type: PangoTabAlign\n Underline\nThe #PangoUnderline enumeration is used to specify whether text should be underlined, and if so, the type of underlining.\n  PANGO_UNDERLINE_NONE 0 no underline should be drawn   PANGO_UNDERLINE_SINGLE 1 a single underline should be drawn   PANGO_UNDERLINE_DOUBLE 2 a double underline should be drawn   PANGO_UNDERLINE_LOW 3 a single underline should be drawn at a position beneath the ink extents of the text being underlined. This should be used only for underlining single characters, such as for keyboard accelerators. %PANGO_UNDERLINE_SINGLE should be used for extended portions of text.   PANGO_UNDERLINE_ERROR 4 a wavy underline should be drawn below. This underline is typically used to indicate an error such as a possilble mispelling; in some cases a contrasting color may automatically be used. This type of underlining is available since Pango 1.4.   C type: PangoUnderline\n Variant\nAn enumeration specifying capitalization variant of the font.\n  PANGO_VARIANT_NORMAL 0 A normal font.   PANGO_VARIANT_SMALL_CAPS 1 A font with the lower case characters replaced by smaller variants of the capital characters.   C type: PangoVariant\n Weight\nAn enumeration specifying the weight (boldness) of a font. This is a numerical value ranging from 100 to 1000, but there are some predefined values:\n  PANGO_WEIGHT_THIN 100 the thin weight (= 100; Since: 1.24)   PANGO_WEIGHT_ULTRALIGHT 200 the ultralight weight (= 200)   PANGO_WEIGHT_LIGHT 300 the light weight (= 300)   PANGO_WEIGHT_SEMILIGHT 350 the semilight weight (= 350; Since: 1.36.7)   PANGO_WEIGHT_BOOK 380 the book weight (= 380; Since: 1.24)   PANGO_WEIGHT_NORMAL 400 the default weight (= 400)   PANGO_WEIGHT_MEDIUM 500 the normal weight (= 500; Since: 1.24)   PANGO_WEIGHT_SEMIBOLD 600 the semibold weight (= 600)   PANGO_WEIGHT_BOLD 700 the bold weight (= 700)   PANGO_WEIGHT_ULTRABOLD 800 the ultrabold weight (= 800)   PANGO_WEIGHT_HEAVY 900 the heavy weight (= 900)   PANGO_WEIGHT_ULTRAHEAVY 1000 the ultraheavy weight (= 1000; Since: 1.24)   C type: PangoWeight\n WrapMode\nA #PangoWrapMode describes how to wrap the lines of a #PangoLayout to the desired width.\n  PANGO_WRAP_WORD 0 wrap lines at word boundaries.   PANGO_WRAP_CHAR 1 wrap lines at character boundaries.   PANGO_WRAP_WORD_CHAR 2 wrap lines at word boundaries, but fall back to character boundaries if there is not enough space for a full word.   C type: PangoWrapMode\n\n"
},
{
	"uri": "https://pekim.github.io/gobbi/api/gdk/",
	"title": "gdk",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/gdkpixbuf/",
	"title": "gdkpixbuf",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/gio/",
	"title": "gio",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/glib/",
	"title": "glib",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/gobject/",
	"title": "gobject",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/gtk/",
	"title": "gtk",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://pekim.github.io/gobbi/api/pango/",
	"title": "pango",
	"tags": [],
	"description": "",
	"content": ""
}]