#!/bin/bash
set -e
set -u

exampleDir=example
tags="cairo_1.12 gobject_2.26 glib_2.48 gdk_3.4 gdkpixbuf_2.32 gio_2.36 gtk_3.18 pango_1.38 pangocairo_1.22"

usage () {
    echo "Usage:"
    echo "  gobbi -h                       Show this help"
    echo "  gobbi build                    Generate libraries and docs, and run tests"
    echo "  gobbi docs                     Generate documentation"
    echo "  gobbi generate                 Generate libraries"
    echo "  gobbi test                     Run tests - for generated gobbi packages"
    echo "  gobbi testinternal             Run tests - for internal packages"
    echo "  gobbi examples                 List the available examples"
    echo "  gobbi example <example-name>   Run an example"

    exit
}

example () {
    exampleName=$1
    shift
    go run -tags "$tags" $exampleDir/$exampleName/*.go $@
}

build () {
    testinternal && \
    echo "" && \
    generate && \
    echo "" && \
    # docs && \
    # echo "" && \
    test
}

generate () {
    go run internal/cmd/generate/*.go
}

docs () {
    hugo -s docs-src/ -d ../docs
}

test () {
    go test -tags "$tags" github.com/pekim/gobbi/test/...
}

testinternal () {
    go test $(go list github.com/pekim/gobbi/internal/... | grep -v template)
}

examples () {
  for example in $(find $exampleDir -name main.go -printf '%h\n' | sort) ; do
    basename $example
  done
}

processOptions () {
  while getopts ":h" opt; do
    case ${opt} in
      h )
        usage
        ;;
      \? )
        echo "Invalid Option: -$OPTARG" 1>&2
        echo ""
        usage
        ;;
    esac
  done
  shift $((OPTIND -1))

  if [ "$#" -lt 1 ]; then
    usage
  fi
}

processSubcommand () {
  subCommand=$1
  shift

  case "$subCommand" in
    build)
      build
      ;;
    docs)
      docs
      ;;
    generate)
      generate
      ;;
    test)
      test
      ;;
    testinternal)
      testinternal
      ;;
    examples)
      examples
      ;;
    example)
      example $@
      ;;
    *)
      echo "Invalid subcommand: $subCommand" 1>&2
      echo ""
      usage
      ;;
  esac
}

processOptions "$@"
processSubcommand "$@"
