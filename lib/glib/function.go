// Code generated - DO NOT EDIT.

package glib

// Access is a representation of the C type g_access.
// AsciiDigitValue is a representation of the C type g_ascii_digit_value.
// AsciiDtostr is a representation of the C type g_ascii_dtostr.
// AsciiFormatd is a representation of the C type g_ascii_formatd.
// AsciiStrcasecmp is a representation of the C type g_ascii_strcasecmp.
// AsciiStrdown is a representation of the C type g_ascii_strdown.
// AsciiStringToSigned is a representation of the C type g_ascii_string_to_signed.
// AsciiStringToUnsigned is a representation of the C type g_ascii_string_to_unsigned.
// AsciiStrncasecmp is a representation of the C type g_ascii_strncasecmp.
// AsciiStrtod is a representation of the C type g_ascii_strtod.
// AsciiStrtoll is a representation of the C type g_ascii_strtoll.
// AsciiStrtoull is a representation of the C type g_ascii_strtoull.
// AsciiStrup is a representation of the C type g_ascii_strup.
// AsciiTolower is a representation of the C type g_ascii_tolower.
// AsciiToupper is a representation of the C type g_ascii_toupper.
// AsciiXdigitValue is a representation of the C type g_ascii_xdigit_value.
// AssertWarning is a representation of the C type g_assert_warning.
// AssertionMessage is a representation of the C type g_assertion_message.
// AssertionMessageCmpnum is a representation of the C type g_assertion_message_cmpnum.
// AssertionMessageCmpstr is a representation of the C type g_assertion_message_cmpstr.
// AssertionMessageError is a representation of the C type g_assertion_message_error.
// AssertionMessageExpr is a representation of the C type g_assertion_message_expr.
// Atexit is a representation of the C type g_atexit.
// AtomicIntAdd is a representation of the C type g_atomic_int_add.
// AtomicIntAnd is a representation of the C type g_atomic_int_and.
// AtomicIntCompareAndExchange is a representation of the C type g_atomic_int_compare_and_exchange.
// AtomicIntDecAndTest is a representation of the C type g_atomic_int_dec_and_test.
// AtomicIntExchangeAndAdd is a representation of the C type g_atomic_int_exchange_and_add.
// AtomicIntGet is a representation of the C type g_atomic_int_get.
// AtomicIntInc is a representation of the C type g_atomic_int_inc.
// AtomicIntOr is a representation of the C type g_atomic_int_or.
// AtomicIntSet is a representation of the C type g_atomic_int_set.
// AtomicIntXor is a representation of the C type g_atomic_int_xor.
// AtomicPointerAdd is a representation of the C type g_atomic_pointer_add.
// AtomicPointerAnd is a representation of the C type g_atomic_pointer_and.
// AtomicPointerCompareAndExchange is a representation of the C type g_atomic_pointer_compare_and_exchange.
// AtomicPointerGet is a representation of the C type g_atomic_pointer_get.
// AtomicPointerOr is a representation of the C type g_atomic_pointer_or.
// AtomicPointerSet is a representation of the C type g_atomic_pointer_set.
// AtomicPointerXor is a representation of the C type g_atomic_pointer_xor.
// Base64Decode is a representation of the C type g_base64_decode.
// Base64DecodeInplace is a representation of the C type g_base64_decode_inplace.
// Base64DecodeStep is a representation of the C type g_base64_decode_step.
// Base64Encode is a representation of the C type g_base64_encode.
// Base64EncodeClose is a representation of the C type g_base64_encode_close.
// Base64EncodeStep is a representation of the C type g_base64_encode_step.
// Basename is a representation of the C type g_basename.
// BitLock is a representation of the C type g_bit_lock.
// BitNthLsf is a representation of the C type g_bit_nth_lsf.
// BitNthMsf is a representation of the C type g_bit_nth_msf.
// BitStorage is a representation of the C type g_bit_storage.
// BitTrylock is a representation of the C type g_bit_trylock.
// BitUnlock is a representation of the C type g_bit_unlock.
// BookmarkFileErrorQuark is a representation of the C type g_bookmark_file_error_quark.
// BuildFilename is a representation of the C type g_build_filename.
// BuildFilenameValist is a representation of the C type g_build_filename_valist.
// BuildFilenamev is a representation of the C type g_build_filenamev.
// BuildPath is a representation of the C type g_build_path.
// BuildPathv is a representation of the C type g_build_pathv.
// ByteArrayFree is a representation of the C type g_byte_array_free.
// ByteArrayFreeToBytes is a representation of the C type g_byte_array_free_to_bytes.
// ByteArrayNew is a representation of the C type g_byte_array_new.
// ByteArrayNewTake is a representation of the C type g_byte_array_new_take.
// ByteArrayUnref is a representation of the C type g_byte_array_unref.
// Chdir is a representation of the C type g_chdir.
// CheckVersion is a representation of the C type glib_check_version.
// ChecksumTypeGetLength is a representation of the C type g_checksum_type_get_length.
// ChildWatchAdd is a representation of the C type g_child_watch_add.
// ChildWatchAddFull is a representation of the C type g_child_watch_add_full.
// ChildWatchSourceNew is a representation of the C type g_child_watch_source_new.
// ClearError is a representation of the C type g_clear_error.
// ClearHandleId is a representation of the C type g_clear_handle_id.
// ClearPointer is a representation of the C type g_clear_pointer.
// Close is a representation of the C type g_close.
// ComputeChecksumForBytes is a representation of the C type g_compute_checksum_for_bytes.
// ComputeChecksumForData is a representation of the C type g_compute_checksum_for_data.
// ComputeChecksumForString is a representation of the C type g_compute_checksum_for_string.
// ComputeHmacForBytes is a representation of the C type g_compute_hmac_for_bytes.
// ComputeHmacForData is a representation of the C type g_compute_hmac_for_data.
// ComputeHmacForString is a representation of the C type g_compute_hmac_for_string.
// Convert is a representation of the C type g_convert.
// ConvertErrorQuark is a representation of the C type g_convert_error_quark.
// ConvertWithFallback is a representation of the C type g_convert_with_fallback.
// ConvertWithIconv is a representation of the C type g_convert_with_iconv.
// DatalistClear is a representation of the C type g_datalist_clear.
// DatalistForeach is a representation of the C type g_datalist_foreach.
// DatalistGetData is a representation of the C type g_datalist_get_data.
// DatalistGetFlags is a representation of the C type g_datalist_get_flags.
// DatalistIdDupData is a representation of the C type g_datalist_id_dup_data.
// DatalistIdGetData is a representation of the C type g_datalist_id_get_data.
// DatalistIdRemoveNoNotify is a representation of the C type g_datalist_id_remove_no_notify.
// DatalistIdReplaceData is a representation of the C type g_datalist_id_replace_data.
// DatalistIdSetDataFull is a representation of the C type g_datalist_id_set_data_full.
// DatalistInit is a representation of the C type g_datalist_init.
// DatalistSetFlags is a representation of the C type g_datalist_set_flags.
// DatalistUnsetFlags is a representation of the C type g_datalist_unset_flags.
// DatasetDestroy is a representation of the C type g_dataset_destroy.
// DatasetForeach is a representation of the C type g_dataset_foreach.
// DatasetIdGetData is a representation of the C type g_dataset_id_get_data.
// DatasetIdRemoveNoNotify is a representation of the C type g_dataset_id_remove_no_notify.
// DatasetIdSetDataFull is a representation of the C type g_dataset_id_set_data_full.
// DateGetDaysInMonth is a representation of the C type g_date_get_days_in_month.
// DateGetMondayWeeksInYear is a representation of the C type g_date_get_monday_weeks_in_year.
// DateGetSundayWeeksInYear is a representation of the C type g_date_get_sunday_weeks_in_year.
// DateIsLeapYear is a representation of the C type g_date_is_leap_year.
// DateStrftime is a representation of the C type g_date_strftime.
// DateTimeCompare is a representation of the C type g_date_time_compare.
// DateTimeEqual is a representation of the C type g_date_time_equal.
// DateTimeHash is a representation of the C type g_date_time_hash.
// DateValidDay is a representation of the C type g_date_valid_day.
// DateValidDmy is a representation of the C type g_date_valid_dmy.
// DateValidJulian is a representation of the C type g_date_valid_julian.
// DateValidMonth is a representation of the C type g_date_valid_month.
// DateValidWeekday is a representation of the C type g_date_valid_weekday.
// DateValidYear is a representation of the C type g_date_valid_year.
// Dcgettext is a representation of the C type g_dcgettext.
// Dgettext is a representation of the C type g_dgettext.
// DirMakeTmp is a representation of the C type g_dir_make_tmp.
// DirectEqual is a representation of the C type g_direct_equal.
// DirectHash is a representation of the C type g_direct_hash.
// Dngettext is a representation of the C type g_dngettext.
// DoubleEqual is a representation of the C type g_double_equal.
// DoubleHash is a representation of the C type g_double_hash.
// Dpgettext is a representation of the C type g_dpgettext.
// Dpgettext2 is a representation of the C type g_dpgettext2.
// EnvironGetenv is a representation of the C type g_environ_getenv.
// EnvironSetenv is a representation of the C type g_environ_setenv.
// EnvironUnsetenv is a representation of the C type g_environ_unsetenv.
// FileErrorFromErrno is a representation of the C type g_file_error_from_errno.
// FileErrorQuark is a representation of the C type g_file_error_quark.
// FileGetContents is a representation of the C type g_file_get_contents.
// FileOpenTmp is a representation of the C type g_file_open_tmp.
// FileReadLink is a representation of the C type g_file_read_link.
// FileSetContents is a representation of the C type g_file_set_contents.
// FileTest is a representation of the C type g_file_test.
// FilenameDisplayBasename is a representation of the C type g_filename_display_basename.
// FilenameDisplayName is a representation of the C type g_filename_display_name.
// FilenameFromUri is a representation of the C type g_filename_from_uri.
// FilenameFromUtf8 is a representation of the C type g_filename_from_utf8.
// FilenameToUri is a representation of the C type g_filename_to_uri.
// FilenameToUtf8 is a representation of the C type g_filename_to_utf8.
// FindProgramInPath is a representation of the C type g_find_program_in_path.
// FormatSize is a representation of the C type g_format_size.
// FormatSizeForDisplay is a representation of the C type g_format_size_for_display.
// FormatSizeFull is a representation of the C type g_format_size_full.
// Fprintf is a representation of the C type g_fprintf.
// Free is a representation of the C type g_free.
// GetApplicationName is a representation of the C type g_get_application_name.
// GetCharset is a representation of the C type g_get_charset.
// GetCodeset is a representation of the C type g_get_codeset.
// GetCurrentDir is a representation of the C type g_get_current_dir.
// GetCurrentTime is a representation of the C type g_get_current_time.
// GetEnviron is a representation of the C type g_get_environ.
// GetFilenameCharsets is a representation of the C type g_get_filename_charsets.
// GetHomeDir is a representation of the C type g_get_home_dir.
// GetHostName is a representation of the C type g_get_host_name.
// GetLanguageNames is a representation of the C type g_get_language_names.
// GetLocaleVariants is a representation of the C type g_get_locale_variants.
// GetMonotonicTime is a representation of the C type g_get_monotonic_time.
// GetNumProcessors is a representation of the C type g_get_num_processors.
// GetPrgname is a representation of the C type g_get_prgname.
// GetRealName is a representation of the C type g_get_real_name.
// GetRealTime is a representation of the C type g_get_real_time.
// GetSystemConfigDirs is a representation of the C type g_get_system_config_dirs.
// GetSystemDataDirs is a representation of the C type g_get_system_data_dirs.
// GetTmpDir is a representation of the C type g_get_tmp_dir.
// GetUserCacheDir is a representation of the C type g_get_user_cache_dir.
// GetUserConfigDir is a representation of the C type g_get_user_config_dir.
// GetUserDataDir is a representation of the C type g_get_user_data_dir.
// GetUserName is a representation of the C type g_get_user_name.
// GetUserRuntimeDir is a representation of the C type g_get_user_runtime_dir.
// GetUserSpecialDir is a representation of the C type g_get_user_special_dir.
// Getenv is a representation of the C type g_getenv.
// HashTableAdd is a representation of the C type g_hash_table_add.
// HashTableContains is a representation of the C type g_hash_table_contains.
// HashTableDestroy is a representation of the C type g_hash_table_destroy.
// HashTableInsert is a representation of the C type g_hash_table_insert.
// HashTableLookup is a representation of the C type g_hash_table_lookup.
// HashTableLookupExtended is a representation of the C type g_hash_table_lookup_extended.
// HashTableRemove is a representation of the C type g_hash_table_remove.
// HashTableRemoveAll is a representation of the C type g_hash_table_remove_all.
// HashTableReplace is a representation of the C type g_hash_table_replace.
// HashTableSize is a representation of the C type g_hash_table_size.
// HashTableSteal is a representation of the C type g_hash_table_steal.
// HashTableStealAll is a representation of the C type g_hash_table_steal_all.
// HashTableUnref is a representation of the C type g_hash_table_unref.
// HookDestroy is a representation of the C type g_hook_destroy.
// HookDestroyLink is a representation of the C type g_hook_destroy_link.
// HookFree is a representation of the C type g_hook_free.
// HookInsertBefore is a representation of the C type g_hook_insert_before.
// HookPrepend is a representation of the C type g_hook_prepend.
// HookUnref is a representation of the C type g_hook_unref.
// HostnameIsAsciiEncoded is a representation of the C type g_hostname_is_ascii_encoded.
// HostnameIsIpAddress is a representation of the C type g_hostname_is_ip_address.
// HostnameIsNonAscii is a representation of the C type g_hostname_is_non_ascii.
// HostnameToAscii is a representation of the C type g_hostname_to_ascii.
// HostnameToUnicode is a representation of the C type g_hostname_to_unicode.
// Iconv is a representation of the C type g_iconv.
// IconvOpen is a representation of the C type g_iconv_open.
// IdleAdd is a representation of the C type g_idle_add.
// IdleAddFull is a representation of the C type g_idle_add_full.
// IdleRemoveByData is a representation of the C type g_idle_remove_by_data.
// IdleSourceNew is a representation of the C type g_idle_source_new.
// Int64Equal is a representation of the C type g_int64_equal.
// Int64Hash is a representation of the C type g_int64_hash.
// IntEqual is a representation of the C type g_int_equal.
// IntHash is a representation of the C type g_int_hash.
// InternStaticString is a representation of the C type g_intern_static_string.
// InternString is a representation of the C type g_intern_string.
// IoAddWatch is a representation of the C type g_io_add_watch.
// IoAddWatchFull is a representation of the C type g_io_add_watch_full.
// IoChannelErrorFromErrno is a representation of the C type g_io_channel_error_from_errno.
// IoChannelErrorQuark is a representation of the C type g_io_channel_error_quark.
// IoCreateWatch is a representation of the C type g_io_create_watch.
// KeyFileErrorQuark is a representation of the C type g_key_file_error_quark.
// Listenv is a representation of the C type g_listenv.
// LocaleFromUtf8 is a representation of the C type g_locale_from_utf8.
// LocaleToUtf8 is a representation of the C type g_locale_to_utf8.
// Log is a representation of the C type g_log.
// LogDefaultHandler is a representation of the C type g_log_default_handler.
// LogRemoveHandler is a representation of the C type g_log_remove_handler.
// LogSetAlwaysFatal is a representation of the C type g_log_set_always_fatal.
// LogSetDefaultHandler is a representation of the C type g_log_set_default_handler.
// LogSetFatalMask is a representation of the C type g_log_set_fatal_mask.
// LogSetHandler is a representation of the C type g_log_set_handler.
// LogSetHandlerFull is a representation of the C type g_log_set_handler_full.
// LogSetWriterFunc is a representation of the C type g_log_set_writer_func.
// LogStructured is a representation of the C type g_log_structured.
// LogStructuredArray is a representation of the C type g_log_structured_array.
// LogStructuredStandard is a representation of the C type g_log_structured_standard.
// LogVariant is a representation of the C type g_log_variant.
// LogWriterDefault is a representation of the C type g_log_writer_default.
// LogWriterFormatFields is a representation of the C type g_log_writer_format_fields.
// LogWriterIsJournald is a representation of the C type g_log_writer_is_journald.
// LogWriterJournald is a representation of the C type g_log_writer_journald.
// LogWriterStandardStreams is a representation of the C type g_log_writer_standard_streams.
// LogWriterSupportsColor is a representation of the C type g_log_writer_supports_color.
// Logv is a representation of the C type g_logv.
// MainContextDefault is a representation of the C type g_main_context_default.
// MainContextGetThreadDefault is a representation of the C type g_main_context_get_thread_default.
// MainContextRefThreadDefault is a representation of the C type g_main_context_ref_thread_default.
// MainCurrentSource is a representation of the C type g_main_current_source.
// MainDepth is a representation of the C type g_main_depth.
// Malloc is a representation of the C type g_malloc.
// Malloc0 is a representation of the C type g_malloc0.
// Malloc0N is a representation of the C type g_malloc0_n.
// MallocN is a representation of the C type g_malloc_n.
// MarkupCollectAttributes is a representation of the C type g_markup_collect_attributes.
// MarkupErrorQuark is a representation of the C type g_markup_error_quark.
// MarkupEscapeText is a representation of the C type g_markup_escape_text.
// MarkupPrintfEscaped is a representation of the C type g_markup_printf_escaped.
// MarkupVprintfEscaped is a representation of the C type g_markup_vprintf_escaped.
// MemIsSystemMalloc is a representation of the C type g_mem_is_system_malloc.
// MemProfile is a representation of the C type g_mem_profile.
// MemSetVtable is a representation of the C type g_mem_set_vtable.
// Memdup is a representation of the C type g_memdup.
// MkdirWithParents is a representation of the C type g_mkdir_with_parents.
// Mkdtemp is a representation of the C type g_mkdtemp.
// MkdtempFull is a representation of the C type g_mkdtemp_full.
// Mkstemp is a representation of the C type g_mkstemp.
// MkstempFull is a representation of the C type g_mkstemp_full.
// NullifyPointer is a representation of the C type g_nullify_pointer.
// NumberParserErrorQuark is a representation of the C type g_number_parser_error_quark.
// OnErrorQuery is a representation of the C type g_on_error_query.
// OnErrorStackTrace is a representation of the C type g_on_error_stack_trace.
// OnceInitEnter is a representation of the C type g_once_init_enter.
// OnceInitLeave is a representation of the C type g_once_init_leave.
// OptionErrorQuark is a representation of the C type g_option_error_quark.
// ParseDebugString is a representation of the C type g_parse_debug_string.
// PathGetBasename is a representation of the C type g_path_get_basename.
// PathGetDirname is a representation of the C type g_path_get_dirname.
// PathIsAbsolute is a representation of the C type g_path_is_absolute.
// PathSkipRoot is a representation of the C type g_path_skip_root.
// PatternMatch is a representation of the C type g_pattern_match.
// PatternMatchSimple is a representation of the C type g_pattern_match_simple.
// PatternMatchString is a representation of the C type g_pattern_match_string.
// PointerBitLock is a representation of the C type g_pointer_bit_lock.
// PointerBitTrylock is a representation of the C type g_pointer_bit_trylock.
// PointerBitUnlock is a representation of the C type g_pointer_bit_unlock.
// Poll is a representation of the C type g_poll.
// PrefixError is a representation of the C type g_prefix_error.
// Print is a representation of the C type g_print.
// Printerr is a representation of the C type g_printerr.
// Printf is a representation of the C type g_printf.
// PrintfStringUpperBound is a representation of the C type g_printf_string_upper_bound.
// PropagateError is a representation of the C type g_propagate_error.
// PropagatePrefixedError is a representation of the C type g_propagate_prefixed_error.
// PtrArrayFind is a representation of the C type g_ptr_array_find.
// PtrArrayFindWithEqualFunc is a representation of the C type g_ptr_array_find_with_equal_func.
// QsortWithData is a representation of the C type g_qsort_with_data.
// QuarkFromStaticString is a representation of the C type g_quark_from_static_string.
// QuarkFromString is a representation of the C type g_quark_from_string.
// QuarkToString is a representation of the C type g_quark_to_string.
// QuarkTryString is a representation of the C type g_quark_try_string.
// RandomDouble is a representation of the C type g_random_double.
// RandomDoubleRange is a representation of the C type g_random_double_range.
// RandomInt is a representation of the C type g_random_int.
// RandomIntRange is a representation of the C type g_random_int_range.
// RandomSetSeed is a representation of the C type g_random_set_seed.
// Realloc is a representation of the C type g_realloc.
// ReallocN is a representation of the C type g_realloc_n.
// RegexCheckReplacement is a representation of the C type g_regex_check_replacement.
// RegexErrorQuark is a representation of the C type g_regex_error_quark.
// RegexEscapeNul is a representation of the C type g_regex_escape_nul.
// RegexEscapeString is a representation of the C type g_regex_escape_string.
// RegexMatchSimple is a representation of the C type g_regex_match_simple.
// RegexSplitSimple is a representation of the C type g_regex_split_simple.
// ReloadUserSpecialDirsCache is a representation of the C type g_reload_user_special_dirs_cache.
// ReturnIfFailWarning is a representation of the C type g_return_if_fail_warning.
// Rmdir is a representation of the C type g_rmdir.
// SequenceGet is a representation of the C type g_sequence_get.
// SequenceInsertBefore is a representation of the C type g_sequence_insert_before.
// SequenceMove is a representation of the C type g_sequence_move.
// SequenceMoveRange is a representation of the C type g_sequence_move_range.
// SequenceRangeGetMidpoint is a representation of the C type g_sequence_range_get_midpoint.
// SequenceRemove is a representation of the C type g_sequence_remove.
// SequenceRemoveRange is a representation of the C type g_sequence_remove_range.
// SequenceSet is a representation of the C type g_sequence_set.
// SequenceSwap is a representation of the C type g_sequence_swap.
// SetApplicationName is a representation of the C type g_set_application_name.
// SetError is a representation of the C type g_set_error.
// SetErrorLiteral is a representation of the C type g_set_error_literal.
// SetPrgname is a representation of the C type g_set_prgname.
// SetPrintHandler is a representation of the C type g_set_print_handler.
// SetPrinterrHandler is a representation of the C type g_set_printerr_handler.
// Setenv is a representation of the C type g_setenv.
// ShellErrorQuark is a representation of the C type g_shell_error_quark.
// ShellParseArgv is a representation of the C type g_shell_parse_argv.
// ShellQuote is a representation of the C type g_shell_quote.
// ShellUnquote is a representation of the C type g_shell_unquote.
// SliceAlloc is a representation of the C type g_slice_alloc.
// SliceAlloc0 is a representation of the C type g_slice_alloc0.
// SliceCopy is a representation of the C type g_slice_copy.
// SliceFree1 is a representation of the C type g_slice_free1.
// SliceFreeChainWithOffset is a representation of the C type g_slice_free_chain_with_offset.
// SliceGetConfig is a representation of the C type g_slice_get_config.
// SliceGetConfigState is a representation of the C type g_slice_get_config_state.
// SliceSetConfig is a representation of the C type g_slice_set_config.
// Snprintf is a representation of the C type g_snprintf.
// SourceRemove is a representation of the C type g_source_remove.
// SourceRemoveByFuncsUserData is a representation of the C type g_source_remove_by_funcs_user_data.
// SourceRemoveByUserData is a representation of the C type g_source_remove_by_user_data.
// SourceSetNameById is a representation of the C type g_source_set_name_by_id.
// SpacedPrimesClosest is a representation of the C type g_spaced_primes_closest.
// SpawnAsync is a representation of the C type g_spawn_async.
// SpawnAsyncWithPipes is a representation of the C type g_spawn_async_with_pipes.
// SpawnCheckExitStatus is a representation of the C type g_spawn_check_exit_status.
// SpawnClosePid is a representation of the C type g_spawn_close_pid.
// SpawnCommandLineAsync is a representation of the C type g_spawn_command_line_async.
// SpawnCommandLineSync is a representation of the C type g_spawn_command_line_sync.
// SpawnErrorQuark is a representation of the C type g_spawn_error_quark.
// SpawnExitErrorQuark is a representation of the C type g_spawn_exit_error_quark.
// SpawnSync is a representation of the C type g_spawn_sync.
// Sprintf is a representation of the C type g_sprintf.
// Stpcpy is a representation of the C type g_stpcpy.
// StrEqual is a representation of the C type g_str_equal.
// StrHasPrefix is a representation of the C type g_str_has_prefix.
// StrHasSuffix is a representation of the C type g_str_has_suffix.
// StrHash is a representation of the C type g_str_hash.
// StrIsAscii is a representation of the C type g_str_is_ascii.
// StrMatchString is a representation of the C type g_str_match_string.
// StrToAscii is a representation of the C type g_str_to_ascii.
// StrTokenizeAndFold is a representation of the C type g_str_tokenize_and_fold.
// Strcanon is a representation of the C type g_strcanon.
// Strcasecmp is a representation of the C type g_strcasecmp.
// Strchomp is a representation of the C type g_strchomp.
// Strchug is a representation of the C type g_strchug.
// Strcmp0 is a representation of the C type g_strcmp0.
// Strcompress is a representation of the C type g_strcompress.
// Strconcat is a representation of the C type g_strconcat.
// Strdelimit is a representation of the C type g_strdelimit.
// Strdown is a representation of the C type g_strdown.
// Strdup is a representation of the C type g_strdup.
// StrdupPrintf is a representation of the C type g_strdup_printf.
// StrdupVprintf is a representation of the C type g_strdup_vprintf.
// Strdupv is a representation of the C type g_strdupv.
// Strerror is a representation of the C type g_strerror.
// Strescape is a representation of the C type g_strescape.
// Strfreev is a representation of the C type g_strfreev.
// StringNew is a representation of the C type g_string_new.
// StringNewLen is a representation of the C type g_string_new_len.
// StringSizedNew is a representation of the C type g_string_sized_new.
// StripContext is a representation of the C type g_strip_context.
// Strjoin is a representation of the C type g_strjoin.
// Strjoinv is a representation of the C type g_strjoinv.
// Strlcat is a representation of the C type g_strlcat.
// Strlcpy is a representation of the C type g_strlcpy.
// Strncasecmp is a representation of the C type g_strncasecmp.
// Strndup is a representation of the C type g_strndup.
// Strnfill is a representation of the C type g_strnfill.
// Strreverse is a representation of the C type g_strreverse.
// Strrstr is a representation of the C type g_strrstr.
// StrrstrLen is a representation of the C type g_strrstr_len.
// Strsignal is a representation of the C type g_strsignal.
// Strsplit is a representation of the C type g_strsplit.
// StrsplitSet is a representation of the C type g_strsplit_set.
// StrstrLen is a representation of the C type g_strstr_len.
// Strtod is a representation of the C type g_strtod.
// Strup is a representation of the C type g_strup.
// StrvContains is a representation of the C type g_strv_contains.
// StrvGetType is a representation of the C type g_strv_get_type.
// StrvLength is a representation of the C type g_strv_length.
// TestAddDataFunc is a representation of the C type g_test_add_data_func.
// TestAddDataFuncFull is a representation of the C type g_test_add_data_func_full.
// TestAddFunc is a representation of the C type g_test_add_func.
// TestAddVtable is a representation of the C type g_test_add_vtable.
// TestAssertExpectedMessagesInternal is a representation of the C type g_test_assert_expected_messages_internal.
// TestBug is a representation of the C type g_test_bug.
// TestBugBase is a representation of the C type g_test_bug_base.
// TestBuildFilename is a representation of the C type g_test_build_filename.
// TestCreateCase is a representation of the C type g_test_create_case.
// TestCreateSuite is a representation of the C type g_test_create_suite.
// TestExpectMessage is a representation of the C type g_test_expect_message.
// TestFail is a representation of the C type g_test_fail.
// TestFailed is a representation of the C type g_test_failed.
// TestGetDir is a representation of the C type g_test_get_dir.
// TestGetFilename is a representation of the C type g_test_get_filename.
// TestGetRoot is a representation of the C type g_test_get_root.
// TestIncomplete is a representation of the C type g_test_incomplete.
// TestInit is a representation of the C type g_test_init.
// TestLogSetFatalHandler is a representation of the C type g_test_log_set_fatal_handler.
// TestLogTypeName is a representation of the C type g_test_log_type_name.
// TestMaximizedResult is a representation of the C type g_test_maximized_result.
// TestMessage is a representation of the C type g_test_message.
// TestMinimizedResult is a representation of the C type g_test_minimized_result.
// TestQueueDestroy is a representation of the C type g_test_queue_destroy.
// TestQueueFree is a representation of the C type g_test_queue_free.
// TestRandDouble is a representation of the C type g_test_rand_double.
// TestRandDoubleRange is a representation of the C type g_test_rand_double_range.
// TestRandInt is a representation of the C type g_test_rand_int.
// TestRandIntRange is a representation of the C type g_test_rand_int_range.
// TestRun is a representation of the C type g_test_run.
// TestRunSuite is a representation of the C type g_test_run_suite.
// TestSetNonfatalAssertions is a representation of the C type g_test_set_nonfatal_assertions.
// TestSkip is a representation of the C type g_test_skip.
// TestSubprocess is a representation of the C type g_test_subprocess.
// TestTimerElapsed is a representation of the C type g_test_timer_elapsed.
// TestTimerLast is a representation of the C type g_test_timer_last.
// TestTimerStart is a representation of the C type g_test_timer_start.
// TestTrapAssertions is a representation of the C type g_test_trap_assertions.
// TestTrapFork is a representation of the C type g_test_trap_fork.
// TestTrapHasPassed is a representation of the C type g_test_trap_has_passed.
// TestTrapReachedTimeout is a representation of the C type g_test_trap_reached_timeout.
// TestTrapSubprocess is a representation of the C type g_test_trap_subprocess.
// ThreadErrorQuark is a representation of the C type g_thread_error_quark.
// ThreadExit is a representation of the C type g_thread_exit.
// ThreadPoolGetMaxIdleTime is a representation of the C type g_thread_pool_get_max_idle_time.
// ThreadPoolGetMaxUnusedThreads is a representation of the C type g_thread_pool_get_max_unused_threads.
// ThreadPoolGetNumUnusedThreads is a representation of the C type g_thread_pool_get_num_unused_threads.
// ThreadPoolSetMaxIdleTime is a representation of the C type g_thread_pool_set_max_idle_time.
// ThreadPoolSetMaxUnusedThreads is a representation of the C type g_thread_pool_set_max_unused_threads.
// ThreadPoolStopUnusedThreads is a representation of the C type g_thread_pool_stop_unused_threads.
// ThreadSelf is a representation of the C type g_thread_self.
// ThreadYield is a representation of the C type g_thread_yield.
// TimeValFromIso8601 is a representation of the C type g_time_val_from_iso8601.
// TimeoutAdd is a representation of the C type g_timeout_add.
// TimeoutAddFull is a representation of the C type g_timeout_add_full.
// TimeoutAddSeconds is a representation of the C type g_timeout_add_seconds.
// TimeoutAddSecondsFull is a representation of the C type g_timeout_add_seconds_full.
// TimeoutSourceNew is a representation of the C type g_timeout_source_new.
// TimeoutSourceNewSeconds is a representation of the C type g_timeout_source_new_seconds.
// TrashStackHeight is a representation of the C type g_trash_stack_height.
// TrashStackPeek is a representation of the C type g_trash_stack_peek.
// TrashStackPop is a representation of the C type g_trash_stack_pop.
// TrashStackPush is a representation of the C type g_trash_stack_push.
// TryMalloc is a representation of the C type g_try_malloc.
// TryMalloc0 is a representation of the C type g_try_malloc0.
// TryMalloc0N is a representation of the C type g_try_malloc0_n.
// TryMallocN is a representation of the C type g_try_malloc_n.
// TryRealloc is a representation of the C type g_try_realloc.
// TryReallocN is a representation of the C type g_try_realloc_n.
// Ucs4ToUtf16 is a representation of the C type g_ucs4_to_utf16.
// Ucs4ToUtf8 is a representation of the C type g_ucs4_to_utf8.
// UnicharBreakType is a representation of the C type g_unichar_break_type.
// UnicharCombiningClass is a representation of the C type g_unichar_combining_class.
// UnicharCompose is a representation of the C type g_unichar_compose.
// UnicharDecompose is a representation of the C type g_unichar_decompose.
// UnicharDigitValue is a representation of the C type g_unichar_digit_value.
// UnicharFullyDecompose is a representation of the C type g_unichar_fully_decompose.
// UnicharGetMirrorChar is a representation of the C type g_unichar_get_mirror_char.
// UnicharGetScript is a representation of the C type g_unichar_get_script.
// UnicharIsalnum is a representation of the C type g_unichar_isalnum.
// UnicharIsalpha is a representation of the C type g_unichar_isalpha.
// UnicharIscntrl is a representation of the C type g_unichar_iscntrl.
// UnicharIsdefined is a representation of the C type g_unichar_isdefined.
// UnicharIsdigit is a representation of the C type g_unichar_isdigit.
// UnicharIsgraph is a representation of the C type g_unichar_isgraph.
// UnicharIslower is a representation of the C type g_unichar_islower.
// UnicharIsmark is a representation of the C type g_unichar_ismark.
// UnicharIsprint is a representation of the C type g_unichar_isprint.
// UnicharIspunct is a representation of the C type g_unichar_ispunct.
// UnicharIsspace is a representation of the C type g_unichar_isspace.
// UnicharIstitle is a representation of the C type g_unichar_istitle.
// UnicharIsupper is a representation of the C type g_unichar_isupper.
// UnicharIswide is a representation of the C type g_unichar_iswide.
// UnicharIswideCjk is a representation of the C type g_unichar_iswide_cjk.
// UnicharIsxdigit is a representation of the C type g_unichar_isxdigit.
// UnicharIszerowidth is a representation of the C type g_unichar_iszerowidth.
// UnicharToUtf8 is a representation of the C type g_unichar_to_utf8.
// UnicharTolower is a representation of the C type g_unichar_tolower.
// UnicharTotitle is a representation of the C type g_unichar_totitle.
// UnicharToupper is a representation of the C type g_unichar_toupper.
// UnicharType is a representation of the C type g_unichar_type.
// UnicharValidate is a representation of the C type g_unichar_validate.
// UnicharXdigitValue is a representation of the C type g_unichar_xdigit_value.
// UnicodeCanonicalDecomposition is a representation of the C type g_unicode_canonical_decomposition.
// UnicodeCanonicalOrdering is a representation of the C type g_unicode_canonical_ordering.
// UnicodeScriptFromIso15924 is a representation of the C type g_unicode_script_from_iso15924.
// UnicodeScriptToIso15924 is a representation of the C type g_unicode_script_to_iso15924.
// UnixErrorQuark is a representation of the C type g_unix_error_quark.
// UnixFdAdd is a representation of the C type g_unix_fd_add.
// UnixFdAddFull is a representation of the C type g_unix_fd_add_full.
// UnixFdSourceNew is a representation of the C type g_unix_fd_source_new.
// UnixOpenPipe is a representation of the C type g_unix_open_pipe.
// UnixSetFdNonblocking is a representation of the C type g_unix_set_fd_nonblocking.
// UnixSignalAdd is a representation of the C type g_unix_signal_add.
// UnixSignalAddFull is a representation of the C type g_unix_signal_add_full.
// UnixSignalSourceNew is a representation of the C type g_unix_signal_source_new.
// Unlink is a representation of the C type g_unlink.
// Unsetenv is a representation of the C type g_unsetenv.
// UriEscapeString is a representation of the C type g_uri_escape_string.
// UriListExtractUris is a representation of the C type g_uri_list_extract_uris.
// UriParseScheme is a representation of the C type g_uri_parse_scheme.
// UriUnescapeSegment is a representation of the C type g_uri_unescape_segment.
// UriUnescapeString is a representation of the C type g_uri_unescape_string.
// Usleep is a representation of the C type g_usleep.
// Utf16ToUcs4 is a representation of the C type g_utf16_to_ucs4.
// Utf16ToUtf8 is a representation of the C type g_utf16_to_utf8.
// Utf8Casefold is a representation of the C type g_utf8_casefold.
// Utf8Collate is a representation of the C type g_utf8_collate.
// Utf8CollateKey is a representation of the C type g_utf8_collate_key.
// Utf8CollateKeyForFilename is a representation of the C type g_utf8_collate_key_for_filename.
// Utf8FindNextChar is a representation of the C type g_utf8_find_next_char.
// Utf8FindPrevChar is a representation of the C type g_utf8_find_prev_char.
// Utf8GetChar is a representation of the C type g_utf8_get_char.
// Utf8GetCharValidated is a representation of the C type g_utf8_get_char_validated.
// Utf8MakeValid is a representation of the C type g_utf8_make_valid.
// Utf8Normalize is a representation of the C type g_utf8_normalize.
// Utf8OffsetToPointer is a representation of the C type g_utf8_offset_to_pointer.
// Utf8PointerToOffset is a representation of the C type g_utf8_pointer_to_offset.
// Utf8PrevChar is a representation of the C type g_utf8_prev_char.
// Utf8Strchr is a representation of the C type g_utf8_strchr.
// Utf8Strdown is a representation of the C type g_utf8_strdown.
// Utf8Strlen is a representation of the C type g_utf8_strlen.
// Utf8Strncpy is a representation of the C type g_utf8_strncpy.
// Utf8Strrchr is a representation of the C type g_utf8_strrchr.
// Utf8Strreverse is a representation of the C type g_utf8_strreverse.
// Utf8Strup is a representation of the C type g_utf8_strup.
// Utf8Substring is a representation of the C type g_utf8_substring.
// Utf8ToUcs4 is a representation of the C type g_utf8_to_ucs4.
// Utf8ToUcs4Fast is a representation of the C type g_utf8_to_ucs4_fast.
// Utf8ToUtf16 is a representation of the C type g_utf8_to_utf16.
// Utf8Validate is a representation of the C type g_utf8_validate.
// UuidStringIsValid is a representation of the C type g_uuid_string_is_valid.
// UuidStringRandom is a representation of the C type g_uuid_string_random.
// VariantGetGtype is a representation of the C type g_variant_get_gtype.
// VariantIsObjectPath is a representation of the C type g_variant_is_object_path.
// VariantIsSignature is a representation of the C type g_variant_is_signature.
// VariantParse is a representation of the C type g_variant_parse.
// VariantParseErrorPrintContext is a representation of the C type g_variant_parse_error_print_context.
// VariantParseErrorQuark is a representation of the C type g_variant_parse_error_quark.
// VariantParserGetErrorQuark is a representation of the C type g_variant_parser_get_error_quark.
// VariantTypeChecked is a representation of the C type g_variant_type_checked_.
// VariantTypeStringIsValid is a representation of the C type g_variant_type_string_is_valid.
// VariantTypeStringScan is a representation of the C type g_variant_type_string_scan.
// Vasprintf is a representation of the C type g_vasprintf.
// Vfprintf is a representation of the C type g_vfprintf.
// Vprintf is a representation of the C type g_vprintf.
// Vsnprintf is a representation of the C type g_vsnprintf.
// Vsprintf is a representation of the C type g_vsprintf.
// WarnMessage is a representation of the C type g_warn_message.
