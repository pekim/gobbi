// Code generated - DO NOT EDIT.

package gobject

// BoxedCopy is a representation of the C type g_boxed_copy.
// BoxedFree is a representation of the C type g_boxed_free.
// BoxedTypeRegisterStatic is a representation of the C type g_boxed_type_register_static.
// CclosureMarshalBooleanBoxedBoxed is a representation of the C type g_cclosure_marshal_BOOLEAN__BOXED_BOXED.
// CclosureMarshalBooleanFlags is a representation of the C type g_cclosure_marshal_BOOLEAN__FLAGS.
// CclosureMarshalStringObjectPointer is a representation of the C type g_cclosure_marshal_STRING__OBJECT_POINTER.
// CclosureMarshalVoidBoolean is a representation of the C type g_cclosure_marshal_VOID__BOOLEAN.
// CclosureMarshalVoidBoxed is a representation of the C type g_cclosure_marshal_VOID__BOXED.
// CclosureMarshalVoidChar is a representation of the C type g_cclosure_marshal_VOID__CHAR.
// CclosureMarshalVoidDouble is a representation of the C type g_cclosure_marshal_VOID__DOUBLE.
// CclosureMarshalVoidEnum is a representation of the C type g_cclosure_marshal_VOID__ENUM.
// CclosureMarshalVoidFlags is a representation of the C type g_cclosure_marshal_VOID__FLAGS.
// CclosureMarshalVoidFloat is a representation of the C type g_cclosure_marshal_VOID__FLOAT.
// CclosureMarshalVoidInt is a representation of the C type g_cclosure_marshal_VOID__INT.
// CclosureMarshalVoidLong is a representation of the C type g_cclosure_marshal_VOID__LONG.
// CclosureMarshalVoidObject is a representation of the C type g_cclosure_marshal_VOID__OBJECT.
// CclosureMarshalVoidParam is a representation of the C type g_cclosure_marshal_VOID__PARAM.
// CclosureMarshalVoidPointer is a representation of the C type g_cclosure_marshal_VOID__POINTER.
// CclosureMarshalVoidString is a representation of the C type g_cclosure_marshal_VOID__STRING.
// CclosureMarshalVoidUchar is a representation of the C type g_cclosure_marshal_VOID__UCHAR.
// CclosureMarshalVoidUint is a representation of the C type g_cclosure_marshal_VOID__UINT.
// CclosureMarshalVoidUintPointer is a representation of the C type g_cclosure_marshal_VOID__UINT_POINTER.
// CclosureMarshalVoidUlong is a representation of the C type g_cclosure_marshal_VOID__ULONG.
// CclosureMarshalVoidVariant is a representation of the C type g_cclosure_marshal_VOID__VARIANT.
// CclosureMarshalVoidVoid is a representation of the C type g_cclosure_marshal_VOID__VOID.
// CclosureMarshalGeneric is a representation of the C type g_cclosure_marshal_generic.
// CclosureNew is a representation of the C type g_cclosure_new.
// CclosureNewObject is a representation of the C type g_cclosure_new_object.
// CclosureNewObjectSwap is a representation of the C type g_cclosure_new_object_swap.
// CclosureNewSwap is a representation of the C type g_cclosure_new_swap.
// ClearObject is a representation of the C type g_clear_object.
// EnumCompleteTypeInfo is a representation of the C type g_enum_complete_type_info.
// EnumGetValue is a representation of the C type g_enum_get_value.
// EnumGetValueByName is a representation of the C type g_enum_get_value_by_name.
// EnumGetValueByNick is a representation of the C type g_enum_get_value_by_nick.
// EnumRegisterStatic is a representation of the C type g_enum_register_static.
// EnumToString is a representation of the C type g_enum_to_string.
// FlagsCompleteTypeInfo is a representation of the C type g_flags_complete_type_info.
// FlagsGetFirstValue is a representation of the C type g_flags_get_first_value.
// FlagsGetValueByName is a representation of the C type g_flags_get_value_by_name.
// FlagsGetValueByNick is a representation of the C type g_flags_get_value_by_nick.
// FlagsRegisterStatic is a representation of the C type g_flags_register_static.
// FlagsToString is a representation of the C type g_flags_to_string.
// GtypeGetType is a representation of the C type g_gtype_get_type.
// ParamSpecBoolean is a representation of the C type g_param_spec_boolean.
// ParamSpecBoxed is a representation of the C type g_param_spec_boxed.
// ParamSpecChar is a representation of the C type g_param_spec_char.
// ParamSpecDouble is a representation of the C type g_param_spec_double.
// ParamSpecEnum is a representation of the C type g_param_spec_enum.
// ParamSpecFlags is a representation of the C type g_param_spec_flags.
// ParamSpecFloat is a representation of the C type g_param_spec_float.
// ParamSpecGtype is a representation of the C type g_param_spec_gtype.
// ParamSpecInt is a representation of the C type g_param_spec_int.
// ParamSpecInt64 is a representation of the C type g_param_spec_int64.
// ParamSpecLong is a representation of the C type g_param_spec_long.
// ParamSpecObject is a representation of the C type g_param_spec_object.
// ParamSpecOverride is a representation of the C type g_param_spec_override.
// ParamSpecParam is a representation of the C type g_param_spec_param.
// ParamSpecPointer is a representation of the C type g_param_spec_pointer.
// ParamSpecPoolNew is a representation of the C type g_param_spec_pool_new.
// ParamSpecString is a representation of the C type g_param_spec_string.
// ParamSpecUchar is a representation of the C type g_param_spec_uchar.
// ParamSpecUint is a representation of the C type g_param_spec_uint.
// ParamSpecUint64 is a representation of the C type g_param_spec_uint64.
// ParamSpecUlong is a representation of the C type g_param_spec_ulong.
// ParamSpecUnichar is a representation of the C type g_param_spec_unichar.
// ParamSpecValueArray is a representation of the C type g_param_spec_value_array.
// ParamSpecVariant is a representation of the C type g_param_spec_variant.
// ParamTypeRegisterStatic is a representation of the C type g_param_type_register_static.
// ParamValueConvert is a representation of the C type g_param_value_convert.
// ParamValueDefaults is a representation of the C type g_param_value_defaults.
// ParamValueSetDefault is a representation of the C type g_param_value_set_default.
// ParamValueValidate is a representation of the C type g_param_value_validate.
// ParamValuesCmp is a representation of the C type g_param_values_cmp.
// PointerTypeRegisterStatic is a representation of the C type g_pointer_type_register_static.
// SignalAccumulatorFirstWins is a representation of the C type g_signal_accumulator_first_wins.
// SignalAccumulatorTrueHandled is a representation of the C type g_signal_accumulator_true_handled.
// SignalAddEmissionHook is a representation of the C type g_signal_add_emission_hook.
// SignalChainFromOverridden is a representation of the C type g_signal_chain_from_overridden.
// SignalChainFromOverriddenHandler is a representation of the C type g_signal_chain_from_overridden_handler.
// SignalConnectClosure is a representation of the C type g_signal_connect_closure.
// SignalConnectClosureById is a representation of the C type g_signal_connect_closure_by_id.
// SignalConnectData is a representation of the C type g_signal_connect_data.
// SignalConnectObject is a representation of the C type g_signal_connect_object.
// SignalEmit is a representation of the C type g_signal_emit.
// SignalEmitByName is a representation of the C type g_signal_emit_by_name.
// SignalEmitValist is a representation of the C type g_signal_emit_valist.
// SignalEmitv is a representation of the C type g_signal_emitv.
// SignalGetInvocationHint is a representation of the C type g_signal_get_invocation_hint.
// SignalHandlerBlock is a representation of the C type g_signal_handler_block.
// SignalHandlerDisconnect is a representation of the C type g_signal_handler_disconnect.
// SignalHandlerFind is a representation of the C type g_signal_handler_find.
// SignalHandlerIsConnected is a representation of the C type g_signal_handler_is_connected.
// SignalHandlerUnblock is a representation of the C type g_signal_handler_unblock.
// SignalHandlersBlockMatched is a representation of the C type g_signal_handlers_block_matched.
// SignalHandlersDestroy is a representation of the C type g_signal_handlers_destroy.
// SignalHandlersDisconnectMatched is a representation of the C type g_signal_handlers_disconnect_matched.
// SignalHandlersUnblockMatched is a representation of the C type g_signal_handlers_unblock_matched.
// SignalHasHandlerPending is a representation of the C type g_signal_has_handler_pending.
// SignalListIds is a representation of the C type g_signal_list_ids.
// SignalLookup is a representation of the C type g_signal_lookup.
// SignalName is a representation of the C type g_signal_name.
// SignalNew is a representation of the C type g_signal_new.
// SignalNewClassHandler is a representation of the C type g_signal_new_class_handler.
// SignalNewValist is a representation of the C type g_signal_new_valist.
// SignalNewv is a representation of the C type g_signal_newv.
// SignalOverrideClassClosure is a representation of the C type g_signal_override_class_closure.
// SignalOverrideClassHandler is a representation of the C type g_signal_override_class_handler.
// SignalParseName is a representation of the C type g_signal_parse_name.
// SignalQuery is a representation of the C type g_signal_query.
// SignalRemoveEmissionHook is a representation of the C type g_signal_remove_emission_hook.
// SignalSetVaMarshaller is a representation of the C type g_signal_set_va_marshaller.
// SignalStopEmission is a representation of the C type g_signal_stop_emission.
// SignalStopEmissionByName is a representation of the C type g_signal_stop_emission_by_name.
// SignalTypeCclosureNew is a representation of the C type g_signal_type_cclosure_new.
// SourceSetClosure is a representation of the C type g_source_set_closure.
// SourceSetDummyCallback is a representation of the C type g_source_set_dummy_callback.
// StrdupValueContents is a representation of the C type g_strdup_value_contents.
// TypeAddClassCacheFunc is a representation of the C type g_type_add_class_cache_func.
// TypeAddClassPrivate is a representation of the C type g_type_add_class_private.
// TypeAddInstancePrivate is a representation of the C type g_type_add_instance_private.
// TypeAddInterfaceCheck is a representation of the C type g_type_add_interface_check.
// TypeAddInterfaceDynamic is a representation of the C type g_type_add_interface_dynamic.
// TypeAddInterfaceStatic is a representation of the C type g_type_add_interface_static.
// TypeCheckClassCast is a representation of the C type g_type_check_class_cast.
// TypeCheckClassIsA is a representation of the C type g_type_check_class_is_a.
// TypeCheckInstance is a representation of the C type g_type_check_instance.
// TypeCheckInstanceCast is a representation of the C type g_type_check_instance_cast.
// TypeCheckInstanceIsA is a representation of the C type g_type_check_instance_is_a.
// TypeCheckInstanceIsFundamentallyA is a representation of the C type g_type_check_instance_is_fundamentally_a.
// TypeCheckIsValueType is a representation of the C type g_type_check_is_value_type.
// TypeCheckValue is a representation of the C type g_type_check_value.
// TypeCheckValueHolds is a representation of the C type g_type_check_value_holds.
// TypeChildren is a representation of the C type g_type_children.
// TypeClassAdjustPrivateOffset is a representation of the C type g_type_class_adjust_private_offset.
// TypeClassPeek is a representation of the C type g_type_class_peek.
// TypeClassPeekStatic is a representation of the C type g_type_class_peek_static.
// TypeClassRef is a representation of the C type g_type_class_ref.
// TypeCreateInstance is a representation of the C type g_type_create_instance.
// TypeDefaultInterfacePeek is a representation of the C type g_type_default_interface_peek.
// TypeDefaultInterfaceRef is a representation of the C type g_type_default_interface_ref.
// TypeDefaultInterfaceUnref is a representation of the C type g_type_default_interface_unref.
// TypeDepth is a representation of the C type g_type_depth.
// TypeEnsure is a representation of the C type g_type_ensure.
// TypeFreeInstance is a representation of the C type g_type_free_instance.
// TypeFromName is a representation of the C type g_type_from_name.
// TypeFundamental is a representation of the C type g_type_fundamental.
// TypeFundamentalNext is a representation of the C type g_type_fundamental_next.
// TypeGetInstanceCount is a representation of the C type g_type_get_instance_count.
// TypeGetPlugin is a representation of the C type g_type_get_plugin.
// TypeGetQdata is a representation of the C type g_type_get_qdata.
// TypeGetTypeRegistrationSerial is a representation of the C type g_type_get_type_registration_serial.
// TypeInit is a representation of the C type g_type_init.
// TypeInitWithDebugFlags is a representation of the C type g_type_init_with_debug_flags.
// TypeInterfaceAddPrerequisite is a representation of the C type g_type_interface_add_prerequisite.
// TypeInterfaceGetPlugin is a representation of the C type g_type_interface_get_plugin.
// TypeInterfacePeek is a representation of the C type g_type_interface_peek.
// TypeInterfacePrerequisites is a representation of the C type g_type_interface_prerequisites.
// TypeInterfaces is a representation of the C type g_type_interfaces.
// TypeIsA is a representation of the C type g_type_is_a.
// TypeName is a representation of the C type g_type_name.
// TypeNameFromClass is a representation of the C type g_type_name_from_class.
// TypeNameFromInstance is a representation of the C type g_type_name_from_instance.
// TypeNextBase is a representation of the C type g_type_next_base.
// TypeParent is a representation of the C type g_type_parent.
// TypeQname is a representation of the C type g_type_qname.
// TypeQuery is a representation of the C type g_type_query.
// TypeRegisterDynamic is a representation of the C type g_type_register_dynamic.
// TypeRegisterFundamental is a representation of the C type g_type_register_fundamental.
// TypeRegisterStatic is a representation of the C type g_type_register_static.
// TypeRegisterStaticSimple is a representation of the C type g_type_register_static_simple.
// TypeRemoveClassCacheFunc is a representation of the C type g_type_remove_class_cache_func.
// TypeRemoveInterfaceCheck is a representation of the C type g_type_remove_interface_check.
// TypeSetQdata is a representation of the C type g_type_set_qdata.
// TypeTestFlags is a representation of the C type g_type_test_flags.
// TypeValueTablePeek is a representation of the C type g_type_value_table_peek.
// ValueRegisterTransformFunc is a representation of the C type g_value_register_transform_func.
// ValueTypeCompatible is a representation of the C type g_value_type_compatible.
// ValueTypeTransformable is a representation of the C type g_value_type_transformable.
